using System;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using com.digitalwave.Utility.Controls;
using System.Windows.Forms;
using System.Data;
using System.IO;
using weCare.Core.Entity; 
using com.digitalwave.common.ICD10.Tool;
using com.digitalwave.Emr.Signature_gui;
using com.digitalwave.emr.BEDExplorer; 

namespace iCare
{
    /// <summary>
    /// 住院病案首页(广东版)
    /// </summary>
    public class frmInHospitalMainRecord_2009 : frmHRPBaseForm, PublicFunction
    {
        #region Define

        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.Label lblIDCardTitle;
        private System.Windows.Forms.Label lblOccupationTitle;
        private System.Windows.Forms.Label lblNationTitle;
        private System.Windows.Forms.Label lblNationalityTitle;
        private System.Windows.Forms.Label lblMarriedTitle;
        private System.Windows.Forms.Label lblOfficePCTitle;
        private System.Windows.Forms.Label lblOfficeAddressTitle;
        private System.Windows.Forms.Label lblOfficePhoneTitle;
        private System.Windows.Forms.Label lblHmePCTitle;
        private System.Windows.Forms.Label lblHomeAddressTitle;
        private System.Windows.Forms.Label lblInHospitalSetionTitle;
        private System.Windows.Forms.Label lblMasterDiagnose;
        private System.Windows.Forms.DataGrid dtgOperation;
        private System.Windows.Forms.DataGrid dtgBaby;
        private System.Windows.Forms.Label lblDeliveryChild;
        private System.Windows.Forms.Label lblOperationAmt;
        private System.Windows.Forms.Label lblBloodTran;
        private System.Windows.Forms.Label lblO2;
        private System.Windows.Forms.Label lblAssayAmt;
        private System.Windows.Forms.Label lblRadiationAmt;
        private System.Windows.Forms.Label lblWMAmt;
        private System.Windows.Forms.Label lblBedAmt;
        private System.Windows.Forms.Label lblTotalAmt;
        private System.Windows.Forms.TreeView trvTime;
        private System.Windows.Forms.Label lblHomePlaceTitle;
        private System.Windows.Forms.Label lblOutHospitalDateTitle;
        private System.Windows.Forms.Label lblInSickRoomTitle;
        private System.Windows.Forms.Label lblInHospitalDaysTitle;
        private System.Windows.Forms.Label lblOutSickRoomTitle;
        private System.Windows.Forms.Label lblOutHospitalSetionTitle;
        private System.Windows.Forms.Label lblDays;
        private System.Windows.Forms.Label lblDiagnosisTitle;
        private System.Windows.Forms.Label lblConditionWhenInTitle;
        private System.Windows.Forms.Label lblConfirmDiagnosisDateTitle;
        private com.digitalwave.controls.ctlRichTextBox txtMainDiagnosis;
        private System.Windows.Forms.Label lblPathologyDiagnosisTitle;
        private com.digitalwave.controls.ctlRichTextBox txtPathologyDiagnosis;
        private com.digitalwave.controls.ctlRichTextBox txtScacheSource;
        private System.Windows.Forms.Label lblScacheSourceTitle;
        private System.Windows.Forms.Label lblSensitivetitle;
        private com.digitalwave.controls.ctlRichTextBox txtSensitive;
        private System.Windows.Forms.Label lblConditionTitle;
        private com.digitalwave.controls.ctlRichTextBox txtICD_10OfMain;
        private com.digitalwave.controls.ctlRichTextBox txtSalveTimes;
        private System.Windows.Forms.Label lblSalveTitle;
        private System.Windows.Forms.Label lblTims2;
        private System.Windows.Forms.Label lblTimes3;
        private com.digitalwave.controls.ctlRichTextBox txtSalveSuccess;
        private System.Windows.Forms.Label lblSuccessTitle;
        private System.Windows.Forms.Label lblQualityTitle;
        private System.Windows.Forms.Label lblQCDateTitle;
        //private com.digitalwave.Utility.Controls.ctlTimePicker dtpQCTime;
        private System.Windows.Forms.DateTimePicker dtpQCTime;
        private System.Windows.Forms.Label lblRTTitle;
        private System.Windows.Forms.GroupBox gpbRTMode;
        private System.Windows.Forms.RadioButton rdbRTAssistant;
        private System.Windows.Forms.RadioButton rdbRTCure;
        private System.Windows.Forms.RadioButton rdbRTAppeasement;
        private System.Windows.Forms.GroupBox gpbRTEquipment;
        private System.Windows.Forms.CheckBox chkRTLacuna;
        private System.Windows.Forms.CheckBox chkRTX_Ray;
        private System.Windows.Forms.CheckBox chkRTAccelerator;
        private System.Windows.Forms.GroupBox gpbRTRule;
        private System.Windows.Forms.RadioButton rdbRTSection;
        private System.Windows.Forms.RadioButton rdbContinue;
        private System.Windows.Forms.RadioButton rdbRTGap;
        private System.Windows.Forms.GroupBox gpbOriginalDisease;
        private System.Windows.Forms.RadioButton rdbOriginalDiseaseRepeat;
        private System.Windows.Forms.RadioButton rdbOriginalDiseaseFirst;
        private System.Windows.Forms.Label lblOriginalDiseaseTitle;
        private System.Windows.Forms.Label lblOriginalDiseaseDose;
        private System.Windows.Forms.Label lblUnit2;
        private System.Windows.Forms.Label lblUnit3;
        private com.digitalwave.controls.ctlRichTextBox txtOriginalDiseaseGy;
        private com.digitalwave.controls.ctlRichTextBox txtOriginalDiseaseTimes;
        private com.digitalwave.controls.ctlRichTextBox txtOriginalDiseaseDays;
        private System.Windows.Forms.Label lblOriginalDiseaseBeginDateTitle;
        private System.Windows.Forms.Label lblOriginalDiseaseTo;
        private System.Windows.Forms.Label lblLymphToTitle;
        private System.Windows.Forms.Label lblLymphBeginDateTitle;
        private com.digitalwave.controls.ctlRichTextBox txtLymphDays;
        private com.digitalwave.controls.ctlRichTextBox txtLymphTimes;
        private com.digitalwave.controls.ctlRichTextBox txtLymphGy;
        private System.Windows.Forms.Label lblLymphUnit1;
        private System.Windows.Forms.Label lblLymphUnit2;
        private System.Windows.Forms.Label lblLympUnit3;
        private System.Windows.Forms.Label lblLymphDose;
        private System.Windows.Forms.Label lblLymphTitle;
        private System.Windows.Forms.GroupBox gpbLymph;
        private System.Windows.Forms.RadioButton rdbLymphRepeat;
        private System.Windows.Forms.RadioButton rdbLymphFirst;
        private System.Windows.Forms.Label lblMetastasisTo;
        private System.Windows.Forms.Label lblMetastasisBeginDateTitle;
        private com.digitalwave.controls.ctlRichTextBox txtMetastasisDays;
        private com.digitalwave.controls.ctlRichTextBox txtMetastasisTimes;
        private com.digitalwave.controls.ctlRichTextBox txtMetastasisGy;
        private System.Windows.Forms.Label lblMetastasisUnit1;
        private System.Windows.Forms.Label lblMetastasisUnit2;
        private System.Windows.Forms.Label lblMetastasisUnit3;
        private System.Windows.Forms.Label lblMetastasisDose;
        private System.Windows.Forms.Label lblMetastasisTitle;
        private System.Windows.Forms.Label lblChemotherapyTitle;
        private System.Windows.Forms.GroupBox gpbChemotherapyMode;
        private System.Windows.Forms.RadioButton rdbChemotherapyNewMedicine;
        private System.Windows.Forms.RadioButton rdbChemotherapyAssistant;
        private System.Windows.Forms.RadioButton rdbChemotherapyAssisantNew;
        private System.Windows.Forms.RadioButton rdbChemotherapyAppeasement;
        private System.Windows.Forms.RadioButton rdbChemotherapyCure;
        private System.Windows.Forms.GroupBox gpbChemotherapyRule;
        private System.Windows.Forms.CheckBox chkChemotherapyOther;
        private System.Windows.Forms.CheckBox chkChemotherapyOtherTry;
        private System.Windows.Forms.CheckBox chkChemotherapySpinal;
        private System.Windows.Forms.CheckBox chkChemotherapyAbdomen;
        private System.Windows.Forms.CheckBox chkChemotherapyThorax;
        private System.Windows.Forms.CheckBox chkChemotherapyIntubate;
        private System.Windows.Forms.CheckBox chkChemotherapyLocal;
        private System.Windows.Forms.CheckBox chkChemotherapyWholeBody;
        private System.Windows.Forms.DataGrid dtgChemotherapy;
        private System.Windows.Forms.Label lblCMFinishedAmt;
        private com.digitalwave.controls.ctlRichTextBox txtTotalAmt;
        private com.digitalwave.controls.ctlRichTextBox txtRadiationAmt;
        private com.digitalwave.controls.ctlRichTextBox txtBedAmt;
        private com.digitalwave.controls.ctlRichTextBox txtDeliveryChildAmt;
        private com.digitalwave.controls.ctlRichTextBox txtBloodAmt;
        private com.digitalwave.controls.ctlRichTextBox txtAssayAmt;
        private com.digitalwave.controls.ctlRichTextBox txtCMFinishedAmt;
        private com.digitalwave.controls.ctlRichTextBox txtOperationAmt;
        private com.digitalwave.controls.ctlRichTextBox txtWMAmt;
        private com.digitalwave.controls.ctlRichTextBox txtO2Amt;
        private com.digitalwave.controls.ctlRichTextBox txtCMSemiFinishedAmt;
        private System.Windows.Forms.Label lblCMSemiFinishedTitle;
        private com.digitalwave.controls.ctlRichTextBox txtNurseAmt;
        private System.Windows.Forms.Label lblNurseAmt;
        private com.digitalwave.controls.ctlRichTextBox txtTreatmentAmt;
        private System.Windows.Forms.Label lblTreatmentAmt;
        private com.digitalwave.controls.ctlRichTextBox txtOtherAmt1;
        private System.Windows.Forms.Label lblOtherAmt1;
        private com.digitalwave.controls.ctlRichTextBox txtBabyAmt;
        private com.digitalwave.controls.ctlRichTextBox txtAnaethesiaAmt;
        private com.digitalwave.controls.ctlRichTextBox txtAccompanyAmt;
        private com.digitalwave.controls.ctlRichTextBox txtCheckAmt;
        private System.Windows.Forms.Label lblAccompanyAmt;
        private System.Windows.Forms.Label lblBabyAmt;
        private System.Windows.Forms.Label lblAnaethisiaAmt;
        private System.Windows.Forms.Label lblCheckAmt;
        private com.digitalwave.controls.ctlRichTextBox txtOtherAmt2;
        private com.digitalwave.controls.ctlRichTextBox txtOtherAmt3;
        private System.Windows.Forms.Label lblComma;
        private System.Windows.Forms.Label lblComma2;
        private System.Windows.Forms.Label lblCorpseCheck;
        private System.Windows.Forms.Label lblFirstCaseTitle;
        private System.Windows.Forms.Label lblFollowTitle;
        private com.digitalwave.controls.ctlRichTextBox txtFollow_Week;
        private System.Windows.Forms.Label lblFollowDate;
        private System.Windows.Forms.Label lblWeek;
        private System.Windows.Forms.Label lblFollowMonth;
        private com.digitalwave.controls.ctlRichTextBox txtFollow_Month;
        private System.Windows.Forms.Label lblFollowYear;
        private com.digitalwave.controls.ctlRichTextBox txtFollow_Year;
        private System.Windows.Forms.Label lblModelCaseTitle;
        private System.Windows.Forms.Label lblBloodTransAction;
        private System.Windows.Forms.Label lblBloodTypeDesp;
        private com.digitalwave.controls.ctlRichTextBox txtBloodType;
        private System.Windows.Forms.Label lblBloodType;
        private System.Windows.Forms.Label lblBloodRh;
        private com.digitalwave.controls.ctlRichTextBox txtRBC;
        private System.Windows.Forms.Label lblRBCUnit;
        private System.Windows.Forms.Label lblBloodComponent;
        private com.digitalwave.controls.ctlRichTextBox txtPLT;
        private System.Windows.Forms.Label lblUnit10;
        private System.Windows.Forms.Label lblPLT;
        private com.digitalwave.controls.ctlRichTextBox txtPlasm;
        private System.Windows.Forms.Label lblUnit11;
        private System.Windows.Forms.Label lblPlasm;
        private com.digitalwave.controls.ctlRichTextBox txtWholeBlood;
        private System.Windows.Forms.Label lblUnit13;
        private System.Windows.Forms.Label lblWholeBlood;
        private com.digitalwave.controls.ctlRichTextBox txtOtherBlood;
        private System.Windows.Forms.Label lblUnit14;
        private System.Windows.Forms.Label lblOtherBlood;
        private com.digitalwave.controls.ctlRichTextBox txtNurseLevelI;
        private System.Windows.Forms.Label lblNurseLevelI;
        private com.digitalwave.controls.ctlRichTextBox txtTOPLevel;
        private System.Windows.Forms.Label lblUnit21;
        private System.Windows.Forms.Label lblNurseLevel;
        private com.digitalwave.controls.ctlRichTextBox txtLongDistanctConsultation;
        private System.Windows.Forms.Label lblLongDistanceConsultation;
        private com.digitalwave.controls.ctlRichTextBox txtConsultation;
        private System.Windows.Forms.Label lblUnit15;
        private System.Windows.Forms.Label lblConsultation;
        private System.Windows.Forms.Label lblUnit20;
        private System.Windows.Forms.Label lblUnit22;
        private System.Windows.Forms.Label lblUnit23;
        private com.digitalwave.controls.ctlRichTextBox txtNurseLevelII;
        private System.Windows.Forms.Label lblNurseLevelII;
        private System.Windows.Forms.Label lblUnit24;
        private com.digitalwave.controls.ctlRichTextBox txtNurseLevelIII;
        private System.Windows.Forms.Label lblNurseLevelIII;
        private com.digitalwave.controls.ctlRichTextBox txtICU;
        private System.Windows.Forms.Label lblUnit25;
        private System.Windows.Forms.Label lblICU;
        private System.Windows.Forms.Label lblUnit26;
        private com.digitalwave.controls.ctlRichTextBox txtSpecialNurse;
        private System.Windows.Forms.Label lblSpecialNurse;
        private System.Windows.Forms.GroupBox gpbLine3;
        private System.Windows.Forms.Label lblInsuranceDesp1;
        private System.Windows.Forms.Label lblTimesTitle;
        private System.Windows.Forms.Label lblTimesInHospital;
        private System.Windows.Forms.Label lblModeOfPaymentTitle;
        private com.digitalwave.controls.ctlRichTextBox txtInsuranceNum;
        private System.Windows.Forms.Label lblInuranceTitle;
        private System.Windows.Forms.Label lblProvince;
        private System.Windows.Forms.Label lblProvinceTitle;
        private System.Windows.Forms.Label lblPatientHistoryNO;
        private com.digitalwave.controls.ctlRichTextBox txtPatientHistoryNO;
        private System.Windows.Forms.DataGridTextBoxColumn dtcDept;
        private System.Windows.Forms.DataGrid dtgChangeDept2;
        private System.Windows.Forms.DataGridTableStyle dataGridTableStyle1;
        private System.Windows.Forms.DataGridTextBoxColumn dtcChangeDept;
        private System.Windows.Forms.DataGridTableStyle dtsBaby;
        private System.Windows.Forms.DataGridTextBoxColumn dtcSeqNo;
        private System.Windows.Forms.DataGridTextBoxColumn dtcWeight;
        private System.Windows.Forms.DataGridTextBoxColumn dtcInfectionTimes;
        private System.Windows.Forms.DataGridTextBoxColumn dtcInfectionName;
        private System.Windows.Forms.DataGridTextBoxColumn dtcICD10;
        private System.Windows.Forms.DataGridTextBoxColumn dtcSalveTimes;
        private System.Windows.Forms.DataGridTextBoxColumn dtcSalveSuccessTimes;
        private System.Windows.Forms.DataGridBoolColumn dtcMale;
        private System.Windows.Forms.DataGridBoolColumn dtcFemale;
        private System.Windows.Forms.DataGridBoolColumn dtcLiveBorn;
        private System.Windows.Forms.DataGridBoolColumn dtcDieBorn;
        private System.Windows.Forms.DataGridBoolColumn dtcDieNotBorn;
        private System.Windows.Forms.DataGridBoolColumn dtcDie;
        private System.Windows.Forms.DataGridBoolColumn dtcChangeDepartment;
        private System.Windows.Forms.DataGridBoolColumn dtcOutHospital;
        private System.Windows.Forms.DataGridBoolColumn dtcNatural;
        private System.Windows.Forms.DataGridBoolColumn dtcSuffocate1;
        private System.Windows.Forms.DataGridBoolColumn dtcSuffocate2;
        private System.Windows.Forms.DataGridTableStyle dtcChemotherapy;
        private System.Windows.Forms.DataGridTextBoxColumn dtcDate;
        private System.Windows.Forms.DataGridTextBoxColumn dtcMedicineName;
        private System.Windows.Forms.DataGridTextBoxColumn dtcPeriod;
        private System.Windows.Forms.DataGridBoolColumn dtcCR;
        private System.Windows.Forms.DataGridBoolColumn dtcPR;
        private System.Windows.Forms.DataGridBoolColumn dtcMR;
        private System.Windows.Forms.DataGridBoolColumn dtcS;
        private System.Windows.Forms.DataGridBoolColumn dtcP;
        private System.Windows.Forms.DataGridBoolColumn dtcNA;
        private com.digitalwave.controls.ctlRichTextBox txtDiagnosis;
        private System.Windows.Forms.CheckBox chkRTCo;
        private com.digitalwave.Utility.Controls.ctlTimePicker dtpConfirmDiagnosisDate;
        private System.Windows.Forms.GroupBox gpbCondictionWhenIn;
        private System.Windows.Forms.RadioButton rdbNormal;
        private System.Windows.Forms.RadioButton rdbEmergency;
        private System.Windows.Forms.RadioButton rdbDanger;
        private System.Windows.Forms.GroupBox gpbQuality;
        private System.Windows.Forms.RadioButton rdbQuality2;
        private System.Windows.Forms.RadioButton rdbQuality1;
        private System.Windows.Forms.RadioButton rdbQuality3;
        private System.Windows.Forms.GroupBox gpbCorpseCheck;
        private System.Windows.Forms.RadioButton rdbCorpseCheckNO;
        private System.Windows.Forms.RadioButton rdbCorpseCheckYes;
        private System.Windows.Forms.GroupBox gpbFirstCase;
        private System.Windows.Forms.RadioButton rdbFirstCaseNO;
        private System.Windows.Forms.RadioButton rdbFirstCaseYes;
        private System.Windows.Forms.GroupBox gpbModelCase;
        private System.Windows.Forms.RadioButton rdbModelCaseNO;
        private System.Windows.Forms.RadioButton rdbModelCaseYes;
        private System.Windows.Forms.RadioButton rdbBloodTransActionNO;
        private System.Windows.Forms.RadioButton rdbBloodTransActionYes;
        private System.Windows.Forms.GroupBox gpbFollow;
        private System.Windows.Forms.RadioButton rdbFollowNO;
        private System.Windows.Forms.RadioButton rdbFollowYes;
        private System.Windows.Forms.GroupBox gpbBloodRh;
        private System.Windows.Forms.RadioButton rdbBloodRh_An;
        private System.Windows.Forms.RadioButton rdbBloodRh_Ka;
        private System.Windows.Forms.GroupBox gpbBloodTransAction;
        private System.Windows.Forms.ListView lsvOperationEmployee;
        private System.Windows.Forms.ColumnHeader clmEmployeeID;
        private System.Windows.Forms.ColumnHeader clmEmployeeName;
        private System.Windows.Forms.ListView lsvAanaesthesiaMode;
        private System.Windows.Forms.ColumnHeader columnHeader3;
        private System.Windows.Forms.ColumnHeader columnHeader4;
        private System.Windows.Forms.ContextMenu m_cmuRichTextBoxMenu;
        private System.Windows.Forms.MenuItem mniDoubleStrikeOutDelete;
        private System.Windows.Forms.Label lblInHospitalDays;
        private System.Windows.Forms.Label lblInSickRoom;
        private System.Windows.Forms.Label lblOutSickRoom;
        private System.Windows.Forms.Label lblOutHospitalSetion;
        private System.Windows.Forms.Label lblInHosptialSetion;
        private System.Windows.Forms.Label lblTimes;
        private System.ComponentModel.IContainer components = null;
        private PinkieControls.ButtonXP m_cmdDoctor;
        private PinkieControls.ButtonXP m_cmdDirectorDt;
        private PinkieControls.ButtonXP m_cmdIntern;
        private PinkieControls.ButtonXP m_cmdDt;
        private PinkieControls.ButtonXP m_cmdQCDt;
        private PinkieControls.ButtonXP m_cmdGraduateStudentIntern;
        private PinkieControls.ButtonXP m_cmdSubDirectorDt;
        private PinkieControls.ButtonXP m_cmdAttendInForAdvancesStudyDt;
        private PinkieControls.ButtonXP m_cmdInHospitalDt;
        private PinkieControls.ButtonXP m_cmdCoder;
        private PinkieControls.ButtonXP m_cmdQCNurse;
        private PinkieControls.ButtonXP m_cmdFillPrint;
        private System.Windows.Forms.Label lblHIV_AbTitle;
        private System.Windows.Forms.Label lblHbsAgTitle;
        private System.Windows.Forms.Label lblHCVAbTitle;
        private com.digitalwave.controls.ctlRichTextBox txtHIV_Ab;
        private com.digitalwave.controls.ctlRichTextBox txtHCV_Ab;
        private com.digitalwave.controls.ctlRichTextBox txtHbsAg;
        private System.Windows.Forms.Label lblAccordBeforeOperationWithAfterTitle;
        private System.Windows.Forms.Label lblAccordInWithOutTitle;
        private System.Windows.Forms.Label lblAccordWithOutHospital;
        private com.digitalwave.controls.ctlRichTextBox txtAccordBeforeOperationWithAfter;
        private com.digitalwave.controls.ctlRichTextBox txtAccordInWithOut;
        private com.digitalwave.controls.ctlRichTextBox txtAccordWithOutHospital;
        private System.Windows.Forms.Label lblAccordRadiateWithPathologyTitle;
        private com.digitalwave.controls.ctlRichTextBox txtAccordRadiateWithPathology;
        private System.Windows.Forms.Label lblAccordClinicWithPathologyTitle;
        private com.digitalwave.controls.ctlRichTextBox txtAccordClinicWithPathology;
        private System.Windows.Forms.GroupBox m_grpDrugAllergy;
        private System.Windows.Forms.GroupBox m_grpAccordWithDiagnosisTitle;
        private System.Windows.Forms.Panel panel1;
        private System.Windows.Forms.Panel panel2;
        private System.Windows.Forms.DataGridTextBoxColumn dtcDiagnosis;
        private System.Windows.Forms.DataGridBoolColumn dtcHealOfMain;
        private System.Windows.Forms.DataGridBoolColumn dtcOnTheMendOfMain;
        private System.Windows.Forms.DataGridBoolColumn dtcNotCureOfMain;
        private System.Windows.Forms.DataGridBoolColumn dtcDieOfMain;
        private System.Windows.Forms.DataGridBoolColumn dtcNotDefineOfMain;
        private System.Windows.Forms.DataGridTextBoxColumn ICD10;
        private System.Windows.Forms.Label lblUnit1;
        private System.Windows.Forms.ImageList imageList1;
        protected com.digitalwave.Utility.Controls.ctlComboBox m_cboCounty;
        protected com.digitalwave.Utility.Controls.ctlComboBox m_cboCity;
        protected com.digitalwave.Utility.Controls.ctlComboBox m_cboProvince;
        private TabControl tabControl2;
        private TabPage tabPage6;
        private TabPage tabPage7;
        private TabPage tabPage8;
        private TabPage tabPage9;
        private TabPage tabPage10;
        private com.digitalwave.common.ICD10.Tool.clsBindICD10 m_objIcd10Bind;
        private Label m_lblOutHospitalDate;
        private ListView m_lsvTransDept;
        private ColumnHeader m_clmFromDept;
        private ColumnHeader m_clmTransDate;
        private ColumnHeader m_clmToDept;
        private TextBox txtDoctor;
        private string m_strRegisterID = "";
        private TextBox txtDt;
        private TextBox txtSubDirectorDt;
        private TextBox txtDirectorDt;
        private TextBox txtInHospitalDt;
        private TextBox txtGraduateStudentIntern;
        private TextBox txtAttendInForAdvancesStudyDt;
        private TextBox txtCoder;
        private TextBox txtQCNurse;
        private TextBox txtIntern;
        private TextBox txtQCDt;
        private TextBox m_txtSign;
        private PinkieControls.ButtonXP m_cmdSign;



        #endregion

        #region
        private ctlTimePicker m_dtpBirthDate;
        private TextBox m_txtNationality;
        private TextBox m_txtCountry;
        private TextBox m_txtOccupation;
        private TextBox m_txtOfficePC;
        private TextBox m_txtOfficeAddress;
        private TextBox m_txtIDCard;
        private TextBox m_txtHomePhone;
        private TextBox m_txtNation;
        private ComboBox m_txtMarried;
        private TextBox m_txtHomeAddress;
        private TextBox m_txtHomePC;
        private TextBox m_txtCompanyName;
        private Label label1;
        private Panel panel3;
        private TextBox m_txtContactManAddress;
        private TextBox m_txtContactManPhone;
        private TextBox m_txtRelation;
        private TextBox m_txtContactMan;
        private TextBox m_txtLinkManzipcode;
        private Label label2;
        private Label lblContactManAddressTitle;
        private Label lblContactManTitle;
        private Label lblRelationTitle;
        private Label lblContactManPhoneTitle;
        private Label label4;
        private TextBox txtDiagnosisICD10;
        private DataGrid dgDiagnosis1;
        private ComboBox m_cboMainSeq;
        private Label label5;
        private DataGrid dgDiagnosis3;
        private DataGrid dgDiagnosis2;
        private DataGridTableStyle dataGridTableStyle2;
        private DataGridTextBoxColumn m_dgtbInDia;
        private DataGridTextBoxColumn m_dgtbInDiaICD;
        private DataGridTableStyle dataGridTableStyle3;
        private DataGridTextBoxColumn m_dgtbOtherDia;
        private DataGridTextBoxColumn m_dgtbOtherDiaICD;
        private DataGridTableStyle dataGridTableStyle4;
        private DataGridTextBoxColumn m_dgtbInfectionDia;
        private DataGridTextBoxColumn m_dgtbInfectionDiaICD;
        private DataGridTextBoxColumn m_dtcInfectionResult;
        private DataGridTextBoxColumn m_dtcOtherDiaResult;

        clsEmrSignToolCollection m_objSign;
        DataTable m_dtbInHospitalDiagnosis = null;
        private DataGridTableStyle dataGridTableStyle5;
        private DataGridTextBoxColumn m_dtcOperationID;
        private DataGridTextBoxColumn m_dtcOperationDate;
        private DataGridTextBoxColumn m_dtcOperationName;
        private DataGridTextBoxColumn m_dtcOperator;
        private DataGridTextBoxColumn m_dtcAssistant1;
        private DataGridTextBoxColumn m_dtcAssistant2;
        private DataGridTextBoxColumn m_dtcAnaesthesiaMode;
        private DataGridTextBoxColumn m_dtcCutLevel;
        private DataGridTextBoxColumn m_dtcAnaesthetist;
        DataTable m_dtbInfectionDiagnosis = null;
        private DataView m_dtvICD = null;
        private DataView m_dtvOp = null;
        private DataView m_dtvEmp = null;
        private DataTable m_dtbICD = null;
        private DataTable m_dtbOp = null;
        private Label m_lblQueryTips;
        private PinkieControls.ButtonXP m_cmdCommit;
        private DataTable m_dtbEmp = null;
        private DataTable m_dtbAna = null;
        private Panel panel4;
        private RadioButton rdbBloodRh_No;
        private RadioButton rdbBloodTransNoAction;
        private Panel panel5;
        private RadioButton radioButton2;
        private RadioButton radioButton1;
        private Panel panel6;
        private RadioButton radioButton4;
        private RadioButton radioButton3;
        private Panel panel7;
        private RadioButton radioButton6;
        private RadioButton radioButton5;
        private com.digitalwave.Controls.ctlMaskedDateTimePicker dtpOriginalDiseaseBeginDate;
        private com.digitalwave.Controls.ctlMaskedDateTimePicker dtpMetastasisEndDate;
        private com.digitalwave.Controls.ctlMaskedDateTimePicker dtpLymphEndDate;
        private com.digitalwave.Controls.ctlMaskedDateTimePicker dtpOriginalDiseaseEndDate;
        private com.digitalwave.Controls.ctlMaskedDateTimePicker dtpMetastasisBeginDate;
        private com.digitalwave.Controls.ctlMaskedDateTimePicker dtpLymphBeginDate;
        #endregion
        private DataView m_dtvAna = null;
        private int isFirstCellChange = 0;
        private ComboBox m_cboModeOfPayment;
        private Button button1;
        private Timer m_timShowTips;
        private bool m_blnIsDateRight = true;
        private Label label6;
        protected ctlTimePicker m_dtpUpdateDate;
        private DataTable m_dtbPayTypeRelation = null;
        public frmInHospitalMainRecord_2009()
        {
            //DateTime dtmUpdate;string p_strUpdate
            //DateTime.TryParse(p_strUpdate, out dtmUpdate);
            //MessageBox.Show(dtmUpdate.ToString());
            // This call is required by the Windows Form Designer.
            InitializeComponent();
            //指明医生工作站表单
            intFormType = 1;

            m_mthSetRichTextBoxAttribInControl(this);

            m_objDomain = new clsInHospitalMainRecordDomain();

            #region DataTable Define
            m_mthInitDataTable();
            #endregion

            m_strOpenDate = null;
            m_bolIfHasSave = false;
            m_objPublicDomain = new clsPublicDomain();
            m_objCollection = new clsInHospitalMainRecord_Collection();

            m_mthSetControlReadOnly(this, true);

            //签名常用值
            m_objSign = new clsEmrSignToolCollection();
            //m_mthBindEmployeeSign(按钮,签名框,医生1or护士2,身份验证trueorfalse);
            m_objSign.m_mthBindEmployeeSign(new Control[]{m_cmdAttendInForAdvancesStudyDt,m_cmdQCNurse,m_cmdCoder,m_cmdDoctor,m_cmdSign,
															 m_cmdDirectorDt,m_cmdSubDirectorDt,m_cmdQCDt,m_cmdDt,m_cmdGraduateStudentIntern,m_cmdInHospitalDt,m_cmdIntern},
                new Control[]{txtAttendInForAdvancesStudyDt,txtQCNurse,txtCoder,txtDoctor,m_txtSign,
								 txtDirectorDt,txtSubDirectorDt,txtQCDt,txtDt,txtGraduateStudentIntern,txtInHospitalDt,txtIntern},
                new int[] { 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, new bool[] { false, false, false, false, true, false, false, false, false, false, false, false });

            m_objShareDomain = new clsOperationRecordDoctorShareDomain();
            m_objDomain.m_lngGetRelationPayTypeList(out m_dtbPayTypeRelation);
            //ICD10查询
            //m_objIcd10Bind=new clsBindICD10();
            //m_objIcd10Bind.m_mthBindICD10(m_cmdICD10Seach,txtMainDiagnosis,0,1,null,null);

        }


        private clsOperationRecordDoctorShareDomain m_objShareDomain;
        //private com.digitalwave.Utility.Controls.clsBorderTool  m_objBorderTool;
        private clsPatient m_objSelectedPatient;
        private clsInHospitalMainRecordDomain m_objDomain;
        private clsInHospitalMainRecord_Collection m_objCollection;

        /// <summary>
        /// 是否打印题目，打印预览时为true，套打时为false，进行套打前设置为true，套打后设置为false
        /// </summary>
        private static bool s_blnPrintTitle = true;

        /// <summary>
        /// 标志该次住院的住院病案首页是否已经生成过
        /// false -- 否   true -- 是
        /// </summary>
        private bool m_bolIfHasSave;
        /// <summary>
        /// 该次住院的住院病案首页生成时间
        /// </summary>
        private string m_strOpenDate;

        #region DataTable Define
        private DataTable m_dtbOtherDiagnosis;

        //private DataTable m_dtbChangeDept;

        private DataTable m_dtbOperationDetail;

        private DataTable m_dtbBaby;

        private DataTable m_dtbChemotherapy;
        #endregion
        /// <summary>
        /// 存放当前获得焦点的RichTextBox(模糊查询人名用)
        /// </summary>
        private com.digitalwave.controls.ctlRichTextBox m_RtbCurrentTextBox;

        private clsPublicDomain m_objPublicDomain;

        public override int m_IntFormID
        {
            get
            {
                return 28;
            }
        }

        #region 属性
        protected override enmApproveType m_EnmAppType
        {
            get { return enmApproveType.CaseHistory; }
        }
        protected override string m_StrRecorder_ID
        {
            get
            {
                return "";
            }
        }
        #endregion 属性

        #region 模糊查询定义
        //		private clsRichTextListView m_objRichTextListView0;
        //		private clsRichTextListView m_objRichTextListView1;
        //		private clsRichTextListView m_objRichTextListView2;
        //		private clsRichTextListView m_objRichTextListView3;
        //		private clsRichTextListView m_objRichTextListView4;
        //		private clsRichTextListView m_objRichTextListView5;
        //		private clsRichTextListView m_objRichTextListView6;
        //		private clsRichTextListView m_objRichTextListView7;
        //		private clsRichTextListView m_objRichTextListView8;
        //		private clsRichTextListView m_objRichTextListView9;
        //		private clsRichTextListView m_objRichTextListView10;

        private clsGridListView m_objGridListView0;
        private clsGridListView m_objGridListView1;
        private clsGridListView m_objGridListView2;
        private clsGridListView m_objGridListView3;

        private clsGridListView m_objGridListView4;

        private Hashtable m_hasAanaesthesiaMode;

        /// <summary>
        /// 标志模糊查询时是否清空内容
        /// true -- 清空 false -- 不清空
        /// </summary>
        private bool m_bolIfChange = true;
        #endregion

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                if (components != null)
                {
                    components.Dispose();
                }
            }
            base.Dispose(disposing);
        }

        #region Designer generated code
        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            System.Windows.Forms.TreeNode treeNode1 = new System.Windows.Forms.TreeNode("入院日期");
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(frmInHospitalMainRecord_2009));
            this.label3 = new System.Windows.Forms.Label();
            this.lblIDCardTitle = new System.Windows.Forms.Label();
            this.lblOccupationTitle = new System.Windows.Forms.Label();
            this.lblNationTitle = new System.Windows.Forms.Label();
            this.lblNationalityTitle = new System.Windows.Forms.Label();
            this.lblMarriedTitle = new System.Windows.Forms.Label();
            this.lblOfficePCTitle = new System.Windows.Forms.Label();
            this.lblOfficeAddressTitle = new System.Windows.Forms.Label();
            this.lblOfficePhoneTitle = new System.Windows.Forms.Label();
            this.lblHmePCTitle = new System.Windows.Forms.Label();
            this.lblHomeAddressTitle = new System.Windows.Forms.Label();
            this.lblOutHospitalDateTitle = new System.Windows.Forms.Label();
            this.lblInHospitalSetionTitle = new System.Windows.Forms.Label();
            this.lblInSickRoomTitle = new System.Windows.Forms.Label();
            this.lblInHospitalDaysTitle = new System.Windows.Forms.Label();
            this.lblOutSickRoomTitle = new System.Windows.Forms.Label();
            this.lblOutHospitalSetionTitle = new System.Windows.Forms.Label();
            this.lblDays = new System.Windows.Forms.Label();
            this.lblDiagnosisTitle = new System.Windows.Forms.Label();
            this.lblConditionWhenInTitle = new System.Windows.Forms.Label();
            this.lblConfirmDiagnosisDateTitle = new System.Windows.Forms.Label();
            this.lblMasterDiagnose = new System.Windows.Forms.Label();
            this.txtMainDiagnosis = new com.digitalwave.controls.ctlRichTextBox();
            this.lblPathologyDiagnosisTitle = new System.Windows.Forms.Label();
            this.txtPathologyDiagnosis = new com.digitalwave.controls.ctlRichTextBox();
            this.txtScacheSource = new com.digitalwave.controls.ctlRichTextBox();
            this.lblScacheSourceTitle = new System.Windows.Forms.Label();
            this.lblSensitivetitle = new System.Windows.Forms.Label();
            this.txtSensitive = new com.digitalwave.controls.ctlRichTextBox();
            this.lblConditionTitle = new System.Windows.Forms.Label();
            this.txtICD_10OfMain = new com.digitalwave.controls.ctlRichTextBox();
            this.txtSalveTimes = new com.digitalwave.controls.ctlRichTextBox();
            this.lblSalveTitle = new System.Windows.Forms.Label();
            this.lblTims2 = new System.Windows.Forms.Label();
            this.lblTimes3 = new System.Windows.Forms.Label();
            this.txtSalveSuccess = new com.digitalwave.controls.ctlRichTextBox();
            this.lblSuccessTitle = new System.Windows.Forms.Label();
            this.lblQualityTitle = new System.Windows.Forms.Label();
            this.lblQCDateTitle = new System.Windows.Forms.Label();
            this.dtpQCTime = new System.Windows.Forms.DateTimePicker();
            this.dtgOperation = new System.Windows.Forms.DataGrid();
            this.dataGridTableStyle5 = new System.Windows.Forms.DataGridTableStyle();
            this.m_dtcOperationID = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcOperationDate = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcOperationName = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcOperator = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcAssistant1 = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcAssistant2 = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcAnaesthesiaMode = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcCutLevel = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcAnaesthetist = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtgBaby = new System.Windows.Forms.DataGrid();
            this.dtsBaby = new System.Windows.Forms.DataGridTableStyle();
            this.dtcSeqNo = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcMale = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcFemale = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcLiveBorn = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcDieBorn = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcDieNotBorn = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcWeight = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcDie = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcChangeDepartment = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcOutHospital = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcNatural = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcSuffocate1 = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcSuffocate2 = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcInfectionTimes = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcInfectionName = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcICD10 = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcSalveTimes = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcSalveSuccessTimes = new System.Windows.Forms.DataGridTextBoxColumn();
            this.lblRTTitle = new System.Windows.Forms.Label();
            this.gpbRTMode = new System.Windows.Forms.GroupBox();
            this.rdbRTAssistant = new System.Windows.Forms.RadioButton();
            this.rdbRTAppeasement = new System.Windows.Forms.RadioButton();
            this.rdbRTCure = new System.Windows.Forms.RadioButton();
            this.gpbRTEquipment = new System.Windows.Forms.GroupBox();
            this.chkRTLacuna = new System.Windows.Forms.CheckBox();
            this.chkRTX_Ray = new System.Windows.Forms.CheckBox();
            this.chkRTCo = new System.Windows.Forms.CheckBox();
            this.chkRTAccelerator = new System.Windows.Forms.CheckBox();
            this.gpbRTRule = new System.Windows.Forms.GroupBox();
            this.rdbRTSection = new System.Windows.Forms.RadioButton();
            this.rdbContinue = new System.Windows.Forms.RadioButton();
            this.rdbRTGap = new System.Windows.Forms.RadioButton();
            this.gpbOriginalDisease = new System.Windows.Forms.GroupBox();
            this.rdbOriginalDiseaseRepeat = new System.Windows.Forms.RadioButton();
            this.rdbOriginalDiseaseFirst = new System.Windows.Forms.RadioButton();
            this.lblOriginalDiseaseTitle = new System.Windows.Forms.Label();
            this.lblOriginalDiseaseDose = new System.Windows.Forms.Label();
            this.lblUnit2 = new System.Windows.Forms.Label();
            this.lblUnit3 = new System.Windows.Forms.Label();
            this.txtOriginalDiseaseGy = new com.digitalwave.controls.ctlRichTextBox();
            this.txtOriginalDiseaseTimes = new com.digitalwave.controls.ctlRichTextBox();
            this.txtOriginalDiseaseDays = new com.digitalwave.controls.ctlRichTextBox();
            this.lblOriginalDiseaseBeginDateTitle = new System.Windows.Forms.Label();
            this.lblOriginalDiseaseTo = new System.Windows.Forms.Label();
            this.lblLymphToTitle = new System.Windows.Forms.Label();
            this.lblLymphBeginDateTitle = new System.Windows.Forms.Label();
            this.txtLymphDays = new com.digitalwave.controls.ctlRichTextBox();
            this.txtLymphTimes = new com.digitalwave.controls.ctlRichTextBox();
            this.txtLymphGy = new com.digitalwave.controls.ctlRichTextBox();
            this.lblLymphUnit1 = new System.Windows.Forms.Label();
            this.lblLymphUnit2 = new System.Windows.Forms.Label();
            this.lblLympUnit3 = new System.Windows.Forms.Label();
            this.lblLymphDose = new System.Windows.Forms.Label();
            this.lblLymphTitle = new System.Windows.Forms.Label();
            this.gpbLymph = new System.Windows.Forms.GroupBox();
            this.rdbLymphRepeat = new System.Windows.Forms.RadioButton();
            this.rdbLymphFirst = new System.Windows.Forms.RadioButton();
            this.lblMetastasisTo = new System.Windows.Forms.Label();
            this.lblMetastasisBeginDateTitle = new System.Windows.Forms.Label();
            this.txtMetastasisDays = new com.digitalwave.controls.ctlRichTextBox();
            this.txtMetastasisTimes = new com.digitalwave.controls.ctlRichTextBox();
            this.txtMetastasisGy = new com.digitalwave.controls.ctlRichTextBox();
            this.lblMetastasisUnit1 = new System.Windows.Forms.Label();
            this.lblMetastasisUnit2 = new System.Windows.Forms.Label();
            this.lblMetastasisUnit3 = new System.Windows.Forms.Label();
            this.lblMetastasisDose = new System.Windows.Forms.Label();
            this.lblMetastasisTitle = new System.Windows.Forms.Label();
            this.lblChemotherapyTitle = new System.Windows.Forms.Label();
            this.gpbChemotherapyMode = new System.Windows.Forms.GroupBox();
            this.rdbChemotherapyNewMedicine = new System.Windows.Forms.RadioButton();
            this.rdbChemotherapyAssistant = new System.Windows.Forms.RadioButton();
            this.rdbChemotherapyAssisantNew = new System.Windows.Forms.RadioButton();
            this.rdbChemotherapyAppeasement = new System.Windows.Forms.RadioButton();
            this.rdbChemotherapyCure = new System.Windows.Forms.RadioButton();
            this.gpbChemotherapyRule = new System.Windows.Forms.GroupBox();
            this.chkChemotherapyOther = new System.Windows.Forms.CheckBox();
            this.chkChemotherapyOtherTry = new System.Windows.Forms.CheckBox();
            this.chkChemotherapySpinal = new System.Windows.Forms.CheckBox();
            this.chkChemotherapyAbdomen = new System.Windows.Forms.CheckBox();
            this.chkChemotherapyThorax = new System.Windows.Forms.CheckBox();
            this.chkChemotherapyIntubate = new System.Windows.Forms.CheckBox();
            this.chkChemotherapyLocal = new System.Windows.Forms.CheckBox();
            this.chkChemotherapyWholeBody = new System.Windows.Forms.CheckBox();
            this.dtgChemotherapy = new System.Windows.Forms.DataGrid();
            this.dtcChemotherapy = new System.Windows.Forms.DataGridTableStyle();
            this.dtcDate = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcMedicineName = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcPeriod = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcCR = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcPR = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcMR = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcS = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcP = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcNA = new System.Windows.Forms.DataGridBoolColumn();
            this.lblDeliveryChild = new System.Windows.Forms.Label();
            this.lblOperationAmt = new System.Windows.Forms.Label();
            this.lblBloodTran = new System.Windows.Forms.Label();
            this.lblO2 = new System.Windows.Forms.Label();
            this.lblAssayAmt = new System.Windows.Forms.Label();
            this.lblRadiationAmt = new System.Windows.Forms.Label();
            this.lblCMFinishedAmt = new System.Windows.Forms.Label();
            this.lblWMAmt = new System.Windows.Forms.Label();
            this.lblBedAmt = new System.Windows.Forms.Label();
            this.lblTotalAmt = new System.Windows.Forms.Label();
            this.txtTotalAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtRadiationAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtBedAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtDeliveryChildAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtBloodAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtAssayAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtCMFinishedAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtOperationAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtWMAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtO2Amt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtCMSemiFinishedAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.lblCMSemiFinishedTitle = new System.Windows.Forms.Label();
            this.txtNurseAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.lblNurseAmt = new System.Windows.Forms.Label();
            this.txtTreatmentAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.lblTreatmentAmt = new System.Windows.Forms.Label();
            this.txtOtherAmt1 = new com.digitalwave.controls.ctlRichTextBox();
            this.lblOtherAmt1 = new System.Windows.Forms.Label();
            this.txtBabyAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtAnaethesiaAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtAccompanyAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.txtCheckAmt = new com.digitalwave.controls.ctlRichTextBox();
            this.lblAccompanyAmt = new System.Windows.Forms.Label();
            this.lblBabyAmt = new System.Windows.Forms.Label();
            this.lblAnaethisiaAmt = new System.Windows.Forms.Label();
            this.lblCheckAmt = new System.Windows.Forms.Label();
            this.txtOtherAmt2 = new com.digitalwave.controls.ctlRichTextBox();
            this.txtOtherAmt3 = new com.digitalwave.controls.ctlRichTextBox();
            this.lblComma = new System.Windows.Forms.Label();
            this.lblComma2 = new System.Windows.Forms.Label();
            this.lblCorpseCheck = new System.Windows.Forms.Label();
            this.lblFirstCaseTitle = new System.Windows.Forms.Label();
            this.lblFollowTitle = new System.Windows.Forms.Label();
            this.txtFollow_Week = new com.digitalwave.controls.ctlRichTextBox();
            this.lblFollowDate = new System.Windows.Forms.Label();
            this.lblWeek = new System.Windows.Forms.Label();
            this.lblFollowMonth = new System.Windows.Forms.Label();
            this.txtFollow_Month = new com.digitalwave.controls.ctlRichTextBox();
            this.lblFollowYear = new System.Windows.Forms.Label();
            this.txtFollow_Year = new com.digitalwave.controls.ctlRichTextBox();
            this.lblModelCaseTitle = new System.Windows.Forms.Label();
            this.lblBloodTransAction = new System.Windows.Forms.Label();
            this.lblBloodTypeDesp = new System.Windows.Forms.Label();
            this.txtBloodType = new com.digitalwave.controls.ctlRichTextBox();
            this.lblBloodType = new System.Windows.Forms.Label();
            this.lblBloodRh = new System.Windows.Forms.Label();
            this.txtRBC = new com.digitalwave.controls.ctlRichTextBox();
            this.lblRBCUnit = new System.Windows.Forms.Label();
            this.lblBloodComponent = new System.Windows.Forms.Label();
            this.txtPLT = new com.digitalwave.controls.ctlRichTextBox();
            this.lblUnit10 = new System.Windows.Forms.Label();
            this.lblPLT = new System.Windows.Forms.Label();
            this.txtPlasm = new com.digitalwave.controls.ctlRichTextBox();
            this.lblUnit11 = new System.Windows.Forms.Label();
            this.lblPlasm = new System.Windows.Forms.Label();
            this.txtWholeBlood = new com.digitalwave.controls.ctlRichTextBox();
            this.lblUnit13 = new System.Windows.Forms.Label();
            this.lblWholeBlood = new System.Windows.Forms.Label();
            this.txtOtherBlood = new com.digitalwave.controls.ctlRichTextBox();
            this.lblUnit14 = new System.Windows.Forms.Label();
            this.lblOtherBlood = new System.Windows.Forms.Label();
            this.txtNurseLevelI = new com.digitalwave.controls.ctlRichTextBox();
            this.lblNurseLevelI = new System.Windows.Forms.Label();
            this.txtTOPLevel = new com.digitalwave.controls.ctlRichTextBox();
            this.lblUnit21 = new System.Windows.Forms.Label();
            this.lblNurseLevel = new System.Windows.Forms.Label();
            this.txtLongDistanctConsultation = new com.digitalwave.controls.ctlRichTextBox();
            this.lblLongDistanceConsultation = new System.Windows.Forms.Label();
            this.txtConsultation = new com.digitalwave.controls.ctlRichTextBox();
            this.lblUnit15 = new System.Windows.Forms.Label();
            this.lblConsultation = new System.Windows.Forms.Label();
            this.lblUnit20 = new System.Windows.Forms.Label();
            this.lblUnit22 = new System.Windows.Forms.Label();
            this.lblUnit23 = new System.Windows.Forms.Label();
            this.txtNurseLevelII = new com.digitalwave.controls.ctlRichTextBox();
            this.lblNurseLevelII = new System.Windows.Forms.Label();
            this.lblUnit24 = new System.Windows.Forms.Label();
            this.txtNurseLevelIII = new com.digitalwave.controls.ctlRichTextBox();
            this.lblNurseLevelIII = new System.Windows.Forms.Label();
            this.txtICU = new com.digitalwave.controls.ctlRichTextBox();
            this.lblUnit25 = new System.Windows.Forms.Label();
            this.lblICU = new System.Windows.Forms.Label();
            this.lblUnit26 = new System.Windows.Forms.Label();
            this.txtSpecialNurse = new com.digitalwave.controls.ctlRichTextBox();
            this.lblSpecialNurse = new System.Windows.Forms.Label();
            this.gpbLine3 = new System.Windows.Forms.GroupBox();
            this.lblInsuranceDesp1 = new System.Windows.Forms.Label();
            this.lblTimesTitle = new System.Windows.Forms.Label();
            this.lblTimesInHospital = new System.Windows.Forms.Label();
            this.lblModeOfPaymentTitle = new System.Windows.Forms.Label();
            this.txtInsuranceNum = new com.digitalwave.controls.ctlRichTextBox();
            this.lblInuranceTitle = new System.Windows.Forms.Label();
            this.trvTime = new System.Windows.Forms.TreeView();
            this.lblProvince = new System.Windows.Forms.Label();
            this.lblProvinceTitle = new System.Windows.Forms.Label();
            this.lblHomePlaceTitle = new System.Windows.Forms.Label();
            this.lblPatientHistoryNO = new System.Windows.Forms.Label();
            this.txtPatientHistoryNO = new com.digitalwave.controls.ctlRichTextBox();
            this.dtgChangeDept2 = new System.Windows.Forms.DataGrid();
            this.dataGridTableStyle1 = new System.Windows.Forms.DataGridTableStyle();
            this.dtcChangeDept = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcDept = new System.Windows.Forms.DataGridTextBoxColumn();
            this.txtDiagnosis = new com.digitalwave.controls.ctlRichTextBox();
            this.dtpConfirmDiagnosisDate = new com.digitalwave.Utility.Controls.ctlTimePicker();
            this.gpbCondictionWhenIn = new System.Windows.Forms.GroupBox();
            this.rdbNormal = new System.Windows.Forms.RadioButton();
            this.rdbEmergency = new System.Windows.Forms.RadioButton();
            this.rdbDanger = new System.Windows.Forms.RadioButton();
            this.gpbQuality = new System.Windows.Forms.GroupBox();
            this.rdbQuality3 = new System.Windows.Forms.RadioButton();
            this.rdbQuality2 = new System.Windows.Forms.RadioButton();
            this.rdbQuality1 = new System.Windows.Forms.RadioButton();
            this.gpbCorpseCheck = new System.Windows.Forms.GroupBox();
            this.rdbCorpseCheckNO = new System.Windows.Forms.RadioButton();
            this.rdbCorpseCheckYes = new System.Windows.Forms.RadioButton();
            this.gpbFirstCase = new System.Windows.Forms.GroupBox();
            this.rdbFirstCaseNO = new System.Windows.Forms.RadioButton();
            this.rdbFirstCaseYes = new System.Windows.Forms.RadioButton();
            this.gpbModelCase = new System.Windows.Forms.GroupBox();
            this.rdbModelCaseNO = new System.Windows.Forms.RadioButton();
            this.rdbModelCaseYes = new System.Windows.Forms.RadioButton();
            this.gpbBloodTransAction = new System.Windows.Forms.GroupBox();
            this.rdbBloodTransNoAction = new System.Windows.Forms.RadioButton();
            this.rdbBloodTransActionNO = new System.Windows.Forms.RadioButton();
            this.rdbBloodTransActionYes = new System.Windows.Forms.RadioButton();
            this.gpbFollow = new System.Windows.Forms.GroupBox();
            this.rdbFollowNO = new System.Windows.Forms.RadioButton();
            this.rdbFollowYes = new System.Windows.Forms.RadioButton();
            this.gpbBloodRh = new System.Windows.Forms.GroupBox();
            this.rdbBloodRh_No = new System.Windows.Forms.RadioButton();
            this.rdbBloodRh_An = new System.Windows.Forms.RadioButton();
            this.rdbBloodRh_Ka = new System.Windows.Forms.RadioButton();
            this.lsvOperationEmployee = new System.Windows.Forms.ListView();
            this.clmEmployeeID = new System.Windows.Forms.ColumnHeader();
            this.clmEmployeeName = new System.Windows.Forms.ColumnHeader();
            this.lsvAanaesthesiaMode = new System.Windows.Forms.ListView();
            this.columnHeader3 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader4 = new System.Windows.Forms.ColumnHeader();
            this.m_cmuRichTextBoxMenu = new System.Windows.Forms.ContextMenu();
            this.mniDoubleStrikeOutDelete = new System.Windows.Forms.MenuItem();
            this.lblInHospitalDays = new System.Windows.Forms.Label();
            this.lblInSickRoom = new System.Windows.Forms.Label();
            this.lblOutSickRoom = new System.Windows.Forms.Label();
            this.lblOutHospitalSetion = new System.Windows.Forms.Label();
            this.lblInHosptialSetion = new System.Windows.Forms.Label();
            this.lblTimes = new System.Windows.Forms.Label();
            this.m_cmdDoctor = new PinkieControls.ButtonXP();
            this.m_cmdDirectorDt = new PinkieControls.ButtonXP();
            this.m_cmdQCNurse = new PinkieControls.ButtonXP();
            this.m_cmdIntern = new PinkieControls.ButtonXP();
            this.m_cmdDt = new PinkieControls.ButtonXP();
            this.m_cmdQCDt = new PinkieControls.ButtonXP();
            this.m_cmdGraduateStudentIntern = new PinkieControls.ButtonXP();
            this.m_cmdSubDirectorDt = new PinkieControls.ButtonXP();
            this.m_cmdAttendInForAdvancesStudyDt = new PinkieControls.ButtonXP();
            this.m_cmdInHospitalDt = new PinkieControls.ButtonXP();
            this.m_cmdCoder = new PinkieControls.ButtonXP();
            this.m_cmdFillPrint = new PinkieControls.ButtonXP();
            this.m_grpDrugAllergy = new System.Windows.Forms.GroupBox();
            this.txtHbsAg = new com.digitalwave.controls.ctlRichTextBox();
            this.lblHIV_AbTitle = new System.Windows.Forms.Label();
            this.lblHbsAgTitle = new System.Windows.Forms.Label();
            this.txtHIV_Ab = new com.digitalwave.controls.ctlRichTextBox();
            this.txtHCV_Ab = new com.digitalwave.controls.ctlRichTextBox();
            this.lblHCVAbTitle = new System.Windows.Forms.Label();
            this.m_grpAccordWithDiagnosisTitle = new System.Windows.Forms.GroupBox();
            this.txtAccordClinicWithPathology = new com.digitalwave.controls.ctlRichTextBox();
            this.txtAccordRadiateWithPathology = new com.digitalwave.controls.ctlRichTextBox();
            this.txtAccordBeforeOperationWithAfter = new com.digitalwave.controls.ctlRichTextBox();
            this.txtAccordInWithOut = new com.digitalwave.controls.ctlRichTextBox();
            this.txtAccordWithOutHospital = new com.digitalwave.controls.ctlRichTextBox();
            this.lblAccordWithOutHospital = new System.Windows.Forms.Label();
            this.lblAccordInWithOutTitle = new System.Windows.Forms.Label();
            this.lblAccordBeforeOperationWithAfterTitle = new System.Windows.Forms.Label();
            this.lblAccordClinicWithPathologyTitle = new System.Windows.Forms.Label();
            this.lblAccordRadiateWithPathologyTitle = new System.Windows.Forms.Label();
            this.imageList1 = new System.Windows.Forms.ImageList(this.components);
            this.panel2 = new System.Windows.Forms.Panel();
            this.m_lsvTransDept = new System.Windows.Forms.ListView();
            this.m_clmFromDept = new System.Windows.Forms.ColumnHeader();
            this.m_clmTransDate = new System.Windows.Forms.ColumnHeader();
            this.m_clmToDept = new System.Windows.Forms.ColumnHeader();
            this.dgDiagnosis1 = new System.Windows.Forms.DataGrid();
            this.dataGridTableStyle2 = new System.Windows.Forms.DataGridTableStyle();
            this.m_dgtbInDia = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dgtbInDiaICD = new System.Windows.Forms.DataGridTextBoxColumn();
            this.label4 = new System.Windows.Forms.Label();
            this.txtDoctor = new System.Windows.Forms.TextBox();
            this.txtDiagnosisICD10 = new System.Windows.Forms.TextBox();
            this.m_lblOutHospitalDate = new System.Windows.Forms.Label();
            this.panel1 = new System.Windows.Forms.Panel();
            this.panel3 = new System.Windows.Forms.Panel();
            this.m_txtContactManAddress = new System.Windows.Forms.TextBox();
            this.m_txtContactManPhone = new System.Windows.Forms.TextBox();
            this.m_txtRelation = new System.Windows.Forms.TextBox();
            this.m_txtContactMan = new System.Windows.Forms.TextBox();
            this.m_txtLinkManzipcode = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.lblContactManAddressTitle = new System.Windows.Forms.Label();
            this.lblContactManTitle = new System.Windows.Forms.Label();
            this.lblRelationTitle = new System.Windows.Forms.Label();
            this.lblContactManPhoneTitle = new System.Windows.Forms.Label();
            this.m_txtHomeAddress = new System.Windows.Forms.TextBox();
            this.m_txtHomePC = new System.Windows.Forms.TextBox();
            this.m_txtOfficePC = new System.Windows.Forms.TextBox();
            this.m_txtOfficeAddress = new System.Windows.Forms.TextBox();
            this.m_txtIDCard = new System.Windows.Forms.TextBox();
            this.m_txtCompanyName = new System.Windows.Forms.TextBox();
            this.m_txtHomePhone = new System.Windows.Forms.TextBox();
            this.m_cboProvince = new com.digitalwave.Utility.Controls.ctlComboBox();
            this.m_cboCounty = new com.digitalwave.Utility.Controls.ctlComboBox();
            this.m_cboCity = new com.digitalwave.Utility.Controls.ctlComboBox();
            this.label1 = new System.Windows.Forms.Label();
            this.lblUnit1 = new System.Windows.Forms.Label();
            this.dtcDiagnosis = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dtcHealOfMain = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcOnTheMendOfMain = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcNotCureOfMain = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcDieOfMain = new System.Windows.Forms.DataGridBoolColumn();
            this.dtcNotDefineOfMain = new System.Windows.Forms.DataGridBoolColumn();
            this.ICD10 = new System.Windows.Forms.DataGridTextBoxColumn();
            this.tabControl2 = new System.Windows.Forms.TabControl();
            this.tabPage6 = new System.Windows.Forms.TabPage();
            this.panel4 = new System.Windows.Forms.Panel();
            this.m_cboModeOfPayment = new System.Windows.Forms.ComboBox();
            this.m_txtMarried = new System.Windows.Forms.ComboBox();
            this.m_txtNation = new System.Windows.Forms.TextBox();
            this.m_txtCountry = new System.Windows.Forms.TextBox();
            this.m_txtOccupation = new System.Windows.Forms.TextBox();
            this.m_txtNationality = new System.Windows.Forms.TextBox();
            this.m_dtpBirthDate = new com.digitalwave.Utility.Controls.ctlTimePicker();
            this.tabPage7 = new System.Windows.Forms.TabPage();
            this.txtAttendInForAdvancesStudyDt = new System.Windows.Forms.TextBox();
            this.txtGraduateStudentIntern = new System.Windows.Forms.TextBox();
            this.dgDiagnosis2 = new System.Windows.Forms.DataGrid();
            this.dataGridTableStyle4 = new System.Windows.Forms.DataGridTableStyle();
            this.m_dgtbInfectionDia = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dgtbInfectionDiaICD = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcInfectionResult = new System.Windows.Forms.DataGridTextBoxColumn();
            this.dgDiagnosis3 = new System.Windows.Forms.DataGrid();
            this.dataGridTableStyle3 = new System.Windows.Forms.DataGridTableStyle();
            this.m_dgtbOtherDia = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dgtbOtherDiaICD = new System.Windows.Forms.DataGridTextBoxColumn();
            this.m_dtcOtherDiaResult = new System.Windows.Forms.DataGridTextBoxColumn();
            this.label5 = new System.Windows.Forms.Label();
            this.m_cboMainSeq = new System.Windows.Forms.ComboBox();
            this.txtCoder = new System.Windows.Forms.TextBox();
            this.txtInHospitalDt = new System.Windows.Forms.TextBox();
            this.txtQCNurse = new System.Windows.Forms.TextBox();
            this.txtIntern = new System.Windows.Forms.TextBox();
            this.txtDt = new System.Windows.Forms.TextBox();
            this.txtQCDt = new System.Windows.Forms.TextBox();
            this.txtSubDirectorDt = new System.Windows.Forms.TextBox();
            this.txtDirectorDt = new System.Windows.Forms.TextBox();
            this.tabPage8 = new System.Windows.Forms.TabPage();
            this.panel6 = new System.Windows.Forms.Panel();
            this.radioButton4 = new System.Windows.Forms.RadioButton();
            this.radioButton3 = new System.Windows.Forms.RadioButton();
            this.panel5 = new System.Windows.Forms.Panel();
            this.radioButton2 = new System.Windows.Forms.RadioButton();
            this.radioButton1 = new System.Windows.Forms.RadioButton();
            this.tabPage9 = new System.Windows.Forms.TabPage();
            this.dtpMetastasisEndDate = new com.digitalwave.Controls.ctlMaskedDateTimePicker();
            this.dtpLymphEndDate = new com.digitalwave.Controls.ctlMaskedDateTimePicker();
            this.dtpOriginalDiseaseEndDate = new com.digitalwave.Controls.ctlMaskedDateTimePicker();
            this.dtpMetastasisBeginDate = new com.digitalwave.Controls.ctlMaskedDateTimePicker();
            this.dtpLymphBeginDate = new com.digitalwave.Controls.ctlMaskedDateTimePicker();
            this.dtpOriginalDiseaseBeginDate = new com.digitalwave.Controls.ctlMaskedDateTimePicker();
            this.panel7 = new System.Windows.Forms.Panel();
            this.radioButton6 = new System.Windows.Forms.RadioButton();
            this.radioButton5 = new System.Windows.Forms.RadioButton();
            this.tabPage10 = new System.Windows.Forms.TabPage();
            this.label6 = new System.Windows.Forms.Label();
            this.m_dtpUpdateDate = new com.digitalwave.Utility.Controls.ctlTimePicker();
            this.m_txtSign = new System.Windows.Forms.TextBox();
            this.m_cmdSign = new PinkieControls.ButtonXP();
            this.m_lblQueryTips = new System.Windows.Forms.Label();
            this.m_cmdCommit = new PinkieControls.ButtonXP();
            this.button1 = new System.Windows.Forms.Button();
            this.m_timShowTips = new System.Windows.Forms.Timer(this.components);
            this.m_pnlNewBase.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dtgOperation)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dtgBaby)).BeginInit();
            this.gpbRTMode.SuspendLayout();
            this.gpbRTEquipment.SuspendLayout();
            this.gpbRTRule.SuspendLayout();
            this.gpbOriginalDisease.SuspendLayout();
            this.gpbLymph.SuspendLayout();
            this.gpbChemotherapyMode.SuspendLayout();
            this.gpbChemotherapyRule.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dtgChemotherapy)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dtgChangeDept2)).BeginInit();
            this.gpbCondictionWhenIn.SuspendLayout();
            this.gpbQuality.SuspendLayout();
            this.gpbCorpseCheck.SuspendLayout();
            this.gpbFirstCase.SuspendLayout();
            this.gpbModelCase.SuspendLayout();
            this.gpbBloodTransAction.SuspendLayout();
            this.gpbFollow.SuspendLayout();
            this.gpbBloodRh.SuspendLayout();
            this.m_grpDrugAllergy.SuspendLayout();
            this.m_grpAccordWithDiagnosisTitle.SuspendLayout();
            this.panel2.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dgDiagnosis1)).BeginInit();
            this.panel1.SuspendLayout();
            this.panel3.SuspendLayout();
            this.tabControl2.SuspendLayout();
            this.tabPage6.SuspendLayout();
            this.panel4.SuspendLayout();
            this.tabPage7.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dgDiagnosis2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.dgDiagnosis3)).BeginInit();
            this.tabPage8.SuspendLayout();
            this.panel6.SuspendLayout();
            this.panel5.SuspendLayout();
            this.tabPage9.SuspendLayout();
            this.panel7.SuspendLayout();
            this.tabPage10.SuspendLayout();
            this.SuspendLayout();
            // 
            // lblSex
            // 
            this.lblSex.Location = new System.Drawing.Point(328, 175);
            this.lblSex.Size = new System.Drawing.Size(42, 19);
            this.lblSex.Visible = false;
            // 
            // lblAge
            // 
            this.lblAge.Location = new System.Drawing.Point(299, 262);
            this.lblAge.Size = new System.Drawing.Size(67, 19);
            this.lblAge.Visible = false;
            // 
            // lblBedNoTitle
            // 
            this.lblBedNoTitle.Location = new System.Drawing.Point(123, 228);
            this.lblBedNoTitle.Size = new System.Drawing.Size(56, 14);
            this.lblBedNoTitle.Text = "床  号:";
            this.lblBedNoTitle.Visible = false;
            // 
            // lblInHospitalNoTitle
            // 
            this.lblInHospitalNoTitle.Location = new System.Drawing.Point(115, 259);
            this.lblInHospitalNoTitle.Visible = false;
            // 
            // lblNameTitle
            // 
            this.lblNameTitle.Location = new System.Drawing.Point(286, 175);
            this.lblNameTitle.Visible = false;
            // 
            // lblSexTitle
            // 
            this.lblSexTitle.Location = new System.Drawing.Point(290, 259);
            this.lblSexTitle.Visible = false;
            // 
            // lblAgeTitle
            // 
            this.lblAgeTitle.Location = new System.Drawing.Point(296, 265);
            this.lblAgeTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            this.lblAgeTitle.Visible = false;
            // 
            // lblAreaTitle
            // 
            this.lblAreaTitle.Location = new System.Drawing.Point(124, 214);
            this.lblAreaTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            this.lblAreaTitle.Visible = false;
            // 
            // m_lsvInPatientID
            // 
            this.m_lsvInPatientID.Location = new System.Drawing.Point(188, 177);
            this.m_lsvInPatientID.Size = new System.Drawing.Size(100, 104);
            this.m_lsvInPatientID.TabIndex = 10;
            this.m_lsvInPatientID.Visible = false;
            // 
            // txtInPatientID
            // 
            this.txtInPatientID.Location = new System.Drawing.Point(172, 256);
            this.txtInPatientID.Visible = false;
            // 
            // m_txtPatientName
            // 
            this.m_txtPatientName.Location = new System.Drawing.Point(216, 219);
            this.m_txtPatientName.Visible = false;
            // 
            // m_txtBedNO
            // 
            this.m_txtBedNO.Location = new System.Drawing.Point(195, 225);
            this.m_txtBedNO.Size = new System.Drawing.Size(93, 23);
            this.m_txtBedNO.Visible = false;
            // 
            // m_cboArea
            // 
            this.m_cboArea.Location = new System.Drawing.Point(172, 214);
            this.m_cboArea.Visible = false;
            // 
            // m_lsvPatientName
            // 
            this.m_lsvPatientName.Location = new System.Drawing.Point(200, 177);
            this.m_lsvPatientName.Size = new System.Drawing.Size(80, 104);
            this.m_lsvPatientName.Visible = false;
            // 
            // m_lsvBedNO
            // 
            this.m_lsvBedNO.Location = new System.Drawing.Point(177, 177);
            this.m_lsvBedNO.Size = new System.Drawing.Size(76, 104);
            this.m_lsvBedNO.Visible = false;
            // 
            // m_cboDept
            // 
            this.m_cboDept.Location = new System.Drawing.Point(172, 192);
            this.m_cboDept.Visible = false;
            // 
            // lblDept
            // 
            this.lblDept.Location = new System.Drawing.Point(124, 192);
            this.lblDept.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            this.lblDept.Visible = false;
            // 
            // m_cmdNewTemplate
            // 
            this.m_cmdNewTemplate.Font = new System.Drawing.Font("宋体", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdNewTemplate.Location = new System.Drawing.Point(500, -144);
            this.m_cmdNewTemplate.Size = new System.Drawing.Size(84, 107);
            // 
            // m_cmdNext
            // 
            this.m_cmdNext.FlatStyle = System.Windows.Forms.FlatStyle.Standard;
            this.m_cmdNext.Location = new System.Drawing.Point(299, 225);
            // 
            // m_cmdPre
            // 
            this.m_cmdPre.Location = new System.Drawing.Point(200, 202);
            // 
            // m_lblForTitle
            // 
            this.m_lblForTitle.Location = new System.Drawing.Point(288, -148);
            this.m_lblForTitle.Size = new System.Drawing.Size(16, 98);
            this.m_lblForTitle.TabIndex = 10;
            this.m_lblForTitle.Text = "住 院 病 案 首 页";
            this.m_lblForTitle.Visible = true;
            // 
            // chkModifyWithoutMatk
            // 
            this.chkModifyWithoutMatk.Location = new System.Drawing.Point(242, 202);
            this.chkModifyWithoutMatk.Size = new System.Drawing.Size(10, 24);
            // 
            // m_cmdModifyPatientInfo
            // 
            this.m_cmdModifyPatientInfo.Location = new System.Drawing.Point(722, 35);
            this.m_cmdModifyPatientInfo.Size = new System.Drawing.Size(69, 29);
            // 
            // m_pnlNewBase
            // 
            this.m_pnlNewBase.Controls.Add(this.m_cmdFillPrint);
            this.m_pnlNewBase.Controls.Add(this.m_cmdCommit);
            this.m_pnlNewBase.Location = new System.Drawing.Point(4, 5);
            this.m_pnlNewBase.Size = new System.Drawing.Size(799, 60);
            this.m_pnlNewBase.Visible = true;
            this.m_pnlNewBase.Controls.SetChildIndex(this.m_ctlPatientInfo, 0);
            this.m_pnlNewBase.Controls.SetChildIndex(this.m_cmdCommit, 0);
            this.m_pnlNewBase.Controls.SetChildIndex(this.m_cmdFillPrint, 0);
            // 
            // m_ctlPatientInfo
            // 
            this.m_ctlPatientInfo.m_BlnIsShowHomePlace = true;
            this.m_ctlPatientInfo.m_BlnIsShowPatientAge = true;
            this.m_ctlPatientInfo.m_BlnIsShowPatientName = true;
            this.m_ctlPatientInfo.m_BlnIsShowSex = true;
            this.m_ctlPatientInfo.Size = new System.Drawing.Size(797, 29);
            this.m_ctlPatientInfo.Load += new System.EventHandler(this.m_ctlPatientInfo_Load);
            // 
            // label3
            // 
            this.label3.AutoSize = true;
            this.label3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label3.Location = new System.Drawing.Point(518, 11);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(70, 14);
            this.label3.TabIndex = 525;
            this.label3.Text = "出生日期:";
            this.label3.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblIDCardTitle
            // 
            this.lblIDCardTitle.AutoSize = true;
            this.lblIDCardTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblIDCardTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblIDCardTitle.Location = new System.Drawing.Point(152, 6);
            this.lblIDCardTitle.Name = "lblIDCardTitle";
            this.lblIDCardTitle.Size = new System.Drawing.Size(84, 14);
            this.lblIDCardTitle.TabIndex = 514;
            this.lblIDCardTitle.Text = "身份证号码:";
            // 
            // lblOccupationTitle
            // 
            this.lblOccupationTitle.AutoSize = true;
            this.lblOccupationTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOccupationTitle.Location = new System.Drawing.Point(329, 34);
            this.lblOccupationTitle.Name = "lblOccupationTitle";
            this.lblOccupationTitle.Size = new System.Drawing.Size(42, 14);
            this.lblOccupationTitle.TabIndex = 512;
            this.lblOccupationTitle.Text = "职业:";
            this.lblOccupationTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblNationTitle
            // 
            this.lblNationTitle.AutoSize = true;
            this.lblNationTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblNationTitle.Location = new System.Drawing.Point(517, 32);
            this.lblNationTitle.Name = "lblNationTitle";
            this.lblNationTitle.Size = new System.Drawing.Size(42, 14);
            this.lblNationTitle.TabIndex = 510;
            this.lblNationTitle.Text = "民族:";
            this.lblNationTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblNationalityTitle
            // 
            this.lblNationalityTitle.AutoSize = true;
            this.lblNationalityTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblNationalityTitle.Location = new System.Drawing.Point(5, 34);
            this.lblNationalityTitle.Name = "lblNationalityTitle";
            this.lblNationalityTitle.Size = new System.Drawing.Size(56, 14);
            this.lblNationalityTitle.TabIndex = 508;
            this.lblNationalityTitle.Text = "国  家:";
            this.lblNationalityTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblMarriedTitle
            // 
            this.lblMarriedTitle.AutoSize = true;
            this.lblMarriedTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblMarriedTitle.Location = new System.Drawing.Point(639, 32);
            this.lblMarriedTitle.Name = "lblMarriedTitle";
            this.lblMarriedTitle.Size = new System.Drawing.Size(42, 14);
            this.lblMarriedTitle.TabIndex = 506;
            this.lblMarriedTitle.Text = "婚姻:";
            this.lblMarriedTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblOfficePCTitle
            // 
            this.lblOfficePCTitle.AutoSize = true;
            this.lblOfficePCTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblOfficePCTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOfficePCTitle.Location = new System.Drawing.Point(592, 31);
            this.lblOfficePCTitle.Name = "lblOfficePCTitle";
            this.lblOfficePCTitle.Size = new System.Drawing.Size(70, 14);
            this.lblOfficePCTitle.TabIndex = 535;
            this.lblOfficePCTitle.Text = "邮政编码:";
            // 
            // lblOfficeAddressTitle
            // 
            this.lblOfficeAddressTitle.AutoSize = true;
            this.lblOfficeAddressTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblOfficeAddressTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOfficeAddressTitle.Location = new System.Drawing.Point(5, 31);
            this.lblOfficeAddressTitle.Name = "lblOfficeAddressTitle";
            this.lblOfficeAddressTitle.Size = new System.Drawing.Size(70, 14);
            this.lblOfficeAddressTitle.TabIndex = 534;
            this.lblOfficeAddressTitle.Text = "工作单位:";
            // 
            // lblOfficePhoneTitle
            // 
            this.lblOfficePhoneTitle.AutoSize = true;
            this.lblOfficePhoneTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblOfficePhoneTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOfficePhoneTitle.Location = new System.Drawing.Point(5, 6);
            this.lblOfficePhoneTitle.Name = "lblOfficePhoneTitle";
            this.lblOfficePhoneTitle.Size = new System.Drawing.Size(49, 14);
            this.lblOfficePhoneTitle.TabIndex = 538;
            this.lblOfficePhoneTitle.Text = "*电话:";
            // 
            // lblHmePCTitle
            // 
            this.lblHmePCTitle.AutoSize = true;
            this.lblHmePCTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblHmePCTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblHmePCTitle.Location = new System.Drawing.Point(592, 58);
            this.lblHmePCTitle.Name = "lblHmePCTitle";
            this.lblHmePCTitle.Size = new System.Drawing.Size(70, 14);
            this.lblHmePCTitle.TabIndex = 541;
            this.lblHmePCTitle.Text = "邮政编码:";
            // 
            // lblHomeAddressTitle
            // 
            this.lblHomeAddressTitle.AutoSize = true;
            this.lblHomeAddressTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblHomeAddressTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblHomeAddressTitle.Location = new System.Drawing.Point(5, 58);
            this.lblHomeAddressTitle.Name = "lblHomeAddressTitle";
            this.lblHomeAddressTitle.Size = new System.Drawing.Size(70, 14);
            this.lblHomeAddressTitle.TabIndex = 540;
            this.lblHomeAddressTitle.Text = "户口住址:";
            // 
            // lblOutHospitalDateTitle
            // 
            this.lblOutHospitalDateTitle.AutoSize = true;
            this.lblOutHospitalDateTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOutHospitalDateTitle.Location = new System.Drawing.Point(0, 64);
            this.lblOutHospitalDateTitle.Name = "lblOutHospitalDateTitle";
            this.lblOutHospitalDateTitle.Size = new System.Drawing.Size(70, 14);
            this.lblOutHospitalDateTitle.TabIndex = 563;
            this.lblOutHospitalDateTitle.Text = "出院日期:";
            // 
            // lblInHospitalSetionTitle
            // 
            this.lblInHospitalSetionTitle.AutoSize = true;
            this.lblInHospitalSetionTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblInHospitalSetionTitle.Location = new System.Drawing.Point(0, 8);
            this.lblInHospitalSetionTitle.Name = "lblInHospitalSetionTitle";
            this.lblInHospitalSetionTitle.Size = new System.Drawing.Size(70, 14);
            this.lblInHospitalSetionTitle.TabIndex = 570;
            this.lblInHospitalSetionTitle.Text = "入院科别:";
            // 
            // lblInSickRoomTitle
            // 
            this.lblInSickRoomTitle.AutoSize = true;
            this.lblInSickRoomTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblInSickRoomTitle.Location = new System.Drawing.Point(226, 8);
            this.lblInSickRoomTitle.Name = "lblInSickRoomTitle";
            this.lblInSickRoomTitle.Size = new System.Drawing.Size(42, 14);
            this.lblInSickRoomTitle.TabIndex = 572;
            this.lblInSickRoomTitle.Text = "病床:";
            // 
            // lblInHospitalDaysTitle
            // 
            this.lblInHospitalDaysTitle.AutoSize = true;
            this.lblInHospitalDaysTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblInHospitalDaysTitle.Location = new System.Drawing.Point(274, 64);
            this.lblInHospitalDaysTitle.Name = "lblInHospitalDaysTitle";
            this.lblInHospitalDaysTitle.Size = new System.Drawing.Size(70, 14);
            this.lblInHospitalDaysTitle.TabIndex = 579;
            this.lblInHospitalDaysTitle.Text = "实际住院:";
            // 
            // lblOutSickRoomTitle
            // 
            this.lblOutSickRoomTitle.AutoSize = true;
            this.lblOutSickRoomTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOutSickRoomTitle.Location = new System.Drawing.Point(226, 36);
            this.lblOutSickRoomTitle.Name = "lblOutSickRoomTitle";
            this.lblOutSickRoomTitle.Size = new System.Drawing.Size(42, 14);
            this.lblOutSickRoomTitle.TabIndex = 578;
            this.lblOutSickRoomTitle.Text = "病床:";
            // 
            // lblOutHospitalSetionTitle
            // 
            this.lblOutHospitalSetionTitle.AutoSize = true;
            this.lblOutHospitalSetionTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOutHospitalSetionTitle.Location = new System.Drawing.Point(0, 36);
            this.lblOutHospitalSetionTitle.Name = "lblOutHospitalSetionTitle";
            this.lblOutHospitalSetionTitle.Size = new System.Drawing.Size(70, 14);
            this.lblOutHospitalSetionTitle.TabIndex = 576;
            this.lblOutHospitalSetionTitle.Text = "出院科别:";
            // 
            // lblDays
            // 
            this.lblDays.AutoSize = true;
            this.lblDays.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblDays.Location = new System.Drawing.Point(383, 65);
            this.lblDays.Name = "lblDays";
            this.lblDays.Size = new System.Drawing.Size(21, 14);
            this.lblDays.TabIndex = 581;
            this.lblDays.Text = "天";
            // 
            // lblDiagnosisTitle
            // 
            this.lblDiagnosisTitle.AutoSize = true;
            this.lblDiagnosisTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblDiagnosisTitle.Location = new System.Drawing.Point(0, 96);
            this.lblDiagnosisTitle.Name = "lblDiagnosisTitle";
            this.lblDiagnosisTitle.Size = new System.Drawing.Size(105, 14);
            this.lblDiagnosisTitle.TabIndex = 582;
            this.lblDiagnosisTitle.Text = "*门(急)诊诊断:";
            // 
            // lblConditionWhenInTitle
            // 
            this.lblConditionWhenInTitle.AutoSize = true;
            this.lblConditionWhenInTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblConditionWhenInTitle.Location = new System.Drawing.Point(42, 260);
            this.lblConditionWhenInTitle.Name = "lblConditionWhenInTitle";
            this.lblConditionWhenInTitle.Size = new System.Drawing.Size(84, 14);
            this.lblConditionWhenInTitle.TabIndex = 588;
            this.lblConditionWhenInTitle.Text = "入院时情况:";
            // 
            // lblConfirmDiagnosisDateTitle
            // 
            this.lblConfirmDiagnosisDateTitle.AutoSize = true;
            this.lblConfirmDiagnosisDateTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblConfirmDiagnosisDateTitle.Location = new System.Drawing.Point(305, 226);
            this.lblConfirmDiagnosisDateTitle.Name = "lblConfirmDiagnosisDateTitle";
            this.lblConfirmDiagnosisDateTitle.Size = new System.Drawing.Size(119, 14);
            this.lblConfirmDiagnosisDateTitle.TabIndex = 593;
            this.lblConfirmDiagnosisDateTitle.Text = "*入院后确诊日期:";
            // 
            // lblMasterDiagnose
            // 
            this.lblMasterDiagnose.AutoSize = true;
            this.lblMasterDiagnose.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblMasterDiagnose.Location = new System.Drawing.Point(9, 9);
            this.lblMasterDiagnose.Name = "lblMasterDiagnose";
            this.lblMasterDiagnose.Size = new System.Drawing.Size(70, 14);
            this.lblMasterDiagnose.TabIndex = 597;
            this.lblMasterDiagnose.Text = "*主要诊断";
            // 
            // txtMainDiagnosis
            // 
            this.txtMainDiagnosis.AccessibleDescription = "出院诊断";
            this.txtMainDiagnosis.BackColor = System.Drawing.Color.White;
            this.txtMainDiagnosis.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtMainDiagnosis.ForeColor = System.Drawing.Color.Black;
            this.txtMainDiagnosis.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtMainDiagnosis.Location = new System.Drawing.Point(95, 6);
            this.txtMainDiagnosis.m_BlnIgnoreUserInfo = false;
            this.txtMainDiagnosis.m_BlnPartControl = false;
            this.txtMainDiagnosis.m_BlnReadOnly = false;
            this.txtMainDiagnosis.m_BlnUnderLineDST = false;
            this.txtMainDiagnosis.m_ClrDST = System.Drawing.Color.Red;
            this.txtMainDiagnosis.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtMainDiagnosis.m_IntCanModifyTime = 6;
            this.txtMainDiagnosis.m_IntPartControlLength = 0;
            this.txtMainDiagnosis.m_IntPartControlStartIndex = 0;
            this.txtMainDiagnosis.m_StrUserID = "";
            this.txtMainDiagnosis.m_StrUserName = "";
            this.txtMainDiagnosis.MaxLength = 8000;
            this.txtMainDiagnosis.Multiline = false;
            this.txtMainDiagnosis.Name = "txtMainDiagnosis";
            this.txtMainDiagnosis.Size = new System.Drawing.Size(374, 24);
            this.txtMainDiagnosis.TabIndex = 0;
            this.txtMainDiagnosis.Text = "";
            this.txtMainDiagnosis.Leave += new System.EventHandler(this.QueryControls_Leave);
            this.txtMainDiagnosis.Enter += new System.EventHandler(this.QueryControls_Enter);
            this.txtMainDiagnosis.KeyDown += new System.Windows.Forms.KeyEventHandler(this.m_mthEvent_KeyDown);
            // 
            // lblPathologyDiagnosisTitle
            // 
            this.lblPathologyDiagnosisTitle.AutoSize = true;
            this.lblPathologyDiagnosisTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblPathologyDiagnosisTitle.ForeColor = System.Drawing.Color.Black;
            this.lblPathologyDiagnosisTitle.Location = new System.Drawing.Point(9, 275);
            this.lblPathologyDiagnosisTitle.Name = "lblPathologyDiagnosisTitle";
            this.lblPathologyDiagnosisTitle.Size = new System.Drawing.Size(70, 14);
            this.lblPathologyDiagnosisTitle.TabIndex = 613;
            this.lblPathologyDiagnosisTitle.Text = "病理诊断:";
            // 
            // txtPathologyDiagnosis
            // 
            this.txtPathologyDiagnosis.AccessibleDescription = "病理诊断";
            this.txtPathologyDiagnosis.BackColor = System.Drawing.Color.White;
            this.txtPathologyDiagnosis.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtPathologyDiagnosis.ForeColor = System.Drawing.Color.Black;
            this.txtPathologyDiagnosis.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtPathologyDiagnosis.Location = new System.Drawing.Point(80, 273);
            this.txtPathologyDiagnosis.m_BlnIgnoreUserInfo = false;
            this.txtPathologyDiagnosis.m_BlnPartControl = false;
            this.txtPathologyDiagnosis.m_BlnReadOnly = false;
            this.txtPathologyDiagnosis.m_BlnUnderLineDST = false;
            this.txtPathologyDiagnosis.m_ClrDST = System.Drawing.Color.Red;
            this.txtPathologyDiagnosis.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtPathologyDiagnosis.m_IntCanModifyTime = 6;
            this.txtPathologyDiagnosis.m_IntPartControlLength = 0;
            this.txtPathologyDiagnosis.m_IntPartControlStartIndex = 0;
            this.txtPathologyDiagnosis.m_StrUserID = "";
            this.txtPathologyDiagnosis.m_StrUserName = "";
            this.txtPathologyDiagnosis.MaxLength = 8000;
            this.txtPathologyDiagnosis.Multiline = false;
            this.txtPathologyDiagnosis.Name = "txtPathologyDiagnosis";
            this.txtPathologyDiagnosis.Size = new System.Drawing.Size(661, 20);
            this.txtPathologyDiagnosis.TabIndex = 7;
            this.txtPathologyDiagnosis.Text = "";
            this.txtPathologyDiagnosis.Leave += new System.EventHandler(this.txtPathologyDiagnosis_Leave);
            // 
            // txtScacheSource
            // 
            this.txtScacheSource.AccessibleDescription = "损伤、中毒的外部因素";
            this.txtScacheSource.BackColor = System.Drawing.Color.White;
            this.txtScacheSource.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtScacheSource.ForeColor = System.Drawing.Color.Black;
            this.txtScacheSource.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtScacheSource.Location = new System.Drawing.Point(161, 299);
            this.txtScacheSource.m_BlnIgnoreUserInfo = false;
            this.txtScacheSource.m_BlnPartControl = false;
            this.txtScacheSource.m_BlnReadOnly = false;
            this.txtScacheSource.m_BlnUnderLineDST = false;
            this.txtScacheSource.m_ClrDST = System.Drawing.Color.Red;
            this.txtScacheSource.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtScacheSource.m_IntCanModifyTime = 6;
            this.txtScacheSource.m_IntPartControlLength = 0;
            this.txtScacheSource.m_IntPartControlStartIndex = 0;
            this.txtScacheSource.m_StrUserID = "";
            this.txtScacheSource.m_StrUserName = "";
            this.txtScacheSource.MaxLength = 8000;
            this.txtScacheSource.Multiline = false;
            this.txtScacheSource.Name = "txtScacheSource";
            this.txtScacheSource.Size = new System.Drawing.Size(580, 20);
            this.txtScacheSource.TabIndex = 8;
            this.txtScacheSource.Text = "";
            // 
            // lblScacheSourceTitle
            // 
            this.lblScacheSourceTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblScacheSourceTitle.ForeColor = System.Drawing.Color.Black;
            this.lblScacheSourceTitle.Location = new System.Drawing.Point(9, 303);
            this.lblScacheSourceTitle.Name = "lblScacheSourceTitle";
            this.lblScacheSourceTitle.Size = new System.Drawing.Size(164, 19);
            this.lblScacheSourceTitle.TabIndex = 615;
            this.lblScacheSourceTitle.Text = "损伤、中毒的外部因素:";
            // 
            // lblSensitivetitle
            // 
            this.lblSensitivetitle.AutoSize = true;
            this.lblSensitivetitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblSensitivetitle.ForeColor = System.Drawing.Color.Black;
            this.lblSensitivetitle.Location = new System.Drawing.Point(9, 333);
            this.lblSensitivetitle.Name = "lblSensitivetitle";
            this.lblSensitivetitle.Size = new System.Drawing.Size(77, 14);
            this.lblSensitivetitle.TabIndex = 618;
            this.lblSensitivetitle.Text = "*药物过敏:";
            // 
            // txtSensitive
            // 
            this.txtSensitive.AccessibleDescription = "药物过敏";
            this.txtSensitive.BackColor = System.Drawing.Color.White;
            this.txtSensitive.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.txtSensitive.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtSensitive.ForeColor = System.Drawing.Color.Black;
            this.txtSensitive.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtSensitive.Location = new System.Drawing.Point(81, 331);
            this.txtSensitive.m_BlnIgnoreUserInfo = false;
            this.txtSensitive.m_BlnPartControl = false;
            this.txtSensitive.m_BlnReadOnly = false;
            this.txtSensitive.m_BlnUnderLineDST = false;
            this.txtSensitive.m_ClrDST = System.Drawing.Color.Red;
            this.txtSensitive.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtSensitive.m_IntCanModifyTime = 6;
            this.txtSensitive.m_IntPartControlLength = 0;
            this.txtSensitive.m_IntPartControlStartIndex = 0;
            this.txtSensitive.m_StrUserID = "";
            this.txtSensitive.m_StrUserName = "";
            this.txtSensitive.MaxLength = 8000;
            this.txtSensitive.Multiline = false;
            this.txtSensitive.Name = "txtSensitive";
            this.txtSensitive.Size = new System.Drawing.Size(331, 22);
            this.txtSensitive.TabIndex = 9;
            this.txtSensitive.Text = "";
            this.txtSensitive.Leave += new System.EventHandler(this.txtSensitive_Leave);
            this.txtSensitive.TextChanged += new System.EventHandler(this.txtSensitive_TextChanged);
            // 
            // lblConditionTitle
            // 
            this.lblConditionTitle.AutoSize = true;
            this.lblConditionTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblConditionTitle.Location = new System.Drawing.Point(631, 9);
            this.lblConditionTitle.Name = "lblConditionTitle";
            this.lblConditionTitle.Size = new System.Drawing.Size(63, 14);
            this.lblConditionTitle.TabIndex = 619;
            this.lblConditionTitle.Text = "出院情况";
            // 
            // txtICD_10OfMain
            // 
            this.txtICD_10OfMain.AccessibleDescription = "ICD-10";
            this.txtICD_10OfMain.BackColor = System.Drawing.Color.White;
            this.txtICD_10OfMain.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtICD_10OfMain.ForeColor = System.Drawing.Color.Black;
            this.txtICD_10OfMain.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtICD_10OfMain.Location = new System.Drawing.Point(536, 6);
            this.txtICD_10OfMain.m_BlnIgnoreUserInfo = false;
            this.txtICD_10OfMain.m_BlnPartControl = false;
            this.txtICD_10OfMain.m_BlnReadOnly = false;
            this.txtICD_10OfMain.m_BlnUnderLineDST = false;
            this.txtICD_10OfMain.m_ClrDST = System.Drawing.Color.Red;
            this.txtICD_10OfMain.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtICD_10OfMain.m_IntCanModifyTime = 6;
            this.txtICD_10OfMain.m_IntPartControlLength = 0;
            this.txtICD_10OfMain.m_IntPartControlStartIndex = 0;
            this.txtICD_10OfMain.m_StrUserID = "";
            this.txtICD_10OfMain.m_StrUserName = "";
            this.txtICD_10OfMain.MaxLength = 8000;
            this.txtICD_10OfMain.Multiline = false;
            this.txtICD_10OfMain.Name = "txtICD_10OfMain";
            this.txtICD_10OfMain.Size = new System.Drawing.Size(93, 24);
            this.txtICD_10OfMain.TabIndex = 3;
            this.txtICD_10OfMain.Text = "";
            this.txtICD_10OfMain.Leave += new System.EventHandler(this.QueryControls_Leave);
            this.txtICD_10OfMain.Enter += new System.EventHandler(this.QueryControls_Enter);
            this.txtICD_10OfMain.KeyDown += new System.Windows.Forms.KeyEventHandler(this.m_mthEvent_KeyDown);
            // 
            // txtSalveTimes
            // 
            this.txtSalveTimes.AccessibleDescription = "抢救";
            this.txtSalveTimes.BackColor = System.Drawing.Color.White;
            this.txtSalveTimes.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtSalveTimes.ForeColor = System.Drawing.Color.Black;
            this.txtSalveTimes.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtSalveTimes.Location = new System.Drawing.Point(667, 363);
            this.txtSalveTimes.m_BlnIgnoreUserInfo = false;
            this.txtSalveTimes.m_BlnPartControl = false;
            this.txtSalveTimes.m_BlnReadOnly = false;
            this.txtSalveTimes.m_BlnUnderLineDST = false;
            this.txtSalveTimes.m_ClrDST = System.Drawing.Color.Red;
            this.txtSalveTimes.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtSalveTimes.m_IntCanModifyTime = 6;
            this.txtSalveTimes.m_IntPartControlLength = 0;
            this.txtSalveTimes.m_IntPartControlStartIndex = 0;
            this.txtSalveTimes.m_StrUserID = "";
            this.txtSalveTimes.m_StrUserName = "";
            this.txtSalveTimes.MaxLength = 50;
            this.txtSalveTimes.Multiline = false;
            this.txtSalveTimes.Name = "txtSalveTimes";
            this.txtSalveTimes.Size = new System.Drawing.Size(40, 20);
            this.txtSalveTimes.TabIndex = 12;
            this.txtSalveTimes.Text = "";
            // 
            // lblSalveTitle
            // 
            this.lblSalveTitle.AutoSize = true;
            this.lblSalveTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblSalveTitle.ForeColor = System.Drawing.Color.Black;
            this.lblSalveTitle.Location = new System.Drawing.Point(630, 365);
            this.lblSalveTitle.Name = "lblSalveTitle";
            this.lblSalveTitle.Size = new System.Drawing.Size(35, 14);
            this.lblSalveTitle.TabIndex = 721;
            this.lblSalveTitle.Text = "抢救";
            // 
            // lblTims2
            // 
            this.lblTims2.AutoSize = true;
            this.lblTims2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblTims2.ForeColor = System.Drawing.Color.Black;
            this.lblTims2.Location = new System.Drawing.Point(711, 366);
            this.lblTims2.Name = "lblTims2";
            this.lblTims2.Size = new System.Drawing.Size(21, 14);
            this.lblTims2.TabIndex = 723;
            this.lblTims2.Text = "次";
            // 
            // lblTimes3
            // 
            this.lblTimes3.AutoSize = true;
            this.lblTimes3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblTimes3.ForeColor = System.Drawing.Color.Black;
            this.lblTimes3.Location = new System.Drawing.Point(711, 388);
            this.lblTimes3.Name = "lblTimes3";
            this.lblTimes3.Size = new System.Drawing.Size(21, 14);
            this.lblTimes3.TabIndex = 726;
            this.lblTimes3.Text = "次";
            // 
            // txtSalveSuccess
            // 
            this.txtSalveSuccess.AccessibleDescription = "成功";
            this.txtSalveSuccess.BackColor = System.Drawing.Color.White;
            this.txtSalveSuccess.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtSalveSuccess.ForeColor = System.Drawing.Color.Black;
            this.txtSalveSuccess.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtSalveSuccess.Location = new System.Drawing.Point(667, 387);
            this.txtSalveSuccess.m_BlnIgnoreUserInfo = false;
            this.txtSalveSuccess.m_BlnPartControl = false;
            this.txtSalveSuccess.m_BlnReadOnly = false;
            this.txtSalveSuccess.m_BlnUnderLineDST = false;
            this.txtSalveSuccess.m_ClrDST = System.Drawing.Color.Red;
            this.txtSalveSuccess.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtSalveSuccess.m_IntCanModifyTime = 6;
            this.txtSalveSuccess.m_IntPartControlLength = 0;
            this.txtSalveSuccess.m_IntPartControlStartIndex = 0;
            this.txtSalveSuccess.m_StrUserID = "";
            this.txtSalveSuccess.m_StrUserName = "";
            this.txtSalveSuccess.MaxLength = 50;
            this.txtSalveSuccess.Multiline = false;
            this.txtSalveSuccess.Name = "txtSalveSuccess";
            this.txtSalveSuccess.Size = new System.Drawing.Size(40, 20);
            this.txtSalveSuccess.TabIndex = 13;
            this.txtSalveSuccess.Text = "";
            // 
            // lblSuccessTitle
            // 
            this.lblSuccessTitle.AutoSize = true;
            this.lblSuccessTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblSuccessTitle.ForeColor = System.Drawing.Color.Black;
            this.lblSuccessTitle.Location = new System.Drawing.Point(631, 388);
            this.lblSuccessTitle.Name = "lblSuccessTitle";
            this.lblSuccessTitle.Size = new System.Drawing.Size(35, 14);
            this.lblSuccessTitle.TabIndex = 724;
            this.lblSuccessTitle.Text = "成功";
            // 
            // lblQualityTitle
            // 
            this.lblQualityTitle.AutoSize = true;
            this.lblQualityTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblQualityTitle.ForeColor = System.Drawing.Color.Black;
            this.lblQualityTitle.Location = new System.Drawing.Point(7, 471);
            this.lblQualityTitle.Name = "lblQualityTitle";
            this.lblQualityTitle.Size = new System.Drawing.Size(77, 14);
            this.lblQualityTitle.TabIndex = 743;
            this.lblQualityTitle.Text = "*病案质量:";
            // 
            // lblQCDateTitle
            // 
            this.lblQCDateTitle.AutoSize = true;
            this.lblQCDateTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblQCDateTitle.Location = new System.Drawing.Point(563, 468);
            this.lblQCDateTitle.Name = "lblQCDateTitle";
            this.lblQCDateTitle.Size = new System.Drawing.Size(42, 14);
            this.lblQCDateTitle.TabIndex = 748;
            this.lblQCDateTitle.Text = "日期:";
            // 
            // dtpQCTime
            // 
            this.dtpQCTime.CustomFormat = "yyyy年MM月dd日";
            this.dtpQCTime.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dtpQCTime.Format = System.Windows.Forms.DateTimePickerFormat.Custom;
            this.dtpQCTime.Location = new System.Drawing.Point(600, 465);
            this.dtpQCTime.Name = "dtpQCTime";
            this.dtpQCTime.Size = new System.Drawing.Size(140, 23);
            this.dtpQCTime.TabIndex = 25;
            this.dtpQCTime.CloseUp += new System.EventHandler(this.dtpQCTime_MouseLeave);
            // 
            // dtgOperation
            // 
            this.dtgOperation.AllowSorting = false;
            this.dtgOperation.BackgroundColor = System.Drawing.Color.White;
            this.dtgOperation.CaptionBackColor = System.Drawing.SystemColors.AppWorkspace;
            this.dtgOperation.CaptionForeColor = System.Drawing.Color.Black;
            this.dtgOperation.CaptionText = "手术情况";
            this.dtgOperation.DataMember = "";
            this.dtgOperation.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dtgOperation.ForeColor = System.Drawing.Color.Black;
            this.dtgOperation.HeaderForeColor = System.Drawing.Color.White;
            this.dtgOperation.Location = new System.Drawing.Point(12, 6);
            this.dtgOperation.Name = "dtgOperation";
            this.dtgOperation.ParentRowsForeColor = System.Drawing.Color.White;
            this.dtgOperation.RowHeaderWidth = 40;
            this.dtgOperation.Size = new System.Drawing.Size(728, 250);
            this.dtgOperation.TabIndex = 0;
            this.dtgOperation.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle5});
            this.dtgOperation.Enter += new System.EventHandler(this.QueryControls_Enter);
            this.dtgOperation.CurrentCellChanged += new System.EventHandler(this.dtgOperation_CurrentCellChanged);
            this.dtgOperation.Leave += new System.EventHandler(this.dtgOperation_Leave);
            // 
            // dataGridTableStyle5
            // 
            this.dataGridTableStyle5.DataGrid = this.dtgOperation;
            this.dataGridTableStyle5.GridColumnStyles.AddRange(new System.Windows.Forms.DataGridColumnStyle[] {
            this.m_dtcOperationID,
            this.m_dtcOperationDate,
            this.m_dtcOperationName,
            this.m_dtcOperator,
            this.m_dtcAssistant1,
            this.m_dtcAssistant2,
            this.m_dtcAnaesthesiaMode,
            this.m_dtcCutLevel,
            this.m_dtcAnaesthetist});
            this.dataGridTableStyle5.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGridTableStyle5.MappingName = "OperationDetail";
            // 
            // m_dtcOperationID
            // 
            this.m_dtcOperationID.Format = "yyyy-MM-dd";
            this.m_dtcOperationID.FormatInfo = null;
            this.m_dtcOperationID.HeaderText = "手术、操作编码";
            this.m_dtcOperationID.MappingName = "手术、操作编码";
            this.m_dtcOperationID.Width = 150;
            // 
            // m_dtcOperationDate
            // 
            this.m_dtcOperationDate.Format = "yyyy-MM-dd";
            this.m_dtcOperationDate.FormatInfo = null;
            this.m_dtcOperationDate.HeaderText = "手术、操作日期";
            this.m_dtcOperationDate.MappingName = "手术、操作日期";
            this.m_dtcOperationDate.NullText = "";
            this.m_dtcOperationDate.Width = 150;
            // 
            // m_dtcOperationName
            // 
            this.m_dtcOperationName.Format = "";
            this.m_dtcOperationName.FormatInfo = null;
            this.m_dtcOperationName.HeaderText = "手术、操作名称";
            this.m_dtcOperationName.MappingName = "手术、操作名称";
            this.m_dtcOperationName.Width = 200;
            // 
            // m_dtcOperator
            // 
            this.m_dtcOperator.Format = "";
            this.m_dtcOperator.FormatInfo = null;
            this.m_dtcOperator.HeaderText = "术者";
            this.m_dtcOperator.MappingName = "术者";
            this.m_dtcOperator.ReadOnly = true;
            this.m_dtcOperator.Width = 75;
            // 
            // m_dtcAssistant1
            // 
            this.m_dtcAssistant1.Format = "";
            this.m_dtcAssistant1.FormatInfo = null;
            this.m_dtcAssistant1.HeaderText = "Ⅰ助";
            this.m_dtcAssistant1.MappingName = "Ⅰ助";
            this.m_dtcAssistant1.ReadOnly = true;
            this.m_dtcAssistant1.Width = 75;
            // 
            // m_dtcAssistant2
            // 
            this.m_dtcAssistant2.Format = "";
            this.m_dtcAssistant2.FormatInfo = null;
            this.m_dtcAssistant2.HeaderText = "Ⅱ助";
            this.m_dtcAssistant2.MappingName = "Ⅱ助";
            this.m_dtcAssistant2.ReadOnly = true;
            this.m_dtcAssistant2.Width = 75;
            // 
            // m_dtcAnaesthesiaMode
            // 
            this.m_dtcAnaesthesiaMode.Format = "";
            this.m_dtcAnaesthesiaMode.FormatInfo = null;
            this.m_dtcAnaesthesiaMode.HeaderText = "麻醉方式";
            this.m_dtcAnaesthesiaMode.MappingName = "麻醉方式";
            this.m_dtcAnaesthesiaMode.Width = 120;
            // 
            // m_dtcCutLevel
            // 
            this.m_dtcCutLevel.Format = "";
            this.m_dtcCutLevel.FormatInfo = null;
            this.m_dtcCutLevel.HeaderText = "切口愈合等级";
            this.m_dtcCutLevel.MappingName = "切口愈合等级";
            this.m_dtcCutLevel.Width = 75;
            // 
            // m_dtcAnaesthetist
            // 
            this.m_dtcAnaesthetist.Format = "";
            this.m_dtcAnaesthetist.FormatInfo = null;
            this.m_dtcAnaesthetist.HeaderText = "麻醉医师";
            this.m_dtcAnaesthetist.MappingName = "麻醉医师";
            this.m_dtcAnaesthetist.ReadOnly = true;
            this.m_dtcAnaesthetist.Width = 75;
            // 
            // dtgBaby
            // 
            this.dtgBaby.AllowSorting = false;
            this.dtgBaby.BackgroundColor = System.Drawing.Color.White;
            this.dtgBaby.CaptionBackColor = System.Drawing.SystemColors.AppWorkspace;
            this.dtgBaby.CaptionForeColor = System.Drawing.Color.Black;
            this.dtgBaby.CaptionText = "产科分娩婴儿记录表";
            this.dtgBaby.DataMember = "";
            this.dtgBaby.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dtgBaby.ForeColor = System.Drawing.Color.Black;
            this.dtgBaby.HeaderForeColor = System.Drawing.Color.White;
            this.dtgBaby.Location = new System.Drawing.Point(12, 271);
            this.dtgBaby.Name = "dtgBaby";
            this.dtgBaby.ParentRowsForeColor = System.Drawing.Color.White;
            this.dtgBaby.RowHeaderWidth = 40;
            this.dtgBaby.Size = new System.Drawing.Size(728, 210);
            this.dtgBaby.TabIndex = 1;
            this.dtgBaby.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dtsBaby});
            this.dtgBaby.CurrentCellChanged += new System.EventHandler(this.dtgBaby_CurrentCellChanged);
            // 
            // dtsBaby
            // 
            this.dtsBaby.AllowSorting = false;
            this.dtsBaby.DataGrid = this.dtgBaby;
            this.dtsBaby.GridColumnStyles.AddRange(new System.Windows.Forms.DataGridColumnStyle[] {
            this.dtcSeqNo,
            this.dtcMale,
            this.dtcFemale,
            this.dtcLiveBorn,
            this.dtcDieBorn,
            this.dtcDieNotBorn,
            this.dtcWeight,
            this.dtcDie,
            this.dtcChangeDepartment,
            this.dtcOutHospital,
            this.dtcNatural,
            this.dtcSuffocate1,
            this.dtcSuffocate2,
            this.dtcInfectionTimes,
            this.dtcInfectionName,
            this.dtcICD10,
            this.dtcSalveTimes,
            this.dtcSalveSuccessTimes});
            this.dtsBaby.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dtsBaby.MappingName = "Baby";
            // 
            // dtcSeqNo
            // 
            this.dtcSeqNo.Format = "";
            this.dtcSeqNo.FormatInfo = null;
            this.dtcSeqNo.HeaderText = "婴儿序号";
            this.dtcSeqNo.MappingName = "婴儿序号";
            this.dtcSeqNo.NullText = "";
            this.dtcSeqNo.ReadOnly = true;
            this.dtcSeqNo.Width = 80;
            // 
            // dtcMale
            // 
            this.dtcMale.AllowNull = false;
            this.dtcMale.HeaderText = "男性";
            this.dtcMale.MappingName = "男性";
            this.dtcMale.NullText = "";
            this.dtcMale.NullValue = "False";
            this.dtcMale.Width = 60;
            // 
            // dtcFemale
            // 
            this.dtcFemale.AllowNull = false;
            this.dtcFemale.HeaderText = "女性";
            this.dtcFemale.MappingName = "女性";
            this.dtcFemale.NullText = "";
            this.dtcFemale.NullValue = "False";
            this.dtcFemale.Width = 60;
            // 
            // dtcLiveBorn
            // 
            this.dtcLiveBorn.AllowNull = false;
            this.dtcLiveBorn.HeaderText = "活产";
            this.dtcLiveBorn.MappingName = "活产";
            this.dtcLiveBorn.NullText = "";
            this.dtcLiveBorn.NullValue = "False";
            this.dtcLiveBorn.Width = 60;
            // 
            // dtcDieBorn
            // 
            this.dtcDieBorn.AllowNull = false;
            this.dtcDieBorn.HeaderText = "死产";
            this.dtcDieBorn.MappingName = "死产";
            this.dtcDieBorn.NullText = "";
            this.dtcDieBorn.NullValue = "False";
            this.dtcDieBorn.Width = 60;
            // 
            // dtcDieNotBorn
            // 
            this.dtcDieNotBorn.AllowNull = false;
            this.dtcDieNotBorn.HeaderText = "死胎";
            this.dtcDieNotBorn.MappingName = "死胎";
            this.dtcDieNotBorn.NullText = "";
            this.dtcDieNotBorn.NullValue = "False";
            this.dtcDieNotBorn.Width = 60;
            // 
            // dtcWeight
            // 
            this.dtcWeight.Format = "";
            this.dtcWeight.FormatInfo = null;
            this.dtcWeight.HeaderText = "婴儿体重(g)";
            this.dtcWeight.MappingName = "婴儿体重(g)";
            this.dtcWeight.NullText = "";
            this.dtcWeight.Width = 75;
            // 
            // dtcDie
            // 
            this.dtcDie.AllowNull = false;
            this.dtcDie.HeaderText = "死亡";
            this.dtcDie.MappingName = "死亡";
            this.dtcDie.NullText = "";
            this.dtcDie.NullValue = "False";
            this.dtcDie.Width = 60;
            // 
            // dtcChangeDepartment
            // 
            this.dtcChangeDepartment.AllowNull = false;
            this.dtcChangeDepartment.HeaderText = "转科";
            this.dtcChangeDepartment.MappingName = "转科";
            this.dtcChangeDepartment.NullText = "";
            this.dtcChangeDepartment.NullValue = "False";
            this.dtcChangeDepartment.Width = 60;
            // 
            // dtcOutHospital
            // 
            this.dtcOutHospital.AllowNull = false;
            this.dtcOutHospital.HeaderText = "出院";
            this.dtcOutHospital.MappingName = "出院";
            this.dtcOutHospital.NullText = "";
            this.dtcOutHospital.NullValue = "False";
            this.dtcOutHospital.Width = 60;
            // 
            // dtcNatural
            // 
            this.dtcNatural.AllowNull = false;
            this.dtcNatural.HeaderText = "自然";
            this.dtcNatural.MappingName = "自然";
            this.dtcNatural.NullText = "";
            this.dtcNatural.NullValue = "False";
            this.dtcNatural.Width = 60;
            // 
            // dtcSuffocate1
            // 
            this.dtcSuffocate1.AllowNull = false;
            this.dtcSuffocate1.HeaderText = "I度窒息";
            this.dtcSuffocate1.MappingName = "I度窒息";
            this.dtcSuffocate1.NullText = "";
            this.dtcSuffocate1.NullValue = "False";
            this.dtcSuffocate1.Width = 60;
            // 
            // dtcSuffocate2
            // 
            this.dtcSuffocate2.AllowNull = false;
            this.dtcSuffocate2.HeaderText = "II度窒息";
            this.dtcSuffocate2.MappingName = "II度窒息";
            this.dtcSuffocate2.NullText = "";
            this.dtcSuffocate2.NullValue = "False";
            this.dtcSuffocate2.Width = 60;
            // 
            // dtcInfectionTimes
            // 
            this.dtcInfectionTimes.Format = "";
            this.dtcInfectionTimes.FormatInfo = null;
            this.dtcInfectionTimes.HeaderText = "医院感染次数";
            this.dtcInfectionTimes.MappingName = "医院感染次数";
            this.dtcInfectionTimes.NullText = "";
            this.dtcInfectionTimes.Width = 75;
            // 
            // dtcInfectionName
            // 
            this.dtcInfectionName.Format = "";
            this.dtcInfectionName.FormatInfo = null;
            this.dtcInfectionName.HeaderText = "主要医院感染名称";
            this.dtcInfectionName.MappingName = "主要医院感染名称";
            this.dtcInfectionName.NullText = "";
            this.dtcInfectionName.Width = 150;
            // 
            // dtcICD10
            // 
            this.dtcICD10.Format = "";
            this.dtcICD10.FormatInfo = null;
            this.dtcICD10.HeaderText = "ICD10";
            this.dtcICD10.MappingName = "ICD10";
            this.dtcICD10.NullText = "";
            this.dtcICD10.Width = 60;
            // 
            // dtcSalveTimes
            // 
            this.dtcSalveTimes.Format = "";
            this.dtcSalveTimes.FormatInfo = null;
            this.dtcSalveTimes.HeaderText = "抢救次数";
            this.dtcSalveTimes.MappingName = "抢救次数";
            this.dtcSalveTimes.NullText = "";
            this.dtcSalveTimes.Width = 75;
            // 
            // dtcSalveSuccessTimes
            // 
            this.dtcSalveSuccessTimes.Format = "";
            this.dtcSalveSuccessTimes.FormatInfo = null;
            this.dtcSalveSuccessTimes.HeaderText = "抢救成功次数";
            this.dtcSalveSuccessTimes.MappingName = "抢救成功次数";
            this.dtcSalveSuccessTimes.NullText = "";
            this.dtcSalveSuccessTimes.Width = 75;
            // 
            // lblRTTitle
            // 
            this.lblRTTitle.AutoSize = true;
            this.lblRTTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblRTTitle.Location = new System.Drawing.Point(14, 13);
            this.lblRTTitle.Name = "lblRTTitle";
            this.lblRTTitle.Size = new System.Drawing.Size(53, 14);
            this.lblRTTitle.TabIndex = 29004;
            this.lblRTTitle.Text = "I 放疗";
            // 
            // gpbRTMode
            // 
            this.gpbRTMode.Controls.Add(this.rdbRTAssistant);
            this.gpbRTMode.Controls.Add(this.rdbRTAppeasement);
            this.gpbRTMode.Controls.Add(this.rdbRTCure);
            this.gpbRTMode.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbRTMode.Location = new System.Drawing.Point(70, 9);
            this.gpbRTMode.Name = "gpbRTMode";
            this.gpbRTMode.Size = new System.Drawing.Size(220, 48);
            this.gpbRTMode.TabIndex = 0;
            this.gpbRTMode.TabStop = false;
            this.gpbRTMode.Text = "方式";
            // 
            // rdbRTAssistant
            // 
            this.rdbRTAssistant.Location = new System.Drawing.Point(140, 20);
            this.rdbRTAssistant.Name = "rdbRTAssistant";
            this.rdbRTAssistant.Size = new System.Drawing.Size(72, 24);
            this.rdbRTAssistant.TabIndex = 2;
            this.rdbRTAssistant.Text = "辅助性";
            this.rdbRTAssistant.CheckedChanged += new System.EventHandler(this.RTMode_CheckedChanged);
            // 
            // rdbRTAppeasement
            // 
            this.rdbRTAppeasement.Location = new System.Drawing.Point(76, 20);
            this.rdbRTAppeasement.Name = "rdbRTAppeasement";
            this.rdbRTAppeasement.Size = new System.Drawing.Size(72, 24);
            this.rdbRTAppeasement.TabIndex = 1;
            this.rdbRTAppeasement.Text = "姑息性";
            this.rdbRTAppeasement.CheckedChanged += new System.EventHandler(this.RTMode_CheckedChanged);
            // 
            // rdbRTCure
            // 
            this.rdbRTCure.Location = new System.Drawing.Point(8, 20);
            this.rdbRTCure.Name = "rdbRTCure";
            this.rdbRTCure.Size = new System.Drawing.Size(76, 24);
            this.rdbRTCure.TabIndex = 0;
            this.rdbRTCure.Text = "根治性";
            this.rdbRTCure.CheckedChanged += new System.EventHandler(this.RTMode_CheckedChanged);
            // 
            // gpbRTEquipment
            // 
            this.gpbRTEquipment.Controls.Add(this.chkRTLacuna);
            this.gpbRTEquipment.Controls.Add(this.chkRTX_Ray);
            this.gpbRTEquipment.Controls.Add(this.chkRTCo);
            this.gpbRTEquipment.Controls.Add(this.chkRTAccelerator);
            this.gpbRTEquipment.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbRTEquipment.Location = new System.Drawing.Point(290, 9);
            this.gpbRTEquipment.Name = "gpbRTEquipment";
            this.gpbRTEquipment.Size = new System.Drawing.Size(272, 48);
            this.gpbRTEquipment.TabIndex = 1;
            this.gpbRTEquipment.TabStop = false;
            this.gpbRTEquipment.Text = "装置";
            // 
            // chkRTLacuna
            // 
            this.chkRTLacuna.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.chkRTLacuna.Location = new System.Drawing.Point(200, 16);
            this.chkRTLacuna.Name = "chkRTLacuna";
            this.chkRTLacuna.Size = new System.Drawing.Size(64, 24);
            this.chkRTLacuna.TabIndex = 3;
            this.chkRTLacuna.Text = "后装";
            // 
            // chkRTX_Ray
            // 
            this.chkRTX_Ray.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.chkRTX_Ray.Location = new System.Drawing.Point(136, 16);
            this.chkRTX_Ray.Name = "chkRTX_Ray";
            this.chkRTX_Ray.Size = new System.Drawing.Size(64, 24);
            this.chkRTX_Ray.TabIndex = 2;
            this.chkRTX_Ray.Text = "X 线";
            // 
            // chkRTCo
            // 
            this.chkRTCo.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.chkRTCo.Location = new System.Drawing.Point(20, 16);
            this.chkRTCo.Name = "chkRTCo";
            this.chkRTCo.Size = new System.Drawing.Size(46, 24);
            this.chkRTCo.TabIndex = 0;
            this.chkRTCo.Text = "钴";
            // 
            // chkRTAccelerator
            // 
            this.chkRTAccelerator.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.chkRTAccelerator.Location = new System.Drawing.Point(72, 16);
            this.chkRTAccelerator.Name = "chkRTAccelerator";
            this.chkRTAccelerator.Size = new System.Drawing.Size(58, 24);
            this.chkRTAccelerator.TabIndex = 1;
            this.chkRTAccelerator.Text = "直加";
            // 
            // gpbRTRule
            // 
            this.gpbRTRule.Controls.Add(this.rdbRTSection);
            this.gpbRTRule.Controls.Add(this.rdbContinue);
            this.gpbRTRule.Controls.Add(this.rdbRTGap);
            this.gpbRTRule.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbRTRule.Location = new System.Drawing.Point(562, 9);
            this.gpbRTRule.Name = "gpbRTRule";
            this.gpbRTRule.Size = new System.Drawing.Size(187, 48);
            this.gpbRTRule.TabIndex = 2;
            this.gpbRTRule.TabStop = false;
            this.gpbRTRule.Text = "程式";
            // 
            // rdbRTSection
            // 
            this.rdbRTSection.Location = new System.Drawing.Point(124, 20);
            this.rdbRTSection.Name = "rdbRTSection";
            this.rdbRTSection.Size = new System.Drawing.Size(56, 24);
            this.rdbRTSection.TabIndex = 2;
            this.rdbRTSection.Text = "分段";
            this.rdbRTSection.CheckedChanged += new System.EventHandler(this.RTRule_CheckedChanged);
            // 
            // rdbContinue
            // 
            this.rdbContinue.Location = new System.Drawing.Point(12, 20);
            this.rdbContinue.Name = "rdbContinue";
            this.rdbContinue.Size = new System.Drawing.Size(56, 24);
            this.rdbContinue.TabIndex = 0;
            this.rdbContinue.Text = "连续";
            this.rdbContinue.CheckedChanged += new System.EventHandler(this.RTRule_CheckedChanged);
            // 
            // rdbRTGap
            // 
            this.rdbRTGap.Location = new System.Drawing.Point(68, 20);
            this.rdbRTGap.Name = "rdbRTGap";
            this.rdbRTGap.Size = new System.Drawing.Size(56, 24);
            this.rdbRTGap.TabIndex = 1;
            this.rdbRTGap.Text = "间断";
            this.rdbRTGap.CheckedChanged += new System.EventHandler(this.RTRule_CheckedChanged);
            // 
            // gpbOriginalDisease
            // 
            this.gpbOriginalDisease.Controls.Add(this.rdbOriginalDiseaseRepeat);
            this.gpbOriginalDisease.Controls.Add(this.rdbOriginalDiseaseFirst);
            this.gpbOriginalDisease.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbOriginalDisease.Location = new System.Drawing.Point(78, 69);
            this.gpbOriginalDisease.Name = "gpbOriginalDisease";
            this.gpbOriginalDisease.Size = new System.Drawing.Size(111, 40);
            this.gpbOriginalDisease.TabIndex = 3;
            this.gpbOriginalDisease.TabStop = false;
            // 
            // rdbOriginalDiseaseRepeat
            // 
            this.rdbOriginalDiseaseRepeat.Location = new System.Drawing.Point(53, 12);
            this.rdbOriginalDiseaseRepeat.Name = "rdbOriginalDiseaseRepeat";
            this.rdbOriginalDiseaseRepeat.Size = new System.Drawing.Size(60, 24);
            this.rdbOriginalDiseaseRepeat.TabIndex = 1;
            this.rdbOriginalDiseaseRepeat.Text = "复次";
            this.rdbOriginalDiseaseRepeat.CheckedChanged += new System.EventHandler(this.OriginalDisease_CheckedChanged);
            // 
            // rdbOriginalDiseaseFirst
            // 
            this.rdbOriginalDiseaseFirst.Location = new System.Drawing.Point(4, 12);
            this.rdbOriginalDiseaseFirst.Name = "rdbOriginalDiseaseFirst";
            this.rdbOriginalDiseaseFirst.Size = new System.Drawing.Size(67, 24);
            this.rdbOriginalDiseaseFirst.TabIndex = 0;
            this.rdbOriginalDiseaseFirst.Text = "首次";
            this.rdbOriginalDiseaseFirst.CheckedChanged += new System.EventHandler(this.OriginalDisease_CheckedChanged);
            // 
            // lblOriginalDiseaseTitle
            // 
            this.lblOriginalDiseaseTitle.AutoSize = true;
            this.lblOriginalDiseaseTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOriginalDiseaseTitle.Location = new System.Drawing.Point(19, 85);
            this.lblOriginalDiseaseTitle.Name = "lblOriginalDiseaseTitle";
            this.lblOriginalDiseaseTitle.Size = new System.Drawing.Size(49, 14);
            this.lblOriginalDiseaseTitle.TabIndex = 29012;
            this.lblOriginalDiseaseTitle.Text = "原发灶";
            // 
            // lblOriginalDiseaseDose
            // 
            this.lblOriginalDiseaseDose.AutoSize = true;
            this.lblOriginalDiseaseDose.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOriginalDiseaseDose.Location = new System.Drawing.Point(190, 85);
            this.lblOriginalDiseaseDose.Name = "lblOriginalDiseaseDose";
            this.lblOriginalDiseaseDose.Size = new System.Drawing.Size(42, 14);
            this.lblOriginalDiseaseDose.TabIndex = 29023;
            this.lblOriginalDiseaseDose.Text = "剂量:";
            // 
            // lblUnit2
            // 
            this.lblUnit2.AutoSize = true;
            this.lblUnit2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit2.Location = new System.Drawing.Point(314, 85);
            this.lblUnit2.Name = "lblUnit2";
            this.lblUnit2.Size = new System.Drawing.Size(28, 14);
            this.lblUnit2.TabIndex = 29025;
            this.lblUnit2.Text = "次/";
            // 
            // lblUnit3
            // 
            this.lblUnit3.AutoSize = true;
            this.lblUnit3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit3.Location = new System.Drawing.Point(366, 85);
            this.lblUnit3.Name = "lblUnit3";
            this.lblUnit3.Size = new System.Drawing.Size(28, 14);
            this.lblUnit3.TabIndex = 29026;
            this.lblUnit3.Text = "天:";
            // 
            // txtOriginalDiseaseGy
            // 
            this.txtOriginalDiseaseGy.BackColor = System.Drawing.Color.White;
            this.txtOriginalDiseaseGy.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtOriginalDiseaseGy.ForeColor = System.Drawing.Color.Black;
            this.txtOriginalDiseaseGy.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtOriginalDiseaseGy.Location = new System.Drawing.Point(226, 84);
            this.txtOriginalDiseaseGy.m_BlnIgnoreUserInfo = false;
            this.txtOriginalDiseaseGy.m_BlnPartControl = false;
            this.txtOriginalDiseaseGy.m_BlnReadOnly = false;
            this.txtOriginalDiseaseGy.m_BlnUnderLineDST = false;
            this.txtOriginalDiseaseGy.m_ClrDST = System.Drawing.Color.Red;
            this.txtOriginalDiseaseGy.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtOriginalDiseaseGy.m_IntCanModifyTime = 6;
            this.txtOriginalDiseaseGy.m_IntPartControlLength = 0;
            this.txtOriginalDiseaseGy.m_IntPartControlStartIndex = 0;
            this.txtOriginalDiseaseGy.m_StrUserID = "";
            this.txtOriginalDiseaseGy.m_StrUserName = "";
            this.txtOriginalDiseaseGy.MaxLength = 50;
            this.txtOriginalDiseaseGy.Multiline = false;
            this.txtOriginalDiseaseGy.Name = "txtOriginalDiseaseGy";
            this.txtOriginalDiseaseGy.Size = new System.Drawing.Size(40, 20);
            this.txtOriginalDiseaseGy.TabIndex = 4;
            this.txtOriginalDiseaseGy.Text = "";
            // 
            // txtOriginalDiseaseTimes
            // 
            this.txtOriginalDiseaseTimes.BackColor = System.Drawing.Color.White;
            this.txtOriginalDiseaseTimes.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtOriginalDiseaseTimes.ForeColor = System.Drawing.Color.Black;
            this.txtOriginalDiseaseTimes.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtOriginalDiseaseTimes.Location = new System.Drawing.Point(290, 84);
            this.txtOriginalDiseaseTimes.m_BlnIgnoreUserInfo = false;
            this.txtOriginalDiseaseTimes.m_BlnPartControl = false;
            this.txtOriginalDiseaseTimes.m_BlnReadOnly = false;
            this.txtOriginalDiseaseTimes.m_BlnUnderLineDST = false;
            this.txtOriginalDiseaseTimes.m_ClrDST = System.Drawing.Color.Red;
            this.txtOriginalDiseaseTimes.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtOriginalDiseaseTimes.m_IntCanModifyTime = 6;
            this.txtOriginalDiseaseTimes.m_IntPartControlLength = 0;
            this.txtOriginalDiseaseTimes.m_IntPartControlStartIndex = 0;
            this.txtOriginalDiseaseTimes.m_StrUserID = "";
            this.txtOriginalDiseaseTimes.m_StrUserName = "";
            this.txtOriginalDiseaseTimes.MaxLength = 50;
            this.txtOriginalDiseaseTimes.Multiline = false;
            this.txtOriginalDiseaseTimes.Name = "txtOriginalDiseaseTimes";
            this.txtOriginalDiseaseTimes.Size = new System.Drawing.Size(24, 20);
            this.txtOriginalDiseaseTimes.TabIndex = 5;
            this.txtOriginalDiseaseTimes.Text = "";
            // 
            // txtOriginalDiseaseDays
            // 
            this.txtOriginalDiseaseDays.BackColor = System.Drawing.Color.White;
            this.txtOriginalDiseaseDays.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtOriginalDiseaseDays.ForeColor = System.Drawing.Color.Black;
            this.txtOriginalDiseaseDays.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtOriginalDiseaseDays.Location = new System.Drawing.Point(338, 84);
            this.txtOriginalDiseaseDays.m_BlnIgnoreUserInfo = false;
            this.txtOriginalDiseaseDays.m_BlnPartControl = false;
            this.txtOriginalDiseaseDays.m_BlnReadOnly = false;
            this.txtOriginalDiseaseDays.m_BlnUnderLineDST = false;
            this.txtOriginalDiseaseDays.m_ClrDST = System.Drawing.Color.Red;
            this.txtOriginalDiseaseDays.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtOriginalDiseaseDays.m_IntCanModifyTime = 6;
            this.txtOriginalDiseaseDays.m_IntPartControlLength = 0;
            this.txtOriginalDiseaseDays.m_IntPartControlStartIndex = 0;
            this.txtOriginalDiseaseDays.m_StrUserID = "";
            this.txtOriginalDiseaseDays.m_StrUserName = "";
            this.txtOriginalDiseaseDays.MaxLength = 50;
            this.txtOriginalDiseaseDays.Multiline = false;
            this.txtOriginalDiseaseDays.Name = "txtOriginalDiseaseDays";
            this.txtOriginalDiseaseDays.Size = new System.Drawing.Size(28, 20);
            this.txtOriginalDiseaseDays.TabIndex = 6;
            this.txtOriginalDiseaseDays.Text = "";
            // 
            // lblOriginalDiseaseBeginDateTitle
            // 
            this.lblOriginalDiseaseBeginDateTitle.AutoSize = true;
            this.lblOriginalDiseaseBeginDateTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOriginalDiseaseBeginDateTitle.Location = new System.Drawing.Point(390, 85);
            this.lblOriginalDiseaseBeginDateTitle.Name = "lblOriginalDiseaseBeginDateTitle";
            this.lblOriginalDiseaseBeginDateTitle.Size = new System.Drawing.Size(70, 14);
            this.lblOriginalDiseaseBeginDateTitle.TabIndex = 29033;
            this.lblOriginalDiseaseBeginDateTitle.Text = "起止日期:";
            // 
            // lblOriginalDiseaseTo
            // 
            this.lblOriginalDiseaseTo.AutoSize = true;
            this.lblOriginalDiseaseTo.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOriginalDiseaseTo.Location = new System.Drawing.Point(590, 85);
            this.lblOriginalDiseaseTo.Name = "lblOriginalDiseaseTo";
            this.lblOriginalDiseaseTo.Size = new System.Drawing.Size(21, 14);
            this.lblOriginalDiseaseTo.TabIndex = 29036;
            this.lblOriginalDiseaseTo.Text = "至";
            // 
            // lblLymphToTitle
            // 
            this.lblLymphToTitle.AutoSize = true;
            this.lblLymphToTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblLymphToTitle.Location = new System.Drawing.Point(590, 120);
            this.lblLymphToTitle.Name = "lblLymphToTitle";
            this.lblLymphToTitle.Size = new System.Drawing.Size(21, 14);
            this.lblLymphToTitle.TabIndex = 29049;
            this.lblLymphToTitle.Text = "至";
            // 
            // lblLymphBeginDateTitle
            // 
            this.lblLymphBeginDateTitle.AutoSize = true;
            this.lblLymphBeginDateTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblLymphBeginDateTitle.Location = new System.Drawing.Point(390, 120);
            this.lblLymphBeginDateTitle.Name = "lblLymphBeginDateTitle";
            this.lblLymphBeginDateTitle.Size = new System.Drawing.Size(70, 14);
            this.lblLymphBeginDateTitle.TabIndex = 29046;
            this.lblLymphBeginDateTitle.Text = "起止日期:";
            // 
            // txtLymphDays
            // 
            this.txtLymphDays.BackColor = System.Drawing.Color.White;
            this.txtLymphDays.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtLymphDays.ForeColor = System.Drawing.Color.Black;
            this.txtLymphDays.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtLymphDays.Location = new System.Drawing.Point(338, 119);
            this.txtLymphDays.m_BlnIgnoreUserInfo = false;
            this.txtLymphDays.m_BlnPartControl = false;
            this.txtLymphDays.m_BlnReadOnly = false;
            this.txtLymphDays.m_BlnUnderLineDST = false;
            this.txtLymphDays.m_ClrDST = System.Drawing.Color.Red;
            this.txtLymphDays.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtLymphDays.m_IntCanModifyTime = 6;
            this.txtLymphDays.m_IntPartControlLength = 0;
            this.txtLymphDays.m_IntPartControlStartIndex = 0;
            this.txtLymphDays.m_StrUserID = "";
            this.txtLymphDays.m_StrUserName = "";
            this.txtLymphDays.MaxLength = 50;
            this.txtLymphDays.Multiline = false;
            this.txtLymphDays.Name = "txtLymphDays";
            this.txtLymphDays.Size = new System.Drawing.Size(28, 20);
            this.txtLymphDays.TabIndex = 12;
            this.txtLymphDays.Text = "";
            // 
            // txtLymphTimes
            // 
            this.txtLymphTimes.BackColor = System.Drawing.Color.White;
            this.txtLymphTimes.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtLymphTimes.ForeColor = System.Drawing.Color.Black;
            this.txtLymphTimes.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtLymphTimes.Location = new System.Drawing.Point(290, 119);
            this.txtLymphTimes.m_BlnIgnoreUserInfo = false;
            this.txtLymphTimes.m_BlnPartControl = false;
            this.txtLymphTimes.m_BlnReadOnly = false;
            this.txtLymphTimes.m_BlnUnderLineDST = false;
            this.txtLymphTimes.m_ClrDST = System.Drawing.Color.Red;
            this.txtLymphTimes.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtLymphTimes.m_IntCanModifyTime = 6;
            this.txtLymphTimes.m_IntPartControlLength = 0;
            this.txtLymphTimes.m_IntPartControlStartIndex = 0;
            this.txtLymphTimes.m_StrUserID = "";
            this.txtLymphTimes.m_StrUserName = "";
            this.txtLymphTimes.MaxLength = 50;
            this.txtLymphTimes.Multiline = false;
            this.txtLymphTimes.Name = "txtLymphTimes";
            this.txtLymphTimes.Size = new System.Drawing.Size(24, 20);
            this.txtLymphTimes.TabIndex = 11;
            this.txtLymphTimes.Text = "";
            // 
            // txtLymphGy
            // 
            this.txtLymphGy.BackColor = System.Drawing.Color.White;
            this.txtLymphGy.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.txtLymphGy.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtLymphGy.ForeColor = System.Drawing.Color.Black;
            this.txtLymphGy.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtLymphGy.Location = new System.Drawing.Point(226, 119);
            this.txtLymphGy.m_BlnIgnoreUserInfo = false;
            this.txtLymphGy.m_BlnPartControl = false;
            this.txtLymphGy.m_BlnReadOnly = false;
            this.txtLymphGy.m_BlnUnderLineDST = false;
            this.txtLymphGy.m_ClrDST = System.Drawing.Color.Red;
            this.txtLymphGy.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtLymphGy.m_IntCanModifyTime = 6;
            this.txtLymphGy.m_IntPartControlLength = 0;
            this.txtLymphGy.m_IntPartControlStartIndex = 0;
            this.txtLymphGy.m_StrUserID = "";
            this.txtLymphGy.m_StrUserName = "";
            this.txtLymphGy.MaxLength = 50;
            this.txtLymphGy.Multiline = false;
            this.txtLymphGy.Name = "txtLymphGy";
            this.txtLymphGy.Size = new System.Drawing.Size(40, 20);
            this.txtLymphGy.TabIndex = 10;
            this.txtLymphGy.Text = "";
            // 
            // lblLymphUnit1
            // 
            this.lblLymphUnit1.AutoSize = true;
            this.lblLymphUnit1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblLymphUnit1.Location = new System.Drawing.Point(266, 120);
            this.lblLymphUnit1.Name = "lblLymphUnit1";
            this.lblLymphUnit1.Size = new System.Drawing.Size(28, 14);
            this.lblLymphUnit1.TabIndex = 29040;
            this.lblLymphUnit1.Text = "GY/";
            // 
            // lblLymphUnit2
            // 
            this.lblLymphUnit2.AutoSize = true;
            this.lblLymphUnit2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblLymphUnit2.Location = new System.Drawing.Point(314, 120);
            this.lblLymphUnit2.Name = "lblLymphUnit2";
            this.lblLymphUnit2.Size = new System.Drawing.Size(28, 14);
            this.lblLymphUnit2.TabIndex = 29041;
            this.lblLymphUnit2.Text = "次/";
            // 
            // lblLympUnit3
            // 
            this.lblLympUnit3.AutoSize = true;
            this.lblLympUnit3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblLympUnit3.Location = new System.Drawing.Point(366, 120);
            this.lblLympUnit3.Name = "lblLympUnit3";
            this.lblLympUnit3.Size = new System.Drawing.Size(28, 14);
            this.lblLympUnit3.TabIndex = 29042;
            this.lblLympUnit3.Text = "天:";
            // 
            // lblLymphDose
            // 
            this.lblLymphDose.AutoSize = true;
            this.lblLymphDose.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblLymphDose.Location = new System.Drawing.Point(190, 120);
            this.lblLymphDose.Name = "lblLymphDose";
            this.lblLymphDose.Size = new System.Drawing.Size(42, 14);
            this.lblLymphDose.TabIndex = 29039;
            this.lblLymphDose.Text = "剂量:";
            // 
            // lblLymphTitle
            // 
            this.lblLymphTitle.AutoSize = true;
            this.lblLymphTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblLymphTitle.Location = new System.Drawing.Point(1, 120);
            this.lblLymphTitle.Name = "lblLymphTitle";
            this.lblLymphTitle.Size = new System.Drawing.Size(77, 14);
            this.lblLymphTitle.TabIndex = 29038;
            this.lblLymphTitle.Text = "区域淋巴结";
            // 
            // gpbLymph
            // 
            this.gpbLymph.Controls.Add(this.rdbLymphRepeat);
            this.gpbLymph.Controls.Add(this.rdbLymphFirst);
            this.gpbLymph.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbLymph.Location = new System.Drawing.Point(78, 105);
            this.gpbLymph.Name = "gpbLymph";
            this.gpbLymph.Size = new System.Drawing.Size(111, 40);
            this.gpbLymph.TabIndex = 9;
            this.gpbLymph.TabStop = false;
            // 
            // rdbLymphRepeat
            // 
            this.rdbLymphRepeat.Location = new System.Drawing.Point(52, 12);
            this.rdbLymphRepeat.Name = "rdbLymphRepeat";
            this.rdbLymphRepeat.Size = new System.Drawing.Size(59, 24);
            this.rdbLymphRepeat.TabIndex = 1;
            this.rdbLymphRepeat.Text = "复次";
            this.rdbLymphRepeat.CheckedChanged += new System.EventHandler(this.Lymph_CheckedChanged);
            // 
            // rdbLymphFirst
            // 
            this.rdbLymphFirst.Location = new System.Drawing.Point(3, 12);
            this.rdbLymphFirst.Name = "rdbLymphFirst";
            this.rdbLymphFirst.Size = new System.Drawing.Size(56, 24);
            this.rdbLymphFirst.TabIndex = 0;
            this.rdbLymphFirst.Text = "首次";
            this.rdbLymphFirst.CheckedChanged += new System.EventHandler(this.Lymph_CheckedChanged);
            // 
            // lblMetastasisTo
            // 
            this.lblMetastasisTo.AutoSize = true;
            this.lblMetastasisTo.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblMetastasisTo.Location = new System.Drawing.Point(590, 155);
            this.lblMetastasisTo.Name = "lblMetastasisTo";
            this.lblMetastasisTo.Size = new System.Drawing.Size(21, 14);
            this.lblMetastasisTo.TabIndex = 29062;
            this.lblMetastasisTo.Text = "至";
            // 
            // lblMetastasisBeginDateTitle
            // 
            this.lblMetastasisBeginDateTitle.AutoSize = true;
            this.lblMetastasisBeginDateTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblMetastasisBeginDateTitle.Location = new System.Drawing.Point(390, 155);
            this.lblMetastasisBeginDateTitle.Name = "lblMetastasisBeginDateTitle";
            this.lblMetastasisBeginDateTitle.Size = new System.Drawing.Size(70, 14);
            this.lblMetastasisBeginDateTitle.TabIndex = 29059;
            this.lblMetastasisBeginDateTitle.Text = "起止日期:";
            // 
            // txtMetastasisDays
            // 
            this.txtMetastasisDays.BackColor = System.Drawing.Color.White;
            this.txtMetastasisDays.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtMetastasisDays.ForeColor = System.Drawing.Color.Black;
            this.txtMetastasisDays.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtMetastasisDays.Location = new System.Drawing.Point(338, 154);
            this.txtMetastasisDays.m_BlnIgnoreUserInfo = false;
            this.txtMetastasisDays.m_BlnPartControl = false;
            this.txtMetastasisDays.m_BlnReadOnly = false;
            this.txtMetastasisDays.m_BlnUnderLineDST = false;
            this.txtMetastasisDays.m_ClrDST = System.Drawing.Color.Red;
            this.txtMetastasisDays.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtMetastasisDays.m_IntCanModifyTime = 6;
            this.txtMetastasisDays.m_IntPartControlLength = 0;
            this.txtMetastasisDays.m_IntPartControlStartIndex = 0;
            this.txtMetastasisDays.m_StrUserID = "";
            this.txtMetastasisDays.m_StrUserName = "";
            this.txtMetastasisDays.MaxLength = 50;
            this.txtMetastasisDays.Multiline = false;
            this.txtMetastasisDays.Name = "txtMetastasisDays";
            this.txtMetastasisDays.Size = new System.Drawing.Size(28, 20);
            this.txtMetastasisDays.TabIndex = 17;
            this.txtMetastasisDays.Text = "";
            // 
            // txtMetastasisTimes
            // 
            this.txtMetastasisTimes.BackColor = System.Drawing.Color.White;
            this.txtMetastasisTimes.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtMetastasisTimes.ForeColor = System.Drawing.Color.Black;
            this.txtMetastasisTimes.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtMetastasisTimes.Location = new System.Drawing.Point(290, 154);
            this.txtMetastasisTimes.m_BlnIgnoreUserInfo = false;
            this.txtMetastasisTimes.m_BlnPartControl = false;
            this.txtMetastasisTimes.m_BlnReadOnly = false;
            this.txtMetastasisTimes.m_BlnUnderLineDST = false;
            this.txtMetastasisTimes.m_ClrDST = System.Drawing.Color.Red;
            this.txtMetastasisTimes.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtMetastasisTimes.m_IntCanModifyTime = 6;
            this.txtMetastasisTimes.m_IntPartControlLength = 0;
            this.txtMetastasisTimes.m_IntPartControlStartIndex = 0;
            this.txtMetastasisTimes.m_StrUserID = "";
            this.txtMetastasisTimes.m_StrUserName = "";
            this.txtMetastasisTimes.MaxLength = 50;
            this.txtMetastasisTimes.Multiline = false;
            this.txtMetastasisTimes.Name = "txtMetastasisTimes";
            this.txtMetastasisTimes.Size = new System.Drawing.Size(24, 20);
            this.txtMetastasisTimes.TabIndex = 16;
            this.txtMetastasisTimes.Text = "";
            // 
            // txtMetastasisGy
            // 
            this.txtMetastasisGy.BackColor = System.Drawing.Color.White;
            this.txtMetastasisGy.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtMetastasisGy.ForeColor = System.Drawing.Color.Black;
            this.txtMetastasisGy.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtMetastasisGy.Location = new System.Drawing.Point(226, 154);
            this.txtMetastasisGy.m_BlnIgnoreUserInfo = false;
            this.txtMetastasisGy.m_BlnPartControl = false;
            this.txtMetastasisGy.m_BlnReadOnly = false;
            this.txtMetastasisGy.m_BlnUnderLineDST = false;
            this.txtMetastasisGy.m_ClrDST = System.Drawing.Color.Red;
            this.txtMetastasisGy.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtMetastasisGy.m_IntCanModifyTime = 6;
            this.txtMetastasisGy.m_IntPartControlLength = 0;
            this.txtMetastasisGy.m_IntPartControlStartIndex = 0;
            this.txtMetastasisGy.m_StrUserID = "";
            this.txtMetastasisGy.m_StrUserName = "";
            this.txtMetastasisGy.MaxLength = 50;
            this.txtMetastasisGy.Multiline = false;
            this.txtMetastasisGy.Name = "txtMetastasisGy";
            this.txtMetastasisGy.Size = new System.Drawing.Size(40, 20);
            this.txtMetastasisGy.TabIndex = 15;
            this.txtMetastasisGy.Text = "";
            // 
            // lblMetastasisUnit1
            // 
            this.lblMetastasisUnit1.AutoSize = true;
            this.lblMetastasisUnit1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblMetastasisUnit1.Location = new System.Drawing.Point(266, 155);
            this.lblMetastasisUnit1.Name = "lblMetastasisUnit1";
            this.lblMetastasisUnit1.Size = new System.Drawing.Size(28, 14);
            this.lblMetastasisUnit1.TabIndex = 29053;
            this.lblMetastasisUnit1.Text = "GY/";
            // 
            // lblMetastasisUnit2
            // 
            this.lblMetastasisUnit2.AutoSize = true;
            this.lblMetastasisUnit2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblMetastasisUnit2.Location = new System.Drawing.Point(314, 155);
            this.lblMetastasisUnit2.Name = "lblMetastasisUnit2";
            this.lblMetastasisUnit2.Size = new System.Drawing.Size(28, 14);
            this.lblMetastasisUnit2.TabIndex = 29054;
            this.lblMetastasisUnit2.Text = "次/";
            // 
            // lblMetastasisUnit3
            // 
            this.lblMetastasisUnit3.AutoSize = true;
            this.lblMetastasisUnit3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblMetastasisUnit3.Location = new System.Drawing.Point(366, 155);
            this.lblMetastasisUnit3.Name = "lblMetastasisUnit3";
            this.lblMetastasisUnit3.Size = new System.Drawing.Size(28, 14);
            this.lblMetastasisUnit3.TabIndex = 29055;
            this.lblMetastasisUnit3.Text = "天:";
            // 
            // lblMetastasisDose
            // 
            this.lblMetastasisDose.AutoSize = true;
            this.lblMetastasisDose.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblMetastasisDose.Location = new System.Drawing.Point(190, 155);
            this.lblMetastasisDose.Name = "lblMetastasisDose";
            this.lblMetastasisDose.Size = new System.Drawing.Size(42, 14);
            this.lblMetastasisDose.TabIndex = 29052;
            this.lblMetastasisDose.Text = "剂量:";
            // 
            // lblMetastasisTitle
            // 
            this.lblMetastasisTitle.AutoSize = true;
            this.lblMetastasisTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblMetastasisTitle.Location = new System.Drawing.Point(130, 155);
            this.lblMetastasisTitle.Name = "lblMetastasisTitle";
            this.lblMetastasisTitle.Size = new System.Drawing.Size(49, 14);
            this.lblMetastasisTitle.TabIndex = 29051;
            this.lblMetastasisTitle.Text = "转移灶";
            // 
            // lblChemotherapyTitle
            // 
            this.lblChemotherapyTitle.AutoSize = true;
            this.lblChemotherapyTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblChemotherapyTitle.Location = new System.Drawing.Point(7, 188);
            this.lblChemotherapyTitle.Name = "lblChemotherapyTitle";
            this.lblChemotherapyTitle.Size = new System.Drawing.Size(61, 14);
            this.lblChemotherapyTitle.TabIndex = 29063;
            this.lblChemotherapyTitle.Text = "II 化疗";
            // 
            // gpbChemotherapyMode
            // 
            this.gpbChemotherapyMode.Controls.Add(this.rdbChemotherapyNewMedicine);
            this.gpbChemotherapyMode.Controls.Add(this.rdbChemotherapyAssistant);
            this.gpbChemotherapyMode.Controls.Add(this.rdbChemotherapyAssisantNew);
            this.gpbChemotherapyMode.Controls.Add(this.rdbChemotherapyAppeasement);
            this.gpbChemotherapyMode.Controls.Add(this.rdbChemotherapyCure);
            this.gpbChemotherapyMode.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbChemotherapyMode.Location = new System.Drawing.Point(70, 184);
            this.gpbChemotherapyMode.Name = "gpbChemotherapyMode";
            this.gpbChemotherapyMode.Size = new System.Drawing.Size(372, 48);
            this.gpbChemotherapyMode.TabIndex = 20;
            this.gpbChemotherapyMode.TabStop = false;
            this.gpbChemotherapyMode.Text = "方式";
            // 
            // rdbChemotherapyNewMedicine
            // 
            this.rdbChemotherapyNewMedicine.BackColor = System.Drawing.Color.Transparent;
            this.rdbChemotherapyNewMedicine.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.rdbChemotherapyNewMedicine.ForeColor = System.Drawing.Color.Black;
            this.rdbChemotherapyNewMedicine.Location = new System.Drawing.Point(316, 20);
            this.rdbChemotherapyNewMedicine.Name = "rdbChemotherapyNewMedicine";
            this.rdbChemotherapyNewMedicine.Size = new System.Drawing.Size(52, 24);
            this.rdbChemotherapyNewMedicine.TabIndex = 4;
            this.rdbChemotherapyNewMedicine.Text = "新药";
            this.rdbChemotherapyNewMedicine.UseVisualStyleBackColor = false;
            this.rdbChemotherapyNewMedicine.CheckedChanged += new System.EventHandler(this.ChemotherapyMode_CheckedChanged);
            // 
            // rdbChemotherapyAssistant
            // 
            this.rdbChemotherapyAssistant.BackColor = System.Drawing.Color.Transparent;
            this.rdbChemotherapyAssistant.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.rdbChemotherapyAssistant.ForeColor = System.Drawing.Color.Black;
            this.rdbChemotherapyAssistant.Location = new System.Drawing.Point(244, 20);
            this.rdbChemotherapyAssistant.Name = "rdbChemotherapyAssistant";
            this.rdbChemotherapyAssistant.Size = new System.Drawing.Size(72, 24);
            this.rdbChemotherapyAssistant.TabIndex = 3;
            this.rdbChemotherapyAssistant.Text = "辅助性";
            this.rdbChemotherapyAssistant.UseVisualStyleBackColor = false;
            this.rdbChemotherapyAssistant.CheckedChanged += new System.EventHandler(this.ChemotherapyMode_CheckedChanged);
            // 
            // rdbChemotherapyAssisantNew
            // 
            this.rdbChemotherapyAssisantNew.BackColor = System.Drawing.Color.Transparent;
            this.rdbChemotherapyAssisantNew.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.rdbChemotherapyAssisantNew.ForeColor = System.Drawing.Color.Black;
            this.rdbChemotherapyAssisantNew.Location = new System.Drawing.Point(152, 20);
            this.rdbChemotherapyAssisantNew.Name = "rdbChemotherapyAssisantNew";
            this.rdbChemotherapyAssisantNew.Size = new System.Drawing.Size(92, 24);
            this.rdbChemotherapyAssisantNew.TabIndex = 2;
            this.rdbChemotherapyAssisantNew.Text = "新辅助性";
            this.rdbChemotherapyAssisantNew.UseVisualStyleBackColor = false;
            this.rdbChemotherapyAssisantNew.CheckedChanged += new System.EventHandler(this.ChemotherapyMode_CheckedChanged);
            // 
            // rdbChemotherapyAppeasement
            // 
            this.rdbChemotherapyAppeasement.BackColor = System.Drawing.Color.Transparent;
            this.rdbChemotherapyAppeasement.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.rdbChemotherapyAppeasement.ForeColor = System.Drawing.Color.Black;
            this.rdbChemotherapyAppeasement.Location = new System.Drawing.Point(80, 20);
            this.rdbChemotherapyAppeasement.Name = "rdbChemotherapyAppeasement";
            this.rdbChemotherapyAppeasement.Size = new System.Drawing.Size(72, 24);
            this.rdbChemotherapyAppeasement.TabIndex = 1;
            this.rdbChemotherapyAppeasement.Text = "姑息性";
            this.rdbChemotherapyAppeasement.UseVisualStyleBackColor = false;
            this.rdbChemotherapyAppeasement.CheckedChanged += new System.EventHandler(this.ChemotherapyMode_CheckedChanged);
            // 
            // rdbChemotherapyCure
            // 
            this.rdbChemotherapyCure.Location = new System.Drawing.Point(4, 20);
            this.rdbChemotherapyCure.Name = "rdbChemotherapyCure";
            this.rdbChemotherapyCure.Size = new System.Drawing.Size(76, 24);
            this.rdbChemotherapyCure.TabIndex = 0;
            this.rdbChemotherapyCure.Text = "根治性";
            this.rdbChemotherapyCure.CheckedChanged += new System.EventHandler(this.ChemotherapyMode_CheckedChanged);
            // 
            // gpbChemotherapyRule
            // 
            this.gpbChemotherapyRule.Controls.Add(this.chkChemotherapyOther);
            this.gpbChemotherapyRule.Controls.Add(this.chkChemotherapyOtherTry);
            this.gpbChemotherapyRule.Controls.Add(this.chkChemotherapySpinal);
            this.gpbChemotherapyRule.Controls.Add(this.chkChemotherapyAbdomen);
            this.gpbChemotherapyRule.Controls.Add(this.chkChemotherapyThorax);
            this.gpbChemotherapyRule.Controls.Add(this.chkChemotherapyIntubate);
            this.gpbChemotherapyRule.Controls.Add(this.chkChemotherapyLocal);
            this.gpbChemotherapyRule.Controls.Add(this.chkChemotherapyWholeBody);
            this.gpbChemotherapyRule.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbChemotherapyRule.Location = new System.Drawing.Point(70, 240);
            this.gpbChemotherapyRule.Name = "gpbChemotherapyRule";
            this.gpbChemotherapyRule.Size = new System.Drawing.Size(552, 48);
            this.gpbChemotherapyRule.TabIndex = 21;
            this.gpbChemotherapyRule.TabStop = false;
            this.gpbChemotherapyRule.Text = "化疗方法";
            // 
            // chkChemotherapyOther
            // 
            this.chkChemotherapyOther.Location = new System.Drawing.Point(488, 16);
            this.chkChemotherapyOther.Name = "chkChemotherapyOther";
            this.chkChemotherapyOther.Size = new System.Drawing.Size(56, 24);
            this.chkChemotherapyOther.TabIndex = 7;
            this.chkChemotherapyOther.Text = "其他";
            // 
            // chkChemotherapyOtherTry
            // 
            this.chkChemotherapyOtherTry.Location = new System.Drawing.Point(400, 16);
            this.chkChemotherapyOtherTry.Name = "chkChemotherapyOtherTry";
            this.chkChemotherapyOtherTry.Size = new System.Drawing.Size(88, 24);
            this.chkChemotherapyOtherTry.TabIndex = 6;
            this.chkChemotherapyOtherTry.Text = "其他试用";
            // 
            // chkChemotherapySpinal
            // 
            this.chkChemotherapySpinal.Location = new System.Drawing.Point(328, 16);
            this.chkChemotherapySpinal.Name = "chkChemotherapySpinal";
            this.chkChemotherapySpinal.Size = new System.Drawing.Size(72, 24);
            this.chkChemotherapySpinal.TabIndex = 5;
            this.chkChemotherapySpinal.Text = "髓注";
            // 
            // chkChemotherapyAbdomen
            // 
            this.chkChemotherapyAbdomen.Location = new System.Drawing.Point(256, 16);
            this.chkChemotherapyAbdomen.Name = "chkChemotherapyAbdomen";
            this.chkChemotherapyAbdomen.Size = new System.Drawing.Size(72, 24);
            this.chkChemotherapyAbdomen.TabIndex = 4;
            this.chkChemotherapyAbdomen.Text = "腹腔注";
            // 
            // chkChemotherapyThorax
            // 
            this.chkChemotherapyThorax.Location = new System.Drawing.Point(184, 16);
            this.chkChemotherapyThorax.Name = "chkChemotherapyThorax";
            this.chkChemotherapyThorax.Size = new System.Drawing.Size(72, 24);
            this.chkChemotherapyThorax.TabIndex = 3;
            this.chkChemotherapyThorax.Text = "胸腔注";
            // 
            // chkChemotherapyIntubate
            // 
            this.chkChemotherapyIntubate.Location = new System.Drawing.Point(120, 16);
            this.chkChemotherapyIntubate.Name = "chkChemotherapyIntubate";
            this.chkChemotherapyIntubate.Size = new System.Drawing.Size(64, 24);
            this.chkChemotherapyIntubate.TabIndex = 2;
            this.chkChemotherapyIntubate.Text = "A插管";
            // 
            // chkChemotherapyLocal
            // 
            this.chkChemotherapyLocal.Location = new System.Drawing.Point(60, 16);
            this.chkChemotherapyLocal.Name = "chkChemotherapyLocal";
            this.chkChemotherapyLocal.Size = new System.Drawing.Size(60, 24);
            this.chkChemotherapyLocal.TabIndex = 1;
            this.chkChemotherapyLocal.Text = "半化";
            // 
            // chkChemotherapyWholeBody
            // 
            this.chkChemotherapyWholeBody.Location = new System.Drawing.Point(4, 16);
            this.chkChemotherapyWholeBody.Name = "chkChemotherapyWholeBody";
            this.chkChemotherapyWholeBody.Size = new System.Drawing.Size(56, 24);
            this.chkChemotherapyWholeBody.TabIndex = 0;
            this.chkChemotherapyWholeBody.Text = "全化";
            // 
            // dtgChemotherapy
            // 
            this.dtgChemotherapy.AllowSorting = false;
            this.dtgChemotherapy.BackgroundColor = System.Drawing.Color.White;
            this.dtgChemotherapy.CaptionBackColor = System.Drawing.SystemColors.AppWorkspace;
            this.dtgChemotherapy.CaptionFont = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dtgChemotherapy.CaptionForeColor = System.Drawing.Color.Black;
            this.dtgChemotherapy.CaptionText = "化疗用药及疗效";
            this.dtgChemotherapy.DataMember = "";
            this.dtgChemotherapy.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dtgChemotherapy.ForeColor = System.Drawing.Color.Black;
            this.dtgChemotherapy.HeaderForeColor = System.Drawing.Color.White;
            this.dtgChemotherapy.Location = new System.Drawing.Point(6, 296);
            this.dtgChemotherapy.Name = "dtgChemotherapy";
            this.dtgChemotherapy.ParentRowsForeColor = System.Drawing.Color.White;
            this.dtgChemotherapy.RowHeaderWidth = 40;
            this.dtgChemotherapy.Size = new System.Drawing.Size(740, 190);
            this.dtgChemotherapy.TabIndex = 22;
            this.dtgChemotherapy.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dtcChemotherapy});
            this.dtgChemotherapy.CurrentCellChanged += new System.EventHandler(this.dtgChemotherapy_CurrentCellChanged);
            this.dtgChemotherapy.Leave += new System.EventHandler(this.dtgChemotherapy_Leave);
            // 
            // dtcChemotherapy
            // 
            this.dtcChemotherapy.AllowSorting = false;
            this.dtcChemotherapy.DataGrid = this.dtgChemotherapy;
            this.dtcChemotherapy.GridColumnStyles.AddRange(new System.Windows.Forms.DataGridColumnStyle[] {
            this.dtcDate,
            this.dtcMedicineName,
            this.dtcPeriod,
            this.dtcCR,
            this.dtcPR,
            this.dtcMR,
            this.dtcS,
            this.dtcP,
            this.dtcNA});
            this.dtcChemotherapy.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dtcChemotherapy.MappingName = "Chemotherapy";
            // 
            // dtcDate
            // 
            this.dtcDate.Format = "yyyy-MM-dd";
            this.dtcDate.FormatInfo = null;
            this.dtcDate.HeaderText = "      日     期";
            this.dtcDate.MappingName = "日期";
            this.dtcDate.NullText = "";
            this.dtcDate.Width = 200;
            // 
            // dtcMedicineName
            // 
            this.dtcMedicineName.Format = "";
            this.dtcMedicineName.FormatInfo = null;
            this.dtcMedicineName.HeaderText = "药品名称（剂量）";
            this.dtcMedicineName.MappingName = "药品名称（剂量）";
            this.dtcMedicineName.NullText = "";
            this.dtcMedicineName.Width = 150;
            // 
            // dtcPeriod
            // 
            this.dtcPeriod.Format = "";
            this.dtcPeriod.FormatInfo = null;
            this.dtcPeriod.HeaderText = "疗程";
            this.dtcPeriod.MappingName = "疗程";
            this.dtcPeriod.NullText = "";
            this.dtcPeriod.Width = 75;
            // 
            // dtcCR
            // 
            this.dtcCR.AllowNull = false;
            this.dtcCR.HeaderText = "疗效消失(CR)";
            this.dtcCR.MappingName = "疗效消失(CR)";
            this.dtcCR.NullText = "False";
            this.dtcCR.NullValue = false;
            this.dtcCR.Width = 75;
            // 
            // dtcPR
            // 
            this.dtcPR.AllowNull = false;
            this.dtcPR.HeaderText = "显效(PR)";
            this.dtcPR.MappingName = "显效(PR)";
            this.dtcPR.NullText = "False";
            this.dtcPR.NullValue = false;
            this.dtcPR.Width = 75;
            // 
            // dtcMR
            // 
            this.dtcMR.AllowNull = false;
            this.dtcMR.HeaderText = "好转(MR)";
            this.dtcMR.MappingName = "好转(MR)";
            this.dtcMR.NullText = "False";
            this.dtcMR.NullValue = false;
            this.dtcMR.Width = 75;
            // 
            // dtcS
            // 
            this.dtcS.AllowNull = false;
            this.dtcS.HeaderText = "不变(S)";
            this.dtcS.MappingName = "不变(S)";
            this.dtcS.NullText = "False";
            this.dtcS.NullValue = false;
            this.dtcS.Width = 75;
            // 
            // dtcP
            // 
            this.dtcP.AllowNull = false;
            this.dtcP.HeaderText = "恶化(P)";
            this.dtcP.MappingName = "恶化(P)";
            this.dtcP.NullText = "False";
            this.dtcP.NullValue = false;
            this.dtcP.Width = 75;
            // 
            // dtcNA
            // 
            this.dtcNA.AllowNull = false;
            this.dtcNA.HeaderText = "未定(NA)";
            this.dtcNA.MappingName = "未定(NA)";
            this.dtcNA.NullText = "False";
            this.dtcNA.NullValue = false;
            this.dtcNA.Width = 75;
            // 
            // lblDeliveryChild
            // 
            this.lblDeliveryChild.AutoSize = true;
            this.lblDeliveryChild.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblDeliveryChild.Location = new System.Drawing.Point(646, 47);
            this.lblDeliveryChild.Name = "lblDeliveryChild";
            this.lblDeliveryChild.Size = new System.Drawing.Size(35, 14);
            this.lblDeliveryChild.TabIndex = 29088;
            this.lblDeliveryChild.Text = "接生";
            // 
            // lblOperationAmt
            // 
            this.lblOperationAmt.AutoSize = true;
            this.lblOperationAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOperationAmt.Location = new System.Drawing.Point(530, 47);
            this.lblOperationAmt.Name = "lblOperationAmt";
            this.lblOperationAmt.Size = new System.Drawing.Size(35, 14);
            this.lblOperationAmt.TabIndex = 29086;
            this.lblOperationAmt.Text = "手术";
            // 
            // lblBloodTran
            // 
            this.lblBloodTran.AutoSize = true;
            this.lblBloodTran.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblBloodTran.Location = new System.Drawing.Point(310, 47);
            this.lblBloodTran.Name = "lblBloodTran";
            this.lblBloodTran.Size = new System.Drawing.Size(35, 14);
            this.lblBloodTran.TabIndex = 29082;
            this.lblBloodTran.Text = "输血";
            // 
            // lblO2
            // 
            this.lblO2.AutoSize = true;
            this.lblO2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblO2.Location = new System.Drawing.Point(206, 47);
            this.lblO2.Name = "lblO2";
            this.lblO2.Size = new System.Drawing.Size(35, 14);
            this.lblO2.TabIndex = 29080;
            this.lblO2.Text = "输氧";
            // 
            // lblAssayAmt
            // 
            this.lblAssayAmt.AutoSize = true;
            this.lblAssayAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblAssayAmt.Location = new System.Drawing.Point(102, 47);
            this.lblAssayAmt.Name = "lblAssayAmt";
            this.lblAssayAmt.Size = new System.Drawing.Size(35, 14);
            this.lblAssayAmt.TabIndex = 29078;
            this.lblAssayAmt.Text = "化验";
            // 
            // lblRadiationAmt
            // 
            this.lblRadiationAmt.AutoSize = true;
            this.lblRadiationAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblRadiationAmt.Location = new System.Drawing.Point(2, 47);
            this.lblRadiationAmt.Name = "lblRadiationAmt";
            this.lblRadiationAmt.Size = new System.Drawing.Size(35, 14);
            this.lblRadiationAmt.TabIndex = 29076;
            this.lblRadiationAmt.Text = "放射";
            // 
            // lblCMFinishedAmt
            // 
            this.lblCMFinishedAmt.AutoSize = true;
            this.lblCMFinishedAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblCMFinishedAmt.Location = new System.Drawing.Point(518, 11);
            this.lblCMFinishedAmt.Name = "lblCMFinishedAmt";
            this.lblCMFinishedAmt.Size = new System.Drawing.Size(49, 14);
            this.lblCMFinishedAmt.TabIndex = 29074;
            this.lblCMFinishedAmt.Text = "中成药";
            // 
            // lblWMAmt
            // 
            this.lblWMAmt.AutoSize = true;
            this.lblWMAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblWMAmt.Location = new System.Drawing.Point(410, 11);
            this.lblWMAmt.Name = "lblWMAmt";
            this.lblWMAmt.Size = new System.Drawing.Size(49, 14);
            this.lblWMAmt.TabIndex = 29072;
            this.lblWMAmt.Text = "西药费";
            // 
            // lblBedAmt
            // 
            this.lblBedAmt.AutoSize = true;
            this.lblBedAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblBedAmt.Location = new System.Drawing.Point(206, 11);
            this.lblBedAmt.Name = "lblBedAmt";
            this.lblBedAmt.Size = new System.Drawing.Size(35, 14);
            this.lblBedAmt.TabIndex = 29070;
            this.lblBedAmt.Text = "床费";
            // 
            // lblTotalAmt
            // 
            this.lblTotalAmt.AutoSize = true;
            this.lblTotalAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblTotalAmt.Location = new System.Drawing.Point(6, 11);
            this.lblTotalAmt.Name = "lblTotalAmt";
            this.lblTotalAmt.Size = new System.Drawing.Size(133, 14);
            this.lblTotalAmt.TabIndex = 29068;
            this.lblTotalAmt.Text = "住院费用总计（元）";
            // 
            // txtTotalAmt
            // 
            this.txtTotalAmt.BackColor = System.Drawing.Color.White;
            this.txtTotalAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtTotalAmt.ForeColor = System.Drawing.Color.Black;
            this.txtTotalAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtTotalAmt.Location = new System.Drawing.Point(138, 10);
            this.txtTotalAmt.m_BlnIgnoreUserInfo = false;
            this.txtTotalAmt.m_BlnPartControl = false;
            this.txtTotalAmt.m_BlnReadOnly = false;
            this.txtTotalAmt.m_BlnUnderLineDST = false;
            this.txtTotalAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtTotalAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtTotalAmt.m_IntCanModifyTime = 6;
            this.txtTotalAmt.m_IntPartControlLength = 0;
            this.txtTotalAmt.m_IntPartControlStartIndex = 0;
            this.txtTotalAmt.m_StrUserID = "";
            this.txtTotalAmt.m_StrUserName = "";
            this.txtTotalAmt.MaxLength = 50;
            this.txtTotalAmt.Multiline = false;
            this.txtTotalAmt.Name = "txtTotalAmt";
            this.txtTotalAmt.Size = new System.Drawing.Size(64, 20);
            this.txtTotalAmt.TabIndex = 0;
            this.txtTotalAmt.Text = "";
            // 
            // txtRadiationAmt
            // 
            this.txtRadiationAmt.BackColor = System.Drawing.Color.White;
            this.txtRadiationAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtRadiationAmt.ForeColor = System.Drawing.Color.Black;
            this.txtRadiationAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtRadiationAmt.Location = new System.Drawing.Point(38, 46);
            this.txtRadiationAmt.m_BlnIgnoreUserInfo = false;
            this.txtRadiationAmt.m_BlnPartControl = false;
            this.txtRadiationAmt.m_BlnReadOnly = false;
            this.txtRadiationAmt.m_BlnUnderLineDST = false;
            this.txtRadiationAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtRadiationAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtRadiationAmt.m_IntCanModifyTime = 6;
            this.txtRadiationAmt.m_IntPartControlLength = 0;
            this.txtRadiationAmt.m_IntPartControlStartIndex = 0;
            this.txtRadiationAmt.m_StrUserID = "";
            this.txtRadiationAmt.m_StrUserName = "";
            this.txtRadiationAmt.MaxLength = 50;
            this.txtRadiationAmt.Multiline = false;
            this.txtRadiationAmt.Name = "txtRadiationAmt";
            this.txtRadiationAmt.Size = new System.Drawing.Size(64, 20);
            this.txtRadiationAmt.TabIndex = 6;
            this.txtRadiationAmt.Text = "";
            // 
            // txtBedAmt
            // 
            this.txtBedAmt.BackColor = System.Drawing.Color.White;
            this.txtBedAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtBedAmt.ForeColor = System.Drawing.Color.Black;
            this.txtBedAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtBedAmt.Location = new System.Drawing.Point(238, 10);
            this.txtBedAmt.m_BlnIgnoreUserInfo = false;
            this.txtBedAmt.m_BlnPartControl = false;
            this.txtBedAmt.m_BlnReadOnly = false;
            this.txtBedAmt.m_BlnUnderLineDST = false;
            this.txtBedAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtBedAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtBedAmt.m_IntCanModifyTime = 6;
            this.txtBedAmt.m_IntPartControlLength = 0;
            this.txtBedAmt.m_IntPartControlStartIndex = 0;
            this.txtBedAmt.m_StrUserID = "";
            this.txtBedAmt.m_StrUserName = "";
            this.txtBedAmt.MaxLength = 50;
            this.txtBedAmt.Multiline = false;
            this.txtBedAmt.Name = "txtBedAmt";
            this.txtBedAmt.Size = new System.Drawing.Size(64, 20);
            this.txtBedAmt.TabIndex = 1;
            this.txtBedAmt.Text = "";
            // 
            // txtDeliveryChildAmt
            // 
            this.txtDeliveryChildAmt.BackColor = System.Drawing.Color.White;
            this.txtDeliveryChildAmt.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.txtDeliveryChildAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtDeliveryChildAmt.ForeColor = System.Drawing.Color.Black;
            this.txtDeliveryChildAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtDeliveryChildAmt.Location = new System.Drawing.Point(682, 46);
            this.txtDeliveryChildAmt.m_BlnIgnoreUserInfo = false;
            this.txtDeliveryChildAmt.m_BlnPartControl = false;
            this.txtDeliveryChildAmt.m_BlnReadOnly = false;
            this.txtDeliveryChildAmt.m_BlnUnderLineDST = false;
            this.txtDeliveryChildAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtDeliveryChildAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtDeliveryChildAmt.m_IntCanModifyTime = 6;
            this.txtDeliveryChildAmt.m_IntPartControlLength = 0;
            this.txtDeliveryChildAmt.m_IntPartControlStartIndex = 0;
            this.txtDeliveryChildAmt.m_StrUserID = "";
            this.txtDeliveryChildAmt.m_StrUserName = "";
            this.txtDeliveryChildAmt.MaxLength = 50;
            this.txtDeliveryChildAmt.Multiline = false;
            this.txtDeliveryChildAmt.Name = "txtDeliveryChildAmt";
            this.txtDeliveryChildAmt.Size = new System.Drawing.Size(64, 20);
            this.txtDeliveryChildAmt.TabIndex = 12;
            this.txtDeliveryChildAmt.Text = "";
            // 
            // txtBloodAmt
            // 
            this.txtBloodAmt.BackColor = System.Drawing.Color.White;
            this.txtBloodAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtBloodAmt.ForeColor = System.Drawing.Color.Black;
            this.txtBloodAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtBloodAmt.Location = new System.Drawing.Point(346, 46);
            this.txtBloodAmt.m_BlnIgnoreUserInfo = false;
            this.txtBloodAmt.m_BlnPartControl = false;
            this.txtBloodAmt.m_BlnReadOnly = false;
            this.txtBloodAmt.m_BlnUnderLineDST = false;
            this.txtBloodAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtBloodAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtBloodAmt.m_IntCanModifyTime = 6;
            this.txtBloodAmt.m_IntPartControlLength = 0;
            this.txtBloodAmt.m_IntPartControlStartIndex = 0;
            this.txtBloodAmt.m_StrUserID = "";
            this.txtBloodAmt.m_StrUserName = "";
            this.txtBloodAmt.MaxLength = 50;
            this.txtBloodAmt.Multiline = false;
            this.txtBloodAmt.Name = "txtBloodAmt";
            this.txtBloodAmt.Size = new System.Drawing.Size(64, 20);
            this.txtBloodAmt.TabIndex = 9;
            this.txtBloodAmt.Text = "";
            // 
            // txtAssayAmt
            // 
            this.txtAssayAmt.BackColor = System.Drawing.Color.White;
            this.txtAssayAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtAssayAmt.ForeColor = System.Drawing.Color.Black;
            this.txtAssayAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtAssayAmt.Location = new System.Drawing.Point(138, 46);
            this.txtAssayAmt.m_BlnIgnoreUserInfo = false;
            this.txtAssayAmt.m_BlnPartControl = false;
            this.txtAssayAmt.m_BlnReadOnly = false;
            this.txtAssayAmt.m_BlnUnderLineDST = false;
            this.txtAssayAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtAssayAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtAssayAmt.m_IntCanModifyTime = 6;
            this.txtAssayAmt.m_IntPartControlLength = 0;
            this.txtAssayAmt.m_IntPartControlStartIndex = 0;
            this.txtAssayAmt.m_StrUserID = "";
            this.txtAssayAmt.m_StrUserName = "";
            this.txtAssayAmt.MaxLength = 50;
            this.txtAssayAmt.Multiline = false;
            this.txtAssayAmt.Name = "txtAssayAmt";
            this.txtAssayAmt.Size = new System.Drawing.Size(64, 20);
            this.txtAssayAmt.TabIndex = 7;
            this.txtAssayAmt.Text = "";
            // 
            // txtCMFinishedAmt
            // 
            this.txtCMFinishedAmt.BackColor = System.Drawing.Color.White;
            this.txtCMFinishedAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtCMFinishedAmt.ForeColor = System.Drawing.Color.Black;
            this.txtCMFinishedAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtCMFinishedAmt.Location = new System.Drawing.Point(566, 10);
            this.txtCMFinishedAmt.m_BlnIgnoreUserInfo = false;
            this.txtCMFinishedAmt.m_BlnPartControl = false;
            this.txtCMFinishedAmt.m_BlnReadOnly = false;
            this.txtCMFinishedAmt.m_BlnUnderLineDST = false;
            this.txtCMFinishedAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtCMFinishedAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtCMFinishedAmt.m_IntCanModifyTime = 6;
            this.txtCMFinishedAmt.m_IntPartControlLength = 0;
            this.txtCMFinishedAmt.m_IntPartControlStartIndex = 0;
            this.txtCMFinishedAmt.m_StrUserID = "";
            this.txtCMFinishedAmt.m_StrUserName = "";
            this.txtCMFinishedAmt.MaxLength = 50;
            this.txtCMFinishedAmt.Multiline = false;
            this.txtCMFinishedAmt.Name = "txtCMFinishedAmt";
            this.txtCMFinishedAmt.Size = new System.Drawing.Size(64, 20);
            this.txtCMFinishedAmt.TabIndex = 4;
            this.txtCMFinishedAmt.Text = "";
            // 
            // txtOperationAmt
            // 
            this.txtOperationAmt.BackColor = System.Drawing.Color.White;
            this.txtOperationAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtOperationAmt.ForeColor = System.Drawing.Color.Black;
            this.txtOperationAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtOperationAmt.Location = new System.Drawing.Point(566, 46);
            this.txtOperationAmt.m_BlnIgnoreUserInfo = false;
            this.txtOperationAmt.m_BlnPartControl = false;
            this.txtOperationAmt.m_BlnReadOnly = false;
            this.txtOperationAmt.m_BlnUnderLineDST = false;
            this.txtOperationAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtOperationAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtOperationAmt.m_IntCanModifyTime = 6;
            this.txtOperationAmt.m_IntPartControlLength = 0;
            this.txtOperationAmt.m_IntPartControlStartIndex = 0;
            this.txtOperationAmt.m_StrUserID = "";
            this.txtOperationAmt.m_StrUserName = "";
            this.txtOperationAmt.MaxLength = 50;
            this.txtOperationAmt.Multiline = false;
            this.txtOperationAmt.Name = "txtOperationAmt";
            this.txtOperationAmt.Size = new System.Drawing.Size(64, 20);
            this.txtOperationAmt.TabIndex = 11;
            this.txtOperationAmt.Text = "";
            // 
            // txtWMAmt
            // 
            this.txtWMAmt.BackColor = System.Drawing.Color.White;
            this.txtWMAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtWMAmt.ForeColor = System.Drawing.Color.Black;
            this.txtWMAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtWMAmt.Location = new System.Drawing.Point(454, 10);
            this.txtWMAmt.m_BlnIgnoreUserInfo = false;
            this.txtWMAmt.m_BlnPartControl = false;
            this.txtWMAmt.m_BlnReadOnly = false;
            this.txtWMAmt.m_BlnUnderLineDST = false;
            this.txtWMAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtWMAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtWMAmt.m_IntCanModifyTime = 6;
            this.txtWMAmt.m_IntPartControlLength = 0;
            this.txtWMAmt.m_IntPartControlStartIndex = 0;
            this.txtWMAmt.m_StrUserID = "";
            this.txtWMAmt.m_StrUserName = "";
            this.txtWMAmt.MaxLength = 50;
            this.txtWMAmt.Multiline = false;
            this.txtWMAmt.Name = "txtWMAmt";
            this.txtWMAmt.Size = new System.Drawing.Size(64, 20);
            this.txtWMAmt.TabIndex = 3;
            this.txtWMAmt.Text = "";
            // 
            // txtO2Amt
            // 
            this.txtO2Amt.BackColor = System.Drawing.Color.White;
            this.txtO2Amt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtO2Amt.ForeColor = System.Drawing.Color.Black;
            this.txtO2Amt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtO2Amt.Location = new System.Drawing.Point(238, 46);
            this.txtO2Amt.m_BlnIgnoreUserInfo = false;
            this.txtO2Amt.m_BlnPartControl = false;
            this.txtO2Amt.m_BlnReadOnly = false;
            this.txtO2Amt.m_BlnUnderLineDST = false;
            this.txtO2Amt.m_ClrDST = System.Drawing.Color.Red;
            this.txtO2Amt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtO2Amt.m_IntCanModifyTime = 6;
            this.txtO2Amt.m_IntPartControlLength = 0;
            this.txtO2Amt.m_IntPartControlStartIndex = 0;
            this.txtO2Amt.m_StrUserID = "";
            this.txtO2Amt.m_StrUserName = "";
            this.txtO2Amt.MaxLength = 50;
            this.txtO2Amt.Multiline = false;
            this.txtO2Amt.Name = "txtO2Amt";
            this.txtO2Amt.Size = new System.Drawing.Size(64, 20);
            this.txtO2Amt.TabIndex = 8;
            this.txtO2Amt.Text = "";
            // 
            // txtCMSemiFinishedAmt
            // 
            this.txtCMSemiFinishedAmt.BackColor = System.Drawing.Color.White;
            this.txtCMSemiFinishedAmt.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.txtCMSemiFinishedAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtCMSemiFinishedAmt.ForeColor = System.Drawing.Color.Black;
            this.txtCMSemiFinishedAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtCMSemiFinishedAmt.Location = new System.Drawing.Point(682, 10);
            this.txtCMSemiFinishedAmt.m_BlnIgnoreUserInfo = false;
            this.txtCMSemiFinishedAmt.m_BlnPartControl = false;
            this.txtCMSemiFinishedAmt.m_BlnReadOnly = false;
            this.txtCMSemiFinishedAmt.m_BlnUnderLineDST = false;
            this.txtCMSemiFinishedAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtCMSemiFinishedAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtCMSemiFinishedAmt.m_IntCanModifyTime = 6;
            this.txtCMSemiFinishedAmt.m_IntPartControlLength = 0;
            this.txtCMSemiFinishedAmt.m_IntPartControlStartIndex = 0;
            this.txtCMSemiFinishedAmt.m_StrUserID = "";
            this.txtCMSemiFinishedAmt.m_StrUserName = "";
            this.txtCMSemiFinishedAmt.MaxLength = 50;
            this.txtCMSemiFinishedAmt.Multiline = false;
            this.txtCMSemiFinishedAmt.Name = "txtCMSemiFinishedAmt";
            this.txtCMSemiFinishedAmt.Size = new System.Drawing.Size(64, 20);
            this.txtCMSemiFinishedAmt.TabIndex = 5;
            this.txtCMSemiFinishedAmt.Text = "";
            // 
            // lblCMSemiFinishedTitle
            // 
            this.lblCMSemiFinishedTitle.AutoSize = true;
            this.lblCMSemiFinishedTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblCMSemiFinishedTitle.Location = new System.Drawing.Point(634, 11);
            this.lblCMSemiFinishedTitle.Name = "lblCMSemiFinishedTitle";
            this.lblCMSemiFinishedTitle.Size = new System.Drawing.Size(49, 14);
            this.lblCMSemiFinishedTitle.TabIndex = 29106;
            this.lblCMSemiFinishedTitle.Text = "中草药";
            // 
            // txtNurseAmt
            // 
            this.txtNurseAmt.BackColor = System.Drawing.Color.White;
            this.txtNurseAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtNurseAmt.ForeColor = System.Drawing.Color.Black;
            this.txtNurseAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtNurseAmt.Location = new System.Drawing.Point(346, 10);
            this.txtNurseAmt.m_BlnIgnoreUserInfo = false;
            this.txtNurseAmt.m_BlnPartControl = false;
            this.txtNurseAmt.m_BlnReadOnly = false;
            this.txtNurseAmt.m_BlnUnderLineDST = false;
            this.txtNurseAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtNurseAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtNurseAmt.m_IntCanModifyTime = 6;
            this.txtNurseAmt.m_IntPartControlLength = 0;
            this.txtNurseAmt.m_IntPartControlStartIndex = 0;
            this.txtNurseAmt.m_StrUserID = "";
            this.txtNurseAmt.m_StrUserName = "";
            this.txtNurseAmt.MaxLength = 50;
            this.txtNurseAmt.Multiline = false;
            this.txtNurseAmt.Name = "txtNurseAmt";
            this.txtNurseAmt.Size = new System.Drawing.Size(64, 20);
            this.txtNurseAmt.TabIndex = 2;
            this.txtNurseAmt.Text = "";
            // 
            // lblNurseAmt
            // 
            this.lblNurseAmt.AutoSize = true;
            this.lblNurseAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblNurseAmt.Location = new System.Drawing.Point(302, 11);
            this.lblNurseAmt.Name = "lblNurseAmt";
            this.lblNurseAmt.Size = new System.Drawing.Size(49, 14);
            this.lblNurseAmt.TabIndex = 29108;
            this.lblNurseAmt.Text = "护理费";
            // 
            // txtTreatmentAmt
            // 
            this.txtTreatmentAmt.BackColor = System.Drawing.Color.White;
            this.txtTreatmentAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtTreatmentAmt.ForeColor = System.Drawing.Color.Black;
            this.txtTreatmentAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtTreatmentAmt.Location = new System.Drawing.Point(454, 46);
            this.txtTreatmentAmt.m_BlnIgnoreUserInfo = false;
            this.txtTreatmentAmt.m_BlnPartControl = false;
            this.txtTreatmentAmt.m_BlnReadOnly = false;
            this.txtTreatmentAmt.m_BlnUnderLineDST = false;
            this.txtTreatmentAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtTreatmentAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtTreatmentAmt.m_IntCanModifyTime = 6;
            this.txtTreatmentAmt.m_IntPartControlLength = 0;
            this.txtTreatmentAmt.m_IntPartControlStartIndex = 0;
            this.txtTreatmentAmt.m_StrUserID = "";
            this.txtTreatmentAmt.m_StrUserName = "";
            this.txtTreatmentAmt.MaxLength = 50;
            this.txtTreatmentAmt.Multiline = false;
            this.txtTreatmentAmt.Name = "txtTreatmentAmt";
            this.txtTreatmentAmt.Size = new System.Drawing.Size(64, 20);
            this.txtTreatmentAmt.TabIndex = 10;
            this.txtTreatmentAmt.Text = "";
            // 
            // lblTreatmentAmt
            // 
            this.lblTreatmentAmt.AutoSize = true;
            this.lblTreatmentAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblTreatmentAmt.Location = new System.Drawing.Point(422, 47);
            this.lblTreatmentAmt.Name = "lblTreatmentAmt";
            this.lblTreatmentAmt.Size = new System.Drawing.Size(35, 14);
            this.lblTreatmentAmt.TabIndex = 29110;
            this.lblTreatmentAmt.Text = "诊疗";
            // 
            // txtOtherAmt1
            // 
            this.txtOtherAmt1.BackColor = System.Drawing.Color.White;
            this.txtOtherAmt1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtOtherAmt1.ForeColor = System.Drawing.Color.Black;
            this.txtOtherAmt1.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtOtherAmt1.Location = new System.Drawing.Point(454, 82);
            this.txtOtherAmt1.m_BlnIgnoreUserInfo = false;
            this.txtOtherAmt1.m_BlnPartControl = false;
            this.txtOtherAmt1.m_BlnReadOnly = false;
            this.txtOtherAmt1.m_BlnUnderLineDST = false;
            this.txtOtherAmt1.m_ClrDST = System.Drawing.Color.Red;
            this.txtOtherAmt1.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtOtherAmt1.m_IntCanModifyTime = 6;
            this.txtOtherAmt1.m_IntPartControlLength = 0;
            this.txtOtherAmt1.m_IntPartControlStartIndex = 0;
            this.txtOtherAmt1.m_StrUserID = "";
            this.txtOtherAmt1.m_StrUserName = "";
            this.txtOtherAmt1.MaxLength = 50;
            this.txtOtherAmt1.Multiline = false;
            this.txtOtherAmt1.Name = "txtOtherAmt1";
            this.txtOtherAmt1.Size = new System.Drawing.Size(64, 20);
            this.txtOtherAmt1.TabIndex = 17;
            this.txtOtherAmt1.Text = "";
            // 
            // lblOtherAmt1
            // 
            this.lblOtherAmt1.AutoSize = true;
            this.lblOtherAmt1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOtherAmt1.Location = new System.Drawing.Point(422, 83);
            this.lblOtherAmt1.Name = "lblOtherAmt1";
            this.lblOtherAmt1.Size = new System.Drawing.Size(35, 14);
            this.lblOtherAmt1.TabIndex = 29120;
            this.lblOtherAmt1.Text = "其他";
            // 
            // txtBabyAmt
            // 
            this.txtBabyAmt.BackColor = System.Drawing.Color.White;
            this.txtBabyAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtBabyAmt.ForeColor = System.Drawing.Color.Black;
            this.txtBabyAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtBabyAmt.Location = new System.Drawing.Point(250, 82);
            this.txtBabyAmt.m_BlnIgnoreUserInfo = false;
            this.txtBabyAmt.m_BlnPartControl = false;
            this.txtBabyAmt.m_BlnReadOnly = false;
            this.txtBabyAmt.m_BlnUnderLineDST = false;
            this.txtBabyAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtBabyAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtBabyAmt.m_IntCanModifyTime = 6;
            this.txtBabyAmt.m_IntPartControlLength = 0;
            this.txtBabyAmt.m_IntPartControlStartIndex = 0;
            this.txtBabyAmt.m_StrUserID = "";
            this.txtBabyAmt.m_StrUserName = "";
            this.txtBabyAmt.MaxLength = 50;
            this.txtBabyAmt.Multiline = false;
            this.txtBabyAmt.Name = "txtBabyAmt";
            this.txtBabyAmt.Size = new System.Drawing.Size(52, 20);
            this.txtBabyAmt.TabIndex = 15;
            this.txtBabyAmt.Text = "";
            // 
            // txtAnaethesiaAmt
            // 
            this.txtAnaethesiaAmt.BackColor = System.Drawing.Color.White;
            this.txtAnaethesiaAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtAnaethesiaAmt.ForeColor = System.Drawing.Color.Black;
            this.txtAnaethesiaAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtAnaethesiaAmt.Location = new System.Drawing.Point(138, 82);
            this.txtAnaethesiaAmt.m_BlnIgnoreUserInfo = false;
            this.txtAnaethesiaAmt.m_BlnPartControl = false;
            this.txtAnaethesiaAmt.m_BlnReadOnly = false;
            this.txtAnaethesiaAmt.m_BlnUnderLineDST = false;
            this.txtAnaethesiaAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtAnaethesiaAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtAnaethesiaAmt.m_IntCanModifyTime = 6;
            this.txtAnaethesiaAmt.m_IntPartControlLength = 0;
            this.txtAnaethesiaAmt.m_IntPartControlStartIndex = 0;
            this.txtAnaethesiaAmt.m_StrUserID = "";
            this.txtAnaethesiaAmt.m_StrUserName = "";
            this.txtAnaethesiaAmt.MaxLength = 50;
            this.txtAnaethesiaAmt.Multiline = false;
            this.txtAnaethesiaAmt.Name = "txtAnaethesiaAmt";
            this.txtAnaethesiaAmt.Size = new System.Drawing.Size(64, 20);
            this.txtAnaethesiaAmt.TabIndex = 14;
            this.txtAnaethesiaAmt.Text = "";
            // 
            // txtAccompanyAmt
            // 
            this.txtAccompanyAmt.BackColor = System.Drawing.Color.White;
            this.txtAccompanyAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtAccompanyAmt.ForeColor = System.Drawing.Color.Black;
            this.txtAccompanyAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtAccompanyAmt.Location = new System.Drawing.Point(346, 82);
            this.txtAccompanyAmt.m_BlnIgnoreUserInfo = false;
            this.txtAccompanyAmt.m_BlnPartControl = false;
            this.txtAccompanyAmt.m_BlnReadOnly = false;
            this.txtAccompanyAmt.m_BlnUnderLineDST = false;
            this.txtAccompanyAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtAccompanyAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtAccompanyAmt.m_IntCanModifyTime = 6;
            this.txtAccompanyAmt.m_IntPartControlLength = 0;
            this.txtAccompanyAmt.m_IntPartControlStartIndex = 0;
            this.txtAccompanyAmt.m_StrUserID = "";
            this.txtAccompanyAmt.m_StrUserName = "";
            this.txtAccompanyAmt.MaxLength = 50;
            this.txtAccompanyAmt.Multiline = false;
            this.txtAccompanyAmt.Name = "txtAccompanyAmt";
            this.txtAccompanyAmt.Size = new System.Drawing.Size(64, 20);
            this.txtAccompanyAmt.TabIndex = 16;
            this.txtAccompanyAmt.Text = "";
            // 
            // txtCheckAmt
            // 
            this.txtCheckAmt.BackColor = System.Drawing.Color.White;
            this.txtCheckAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtCheckAmt.ForeColor = System.Drawing.Color.Black;
            this.txtCheckAmt.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtCheckAmt.Location = new System.Drawing.Point(38, 82);
            this.txtCheckAmt.m_BlnIgnoreUserInfo = false;
            this.txtCheckAmt.m_BlnPartControl = false;
            this.txtCheckAmt.m_BlnReadOnly = false;
            this.txtCheckAmt.m_BlnUnderLineDST = false;
            this.txtCheckAmt.m_ClrDST = System.Drawing.Color.Red;
            this.txtCheckAmt.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtCheckAmt.m_IntCanModifyTime = 6;
            this.txtCheckAmt.m_IntPartControlLength = 0;
            this.txtCheckAmt.m_IntPartControlStartIndex = 0;
            this.txtCheckAmt.m_StrUserID = "";
            this.txtCheckAmt.m_StrUserName = "";
            this.txtCheckAmt.MaxLength = 50;
            this.txtCheckAmt.Multiline = false;
            this.txtCheckAmt.Name = "txtCheckAmt";
            this.txtCheckAmt.Size = new System.Drawing.Size(64, 20);
            this.txtCheckAmt.TabIndex = 13;
            this.txtCheckAmt.Text = "";
            // 
            // lblAccompanyAmt
            // 
            this.lblAccompanyAmt.AutoSize = true;
            this.lblAccompanyAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblAccompanyAmt.Location = new System.Drawing.Point(302, 83);
            this.lblAccompanyAmt.Name = "lblAccompanyAmt";
            this.lblAccompanyAmt.Size = new System.Drawing.Size(49, 14);
            this.lblAccompanyAmt.TabIndex = 29115;
            this.lblAccompanyAmt.Text = "陪床费";
            // 
            // lblBabyAmt
            // 
            this.lblBabyAmt.AutoSize = true;
            this.lblBabyAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblBabyAmt.Location = new System.Drawing.Point(206, 83);
            this.lblBabyAmt.Name = "lblBabyAmt";
            this.lblBabyAmt.Size = new System.Drawing.Size(49, 14);
            this.lblBabyAmt.TabIndex = 29114;
            this.lblBabyAmt.Text = "婴儿费";
            // 
            // lblAnaethisiaAmt
            // 
            this.lblAnaethisiaAmt.AutoSize = true;
            this.lblAnaethisiaAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblAnaethisiaAmt.Location = new System.Drawing.Point(102, 83);
            this.lblAnaethisiaAmt.Name = "lblAnaethisiaAmt";
            this.lblAnaethisiaAmt.Size = new System.Drawing.Size(35, 14);
            this.lblAnaethisiaAmt.TabIndex = 29113;
            this.lblAnaethisiaAmt.Text = "麻醉";
            // 
            // lblCheckAmt
            // 
            this.lblCheckAmt.AutoSize = true;
            this.lblCheckAmt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblCheckAmt.Location = new System.Drawing.Point(2, 83);
            this.lblCheckAmt.Name = "lblCheckAmt";
            this.lblCheckAmt.Size = new System.Drawing.Size(35, 14);
            this.lblCheckAmt.TabIndex = 29112;
            this.lblCheckAmt.Text = "检查";
            // 
            // txtOtherAmt2
            // 
            this.txtOtherAmt2.BackColor = System.Drawing.Color.White;
            this.txtOtherAmt2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtOtherAmt2.ForeColor = System.Drawing.Color.Black;
            this.txtOtherAmt2.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtOtherAmt2.Location = new System.Drawing.Point(566, 82);
            this.txtOtherAmt2.m_BlnIgnoreUserInfo = false;
            this.txtOtherAmt2.m_BlnPartControl = false;
            this.txtOtherAmt2.m_BlnReadOnly = false;
            this.txtOtherAmt2.m_BlnUnderLineDST = false;
            this.txtOtherAmt2.m_ClrDST = System.Drawing.Color.Red;
            this.txtOtherAmt2.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtOtherAmt2.m_IntCanModifyTime = 6;
            this.txtOtherAmt2.m_IntPartControlLength = 0;
            this.txtOtherAmt2.m_IntPartControlStartIndex = 0;
            this.txtOtherAmt2.m_StrUserID = "";
            this.txtOtherAmt2.m_StrUserName = "";
            this.txtOtherAmt2.MaxLength = 50;
            this.txtOtherAmt2.Multiline = false;
            this.txtOtherAmt2.Name = "txtOtherAmt2";
            this.txtOtherAmt2.Size = new System.Drawing.Size(64, 20);
            this.txtOtherAmt2.TabIndex = 18;
            this.txtOtherAmt2.Text = "";
            // 
            // txtOtherAmt3
            // 
            this.txtOtherAmt3.BackColor = System.Drawing.Color.White;
            this.txtOtherAmt3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.txtOtherAmt3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtOtherAmt3.ForeColor = System.Drawing.Color.Black;
            this.txtOtherAmt3.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtOtherAmt3.Location = new System.Drawing.Point(682, 82);
            this.txtOtherAmt3.m_BlnIgnoreUserInfo = false;
            this.txtOtherAmt3.m_BlnPartControl = false;
            this.txtOtherAmt3.m_BlnReadOnly = false;
            this.txtOtherAmt3.m_BlnUnderLineDST = false;
            this.txtOtherAmt3.m_ClrDST = System.Drawing.Color.Red;
            this.txtOtherAmt3.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtOtherAmt3.m_IntCanModifyTime = 6;
            this.txtOtherAmt3.m_IntPartControlLength = 0;
            this.txtOtherAmt3.m_IntPartControlStartIndex = 0;
            this.txtOtherAmt3.m_StrUserID = "";
            this.txtOtherAmt3.m_StrUserName = "";
            this.txtOtherAmt3.MaxLength = 50;
            this.txtOtherAmt3.Multiline = false;
            this.txtOtherAmt3.Name = "txtOtherAmt3";
            this.txtOtherAmt3.Size = new System.Drawing.Size(64, 20);
            this.txtOtherAmt3.TabIndex = 19;
            this.txtOtherAmt3.Text = "";
            // 
            // lblComma
            // 
            this.lblComma.AutoSize = true;
            this.lblComma.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblComma.Location = new System.Drawing.Point(549, 83);
            this.lblComma.Name = "lblComma";
            this.lblComma.Size = new System.Drawing.Size(21, 14);
            this.lblComma.TabIndex = 29124;
            this.lblComma.Text = "、";
            // 
            // lblComma2
            // 
            this.lblComma2.AutoSize = true;
            this.lblComma2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblComma2.Location = new System.Drawing.Point(665, 83);
            this.lblComma2.Name = "lblComma2";
            this.lblComma2.Size = new System.Drawing.Size(21, 14);
            this.lblComma2.TabIndex = 29125;
            this.lblComma2.Text = "、";
            // 
            // lblCorpseCheck
            // 
            this.lblCorpseCheck.AutoSize = true;
            this.lblCorpseCheck.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblCorpseCheck.Location = new System.Drawing.Point(2, 119);
            this.lblCorpseCheck.Name = "lblCorpseCheck";
            this.lblCorpseCheck.Size = new System.Drawing.Size(35, 14);
            this.lblCorpseCheck.TabIndex = 29126;
            this.lblCorpseCheck.Text = "尸检";
            this.lblCorpseCheck.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblFirstCaseTitle
            // 
            this.lblFirstCaseTitle.AutoSize = true;
            this.lblFirstCaseTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblFirstCaseTitle.Location = new System.Drawing.Point(154, 119);
            this.lblFirstCaseTitle.Name = "lblFirstCaseTitle";
            this.lblFirstCaseTitle.Size = new System.Drawing.Size(245, 14);
            this.lblFirstCaseTitle.TabIndex = 29129;
            this.lblFirstCaseTitle.Text = "手术、治疗、检查、诊断为本院第一例";
            this.lblFirstCaseTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblFollowTitle
            // 
            this.lblFollowTitle.AutoSize = true;
            this.lblFollowTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblFollowTitle.Location = new System.Drawing.Point(2, 159);
            this.lblFollowTitle.Name = "lblFollowTitle";
            this.lblFollowTitle.Size = new System.Drawing.Size(35, 14);
            this.lblFollowTitle.TabIndex = 29132;
            this.lblFollowTitle.Text = "随诊";
            this.lblFollowTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtFollow_Week
            // 
            this.txtFollow_Week.BackColor = System.Drawing.Color.White;
            this.txtFollow_Week.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtFollow_Week.ForeColor = System.Drawing.Color.Black;
            this.txtFollow_Week.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtFollow_Week.Location = new System.Drawing.Point(214, 159);
            this.txtFollow_Week.m_BlnIgnoreUserInfo = false;
            this.txtFollow_Week.m_BlnPartControl = false;
            this.txtFollow_Week.m_BlnReadOnly = false;
            this.txtFollow_Week.m_BlnUnderLineDST = false;
            this.txtFollow_Week.m_ClrDST = System.Drawing.Color.Red;
            this.txtFollow_Week.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtFollow_Week.m_IntCanModifyTime = 6;
            this.txtFollow_Week.m_IntPartControlLength = 0;
            this.txtFollow_Week.m_IntPartControlStartIndex = 0;
            this.txtFollow_Week.m_StrUserID = "";
            this.txtFollow_Week.m_StrUserName = "";
            this.txtFollow_Week.MaxLength = 50;
            this.txtFollow_Week.Multiline = false;
            this.txtFollow_Week.Name = "txtFollow_Week";
            this.txtFollow_Week.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
            this.txtFollow_Week.Size = new System.Drawing.Size(40, 20);
            this.txtFollow_Week.TabIndex = 24;
            this.txtFollow_Week.Text = "";
            // 
            // lblFollowDate
            // 
            this.lblFollowDate.AutoSize = true;
            this.lblFollowDate.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblFollowDate.Location = new System.Drawing.Point(154, 159);
            this.lblFollowDate.Name = "lblFollowDate";
            this.lblFollowDate.Size = new System.Drawing.Size(63, 14);
            this.lblFollowDate.TabIndex = 29135;
            this.lblFollowDate.Text = "随诊期限";
            this.lblFollowDate.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblWeek
            // 
            this.lblWeek.AutoSize = true;
            this.lblWeek.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblWeek.Location = new System.Drawing.Point(254, 159);
            this.lblWeek.Name = "lblWeek";
            this.lblWeek.Size = new System.Drawing.Size(21, 14);
            this.lblWeek.TabIndex = 29137;
            this.lblWeek.Text = "周";
            this.lblWeek.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblFollowMonth
            // 
            this.lblFollowMonth.AutoSize = true;
            this.lblFollowMonth.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblFollowMonth.Location = new System.Drawing.Point(310, 159);
            this.lblFollowMonth.Name = "lblFollowMonth";
            this.lblFollowMonth.Size = new System.Drawing.Size(21, 14);
            this.lblFollowMonth.TabIndex = 29139;
            this.lblFollowMonth.Text = "月";
            this.lblFollowMonth.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtFollow_Month
            // 
            this.txtFollow_Month.BackColor = System.Drawing.Color.White;
            this.txtFollow_Month.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtFollow_Month.ForeColor = System.Drawing.Color.Black;
            this.txtFollow_Month.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtFollow_Month.Location = new System.Drawing.Point(270, 159);
            this.txtFollow_Month.m_BlnIgnoreUserInfo = false;
            this.txtFollow_Month.m_BlnPartControl = false;
            this.txtFollow_Month.m_BlnReadOnly = false;
            this.txtFollow_Month.m_BlnUnderLineDST = false;
            this.txtFollow_Month.m_ClrDST = System.Drawing.Color.Red;
            this.txtFollow_Month.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtFollow_Month.m_IntCanModifyTime = 6;
            this.txtFollow_Month.m_IntPartControlLength = 0;
            this.txtFollow_Month.m_IntPartControlStartIndex = 0;
            this.txtFollow_Month.m_StrUserID = "";
            this.txtFollow_Month.m_StrUserName = "";
            this.txtFollow_Month.MaxLength = 50;
            this.txtFollow_Month.Multiline = false;
            this.txtFollow_Month.Name = "txtFollow_Month";
            this.txtFollow_Month.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
            this.txtFollow_Month.Size = new System.Drawing.Size(40, 20);
            this.txtFollow_Month.TabIndex = 25;
            this.txtFollow_Month.Text = "";
            // 
            // lblFollowYear
            // 
            this.lblFollowYear.AutoSize = true;
            this.lblFollowYear.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblFollowYear.Location = new System.Drawing.Point(366, 159);
            this.lblFollowYear.Name = "lblFollowYear";
            this.lblFollowYear.Size = new System.Drawing.Size(21, 14);
            this.lblFollowYear.TabIndex = 29141;
            this.lblFollowYear.Text = "年";
            this.lblFollowYear.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtFollow_Year
            // 
            this.txtFollow_Year.BackColor = System.Drawing.Color.White;
            this.txtFollow_Year.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtFollow_Year.ForeColor = System.Drawing.Color.Black;
            this.txtFollow_Year.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtFollow_Year.Location = new System.Drawing.Point(326, 159);
            this.txtFollow_Year.m_BlnIgnoreUserInfo = false;
            this.txtFollow_Year.m_BlnPartControl = false;
            this.txtFollow_Year.m_BlnReadOnly = false;
            this.txtFollow_Year.m_BlnUnderLineDST = false;
            this.txtFollow_Year.m_ClrDST = System.Drawing.Color.Red;
            this.txtFollow_Year.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtFollow_Year.m_IntCanModifyTime = 6;
            this.txtFollow_Year.m_IntPartControlLength = 0;
            this.txtFollow_Year.m_IntPartControlStartIndex = 0;
            this.txtFollow_Year.m_StrUserID = "";
            this.txtFollow_Year.m_StrUserName = "";
            this.txtFollow_Year.MaxLength = 50;
            this.txtFollow_Year.Multiline = false;
            this.txtFollow_Year.Name = "txtFollow_Year";
            this.txtFollow_Year.RightToLeft = System.Windows.Forms.RightToLeft.Yes;
            this.txtFollow_Year.Size = new System.Drawing.Size(40, 20);
            this.txtFollow_Year.TabIndex = 26;
            this.txtFollow_Year.Text = "";
            // 
            // lblModelCaseTitle
            // 
            this.lblModelCaseTitle.AutoSize = true;
            this.lblModelCaseTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblModelCaseTitle.Location = new System.Drawing.Point(518, 119);
            this.lblModelCaseTitle.Name = "lblModelCaseTitle";
            this.lblModelCaseTitle.Size = new System.Drawing.Size(63, 14);
            this.lblModelCaseTitle.TabIndex = 29142;
            this.lblModelCaseTitle.Text = "示范病例";
            this.lblModelCaseTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblBloodTransAction
            // 
            this.lblBloodTransAction.AutoSize = true;
            this.lblBloodTransAction.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblBloodTransAction.Location = new System.Drawing.Point(2, 195);
            this.lblBloodTransAction.Name = "lblBloodTransAction";
            this.lblBloodTransAction.Size = new System.Drawing.Size(70, 14);
            this.lblBloodTransAction.TabIndex = 29155;
            this.lblBloodTransAction.Text = "*输血反应";
            // 
            // lblBloodTypeDesp
            // 
            this.lblBloodTypeDesp.AutoSize = true;
            this.lblBloodTypeDesp.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblBloodTypeDesp.Location = new System.Drawing.Point(446, 159);
            this.lblBloodTypeDesp.Name = "lblBloodTypeDesp";
            this.lblBloodTypeDesp.Size = new System.Drawing.Size(168, 14);
            this.lblBloodTypeDesp.TabIndex = 29147;
            this.lblBloodTypeDesp.Text = "1.A 2.B 3.AB 4.O 5.其他";
            // 
            // txtBloodType
            // 
            this.txtBloodType.BackColor = System.Drawing.Color.White;
            this.txtBloodType.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtBloodType.ForeColor = System.Drawing.Color.Black;
            this.txtBloodType.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtBloodType.Location = new System.Drawing.Point(422, 159);
            this.txtBloodType.m_BlnIgnoreUserInfo = false;
            this.txtBloodType.m_BlnPartControl = false;
            this.txtBloodType.m_BlnReadOnly = false;
            this.txtBloodType.m_BlnUnderLineDST = false;
            this.txtBloodType.m_ClrDST = System.Drawing.Color.Red;
            this.txtBloodType.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtBloodType.m_IntCanModifyTime = 6;
            this.txtBloodType.m_IntPartControlLength = 0;
            this.txtBloodType.m_IntPartControlStartIndex = 0;
            this.txtBloodType.m_StrUserID = "";
            this.txtBloodType.m_StrUserName = "";
            this.txtBloodType.MaxLength = 50;
            this.txtBloodType.Multiline = false;
            this.txtBloodType.Name = "txtBloodType";
            this.txtBloodType.Size = new System.Drawing.Size(24, 20);
            this.txtBloodType.TabIndex = 27;
            this.txtBloodType.Text = "";
            // 
            // lblBloodType
            // 
            this.lblBloodType.AutoSize = true;
            this.lblBloodType.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblBloodType.Location = new System.Drawing.Point(390, 159);
            this.lblBloodType.Name = "lblBloodType";
            this.lblBloodType.Size = new System.Drawing.Size(35, 14);
            this.lblBloodType.TabIndex = 29145;
            this.lblBloodType.Text = "血型";
            this.lblBloodType.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblBloodRh
            // 
            this.lblBloodRh.AutoSize = true;
            this.lblBloodRh.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblBloodRh.Location = new System.Drawing.Point(618, 159);
            this.lblBloodRh.Name = "lblBloodRh";
            this.lblBloodRh.Size = new System.Drawing.Size(21, 14);
            this.lblBloodRh.TabIndex = 29;
            this.lblBloodRh.Text = "Rh";
            // 
            // txtRBC
            // 
            this.txtRBC.BackColor = System.Drawing.Color.White;
            this.txtRBC.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtRBC.ForeColor = System.Drawing.Color.Black;
            this.txtRBC.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtRBC.Location = new System.Drawing.Point(144, 224);
            this.txtRBC.m_BlnIgnoreUserInfo = false;
            this.txtRBC.m_BlnPartControl = false;
            this.txtRBC.m_BlnReadOnly = false;
            this.txtRBC.m_BlnUnderLineDST = false;
            this.txtRBC.m_ClrDST = System.Drawing.Color.Red;
            this.txtRBC.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtRBC.m_IntCanModifyTime = 6;
            this.txtRBC.m_IntPartControlLength = 0;
            this.txtRBC.m_IntPartControlStartIndex = 0;
            this.txtRBC.m_StrUserID = "";
            this.txtRBC.m_StrUserName = "";
            this.txtRBC.MaxLength = 50;
            this.txtRBC.Multiline = false;
            this.txtRBC.Name = "txtRBC";
            this.txtRBC.Size = new System.Drawing.Size(87, 20);
            this.txtRBC.TabIndex = 31;
            this.txtRBC.Text = "";
            // 
            // lblRBCUnit
            // 
            this.lblRBCUnit.AutoSize = true;
            this.lblRBCUnit.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblRBCUnit.Location = new System.Drawing.Point(232, 225);
            this.lblRBCUnit.Name = "lblRBCUnit";
            this.lblRBCUnit.Size = new System.Drawing.Size(35, 14);
            this.lblRBCUnit.TabIndex = 32;
            this.lblRBCUnit.Text = "单位";
            this.lblRBCUnit.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblBloodComponent
            // 
            this.lblBloodComponent.AutoSize = true;
            this.lblBloodComponent.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblBloodComponent.Location = new System.Drawing.Point(2, 225);
            this.lblBloodComponent.Name = "lblBloodComponent";
            this.lblBloodComponent.Size = new System.Drawing.Size(133, 14);
            this.lblBloodComponent.TabIndex = 29161;
            this.lblBloodComponent.Text = "*输血品种 1.红细胞";
            this.lblBloodComponent.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtPLT
            // 
            this.txtPLT.BackColor = System.Drawing.Color.White;
            this.txtPLT.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtPLT.ForeColor = System.Drawing.Color.Black;
            this.txtPLT.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtPLT.Location = new System.Drawing.Point(331, 224);
            this.txtPLT.m_BlnIgnoreUserInfo = false;
            this.txtPLT.m_BlnPartControl = false;
            this.txtPLT.m_BlnReadOnly = false;
            this.txtPLT.m_BlnUnderLineDST = false;
            this.txtPLT.m_ClrDST = System.Drawing.Color.Red;
            this.txtPLT.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtPLT.m_IntCanModifyTime = 6;
            this.txtPLT.m_IntPartControlLength = 0;
            this.txtPLT.m_IntPartControlStartIndex = 0;
            this.txtPLT.m_StrUserID = "";
            this.txtPLT.m_StrUserName = "";
            this.txtPLT.MaxLength = 50;
            this.txtPLT.Multiline = false;
            this.txtPLT.Name = "txtPLT";
            this.txtPLT.Size = new System.Drawing.Size(40, 20);
            this.txtPLT.TabIndex = 34;
            this.txtPLT.Text = "";
            // 
            // lblUnit10
            // 
            this.lblUnit10.AutoSize = true;
            this.lblUnit10.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit10.Location = new System.Drawing.Point(372, 225);
            this.lblUnit10.Name = "lblUnit10";
            this.lblUnit10.Size = new System.Drawing.Size(21, 14);
            this.lblUnit10.TabIndex = 35;
            this.lblUnit10.Text = "袋";
            this.lblUnit10.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblPLT
            // 
            this.lblPLT.AutoSize = true;
            this.lblPLT.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblPLT.Location = new System.Drawing.Point(267, 225);
            this.lblPLT.Name = "lblPLT";
            this.lblPLT.Size = new System.Drawing.Size(63, 14);
            this.lblPLT.TabIndex = 33;
            this.lblPLT.Text = "2.血小板";
            this.lblPLT.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtPlasm
            // 
            this.txtPlasm.BackColor = System.Drawing.Color.White;
            this.txtPlasm.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtPlasm.ForeColor = System.Drawing.Color.Black;
            this.txtPlasm.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtPlasm.Location = new System.Drawing.Point(442, 224);
            this.txtPlasm.m_BlnIgnoreUserInfo = false;
            this.txtPlasm.m_BlnPartControl = false;
            this.txtPlasm.m_BlnReadOnly = false;
            this.txtPlasm.m_BlnUnderLineDST = false;
            this.txtPlasm.m_ClrDST = System.Drawing.Color.Red;
            this.txtPlasm.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtPlasm.m_IntCanModifyTime = 6;
            this.txtPlasm.m_IntPartControlLength = 0;
            this.txtPlasm.m_IntPartControlStartIndex = 0;
            this.txtPlasm.m_StrUserID = "";
            this.txtPlasm.m_StrUserName = "";
            this.txtPlasm.MaxLength = 50;
            this.txtPlasm.Multiline = false;
            this.txtPlasm.Name = "txtPlasm";
            this.txtPlasm.Size = new System.Drawing.Size(40, 20);
            this.txtPlasm.TabIndex = 37;
            this.txtPlasm.Text = "";
            // 
            // lblUnit11
            // 
            this.lblUnit11.AutoSize = true;
            this.lblUnit11.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit11.Location = new System.Drawing.Point(483, 225);
            this.lblUnit11.Name = "lblUnit11";
            this.lblUnit11.Size = new System.Drawing.Size(21, 14);
            this.lblUnit11.TabIndex = 38;
            this.lblUnit11.Text = "ml";
            this.lblUnit11.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblPlasm
            // 
            this.lblPlasm.AutoSize = true;
            this.lblPlasm.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblPlasm.Location = new System.Drawing.Point(393, 225);
            this.lblPlasm.Name = "lblPlasm";
            this.lblPlasm.Size = new System.Drawing.Size(49, 14);
            this.lblPlasm.TabIndex = 36;
            this.lblPlasm.Text = "3.血浆";
            this.lblPlasm.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtWholeBlood
            // 
            this.txtWholeBlood.BackColor = System.Drawing.Color.White;
            this.txtWholeBlood.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtWholeBlood.ForeColor = System.Drawing.Color.Black;
            this.txtWholeBlood.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtWholeBlood.Location = new System.Drawing.Point(553, 224);
            this.txtWholeBlood.m_BlnIgnoreUserInfo = false;
            this.txtWholeBlood.m_BlnPartControl = false;
            this.txtWholeBlood.m_BlnReadOnly = false;
            this.txtWholeBlood.m_BlnUnderLineDST = false;
            this.txtWholeBlood.m_ClrDST = System.Drawing.Color.Red;
            this.txtWholeBlood.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtWholeBlood.m_IntCanModifyTime = 6;
            this.txtWholeBlood.m_IntPartControlLength = 0;
            this.txtWholeBlood.m_IntPartControlStartIndex = 0;
            this.txtWholeBlood.m_StrUserID = "";
            this.txtWholeBlood.m_StrUserName = "";
            this.txtWholeBlood.MaxLength = 50;
            this.txtWholeBlood.Multiline = false;
            this.txtWholeBlood.Name = "txtWholeBlood";
            this.txtWholeBlood.Size = new System.Drawing.Size(40, 20);
            this.txtWholeBlood.TabIndex = 40;
            this.txtWholeBlood.Text = "";
            // 
            // lblUnit13
            // 
            this.lblUnit13.AutoSize = true;
            this.lblUnit13.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit13.Location = new System.Drawing.Point(594, 225);
            this.lblUnit13.Name = "lblUnit13";
            this.lblUnit13.Size = new System.Drawing.Size(21, 14);
            this.lblUnit13.TabIndex = 41;
            this.lblUnit13.Text = "ml";
            this.lblUnit13.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblWholeBlood
            // 
            this.lblWholeBlood.AutoSize = true;
            this.lblWholeBlood.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblWholeBlood.Location = new System.Drawing.Point(504, 225);
            this.lblWholeBlood.Name = "lblWholeBlood";
            this.lblWholeBlood.Size = new System.Drawing.Size(49, 14);
            this.lblWholeBlood.TabIndex = 39;
            this.lblWholeBlood.Text = "4.全血";
            this.lblWholeBlood.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtOtherBlood
            // 
            this.txtOtherBlood.BackColor = System.Drawing.Color.White;
            this.txtOtherBlood.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtOtherBlood.ForeColor = System.Drawing.Color.Black;
            this.txtOtherBlood.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtOtherBlood.Location = new System.Drawing.Point(664, 224);
            this.txtOtherBlood.m_BlnIgnoreUserInfo = false;
            this.txtOtherBlood.m_BlnPartControl = false;
            this.txtOtherBlood.m_BlnReadOnly = false;
            this.txtOtherBlood.m_BlnUnderLineDST = false;
            this.txtOtherBlood.m_ClrDST = System.Drawing.Color.Red;
            this.txtOtherBlood.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtOtherBlood.m_IntCanModifyTime = 6;
            this.txtOtherBlood.m_IntPartControlLength = 0;
            this.txtOtherBlood.m_IntPartControlStartIndex = 0;
            this.txtOtherBlood.m_StrUserID = "";
            this.txtOtherBlood.m_StrUserName = "";
            this.txtOtherBlood.MaxLength = 50;
            this.txtOtherBlood.Multiline = false;
            this.txtOtherBlood.Name = "txtOtherBlood";
            this.txtOtherBlood.Size = new System.Drawing.Size(44, 20);
            this.txtOtherBlood.TabIndex = 43;
            this.txtOtherBlood.Text = "";
            // 
            // lblUnit14
            // 
            this.lblUnit14.AutoSize = true;
            this.lblUnit14.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit14.Location = new System.Drawing.Point(709, 225);
            this.lblUnit14.Name = "lblUnit14";
            this.lblUnit14.Size = new System.Drawing.Size(21, 14);
            this.lblUnit14.TabIndex = 44;
            this.lblUnit14.Text = "ml";
            this.lblUnit14.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblOtherBlood
            // 
            this.lblOtherBlood.AutoSize = true;
            this.lblOtherBlood.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOtherBlood.Location = new System.Drawing.Point(615, 225);
            this.lblOtherBlood.Name = "lblOtherBlood";
            this.lblOtherBlood.Size = new System.Drawing.Size(49, 14);
            this.lblOtherBlood.TabIndex = 42;
            this.lblOtherBlood.Text = "5.其他";
            this.lblOtherBlood.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtNurseLevelI
            // 
            this.txtNurseLevelI.BackColor = System.Drawing.Color.White;
            this.txtNurseLevelI.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtNurseLevelI.ForeColor = System.Drawing.Color.Black;
            this.txtNurseLevelI.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtNurseLevelI.Location = new System.Drawing.Point(230, 288);
            this.txtNurseLevelI.m_BlnIgnoreUserInfo = false;
            this.txtNurseLevelI.m_BlnPartControl = false;
            this.txtNurseLevelI.m_BlnReadOnly = false;
            this.txtNurseLevelI.m_BlnUnderLineDST = false;
            this.txtNurseLevelI.m_ClrDST = System.Drawing.Color.Red;
            this.txtNurseLevelI.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtNurseLevelI.m_IntCanModifyTime = 6;
            this.txtNurseLevelI.m_IntPartControlLength = 0;
            this.txtNurseLevelI.m_IntPartControlStartIndex = 0;
            this.txtNurseLevelI.m_StrUserID = "";
            this.txtNurseLevelI.m_StrUserName = "";
            this.txtNurseLevelI.MaxLength = 50;
            this.txtNurseLevelI.Multiline = false;
            this.txtNurseLevelI.Name = "txtNurseLevelI";
            this.txtNurseLevelI.Size = new System.Drawing.Size(40, 20);
            this.txtNurseLevelI.TabIndex = 55;
            this.txtNurseLevelI.Text = "";
            // 
            // lblNurseLevelI
            // 
            this.lblNurseLevelI.AutoSize = true;
            this.lblNurseLevelI.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblNurseLevelI.Location = new System.Drawing.Point(190, 289);
            this.lblNurseLevelI.Name = "lblNurseLevelI";
            this.lblNurseLevelI.Size = new System.Drawing.Size(42, 14);
            this.lblNurseLevelI.TabIndex = 54;
            this.lblNurseLevelI.Text = "2.I级";
            this.lblNurseLevelI.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtTOPLevel
            // 
            this.txtTOPLevel.BackColor = System.Drawing.Color.White;
            this.txtTOPLevel.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtTOPLevel.ForeColor = System.Drawing.Color.Black;
            this.txtTOPLevel.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtTOPLevel.Location = new System.Drawing.Point(118, 288);
            this.txtTOPLevel.m_BlnIgnoreUserInfo = false;
            this.txtTOPLevel.m_BlnPartControl = false;
            this.txtTOPLevel.m_BlnReadOnly = false;
            this.txtTOPLevel.m_BlnUnderLineDST = false;
            this.txtTOPLevel.m_ClrDST = System.Drawing.Color.Red;
            this.txtTOPLevel.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtTOPLevel.m_IntCanModifyTime = 6;
            this.txtTOPLevel.m_IntPartControlLength = 0;
            this.txtTOPLevel.m_IntPartControlStartIndex = 0;
            this.txtTOPLevel.m_StrUserID = "";
            this.txtTOPLevel.m_StrUserName = "";
            this.txtTOPLevel.MaxLength = 50;
            this.txtTOPLevel.Multiline = false;
            this.txtTOPLevel.Name = "txtTOPLevel";
            this.txtTOPLevel.Size = new System.Drawing.Size(40, 20);
            this.txtTOPLevel.TabIndex = 52;
            this.txtTOPLevel.Text = "";
            // 
            // lblUnit21
            // 
            this.lblUnit21.AutoSize = true;
            this.lblUnit21.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit21.Location = new System.Drawing.Point(158, 289);
            this.lblUnit21.Name = "lblUnit21";
            this.lblUnit21.Size = new System.Drawing.Size(35, 14);
            this.lblUnit21.TabIndex = 53;
            this.lblUnit21.Text = "小时";
            this.lblUnit21.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblNurseLevel
            // 
            this.lblNurseLevel.AccessibleRole = System.Windows.Forms.AccessibleRole.None;
            this.lblNurseLevel.AutoSize = true;
            this.lblNurseLevel.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblNurseLevel.Location = new System.Drawing.Point(2, 289);
            this.lblNurseLevel.Name = "lblNurseLevel";
            this.lblNurseLevel.Size = new System.Drawing.Size(119, 14);
            this.lblNurseLevel.TabIndex = 51;
            this.lblNurseLevel.Text = "*护理等级 1.特级";
            this.lblNurseLevel.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtLongDistanctConsultation
            // 
            this.txtLongDistanctConsultation.BackColor = System.Drawing.Color.White;
            this.txtLongDistanctConsultation.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtLongDistanctConsultation.ForeColor = System.Drawing.Color.Black;
            this.txtLongDistanctConsultation.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtLongDistanctConsultation.Location = new System.Drawing.Point(170, 256);
            this.txtLongDistanctConsultation.m_BlnIgnoreUserInfo = false;
            this.txtLongDistanctConsultation.m_BlnPartControl = false;
            this.txtLongDistanctConsultation.m_BlnReadOnly = false;
            this.txtLongDistanctConsultation.m_BlnUnderLineDST = false;
            this.txtLongDistanctConsultation.m_ClrDST = System.Drawing.Color.Red;
            this.txtLongDistanctConsultation.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtLongDistanctConsultation.m_IntCanModifyTime = 6;
            this.txtLongDistanctConsultation.m_IntPartControlLength = 0;
            this.txtLongDistanctConsultation.m_IntPartControlStartIndex = 0;
            this.txtLongDistanctConsultation.m_StrUserID = "";
            this.txtLongDistanctConsultation.m_StrUserName = "";
            this.txtLongDistanctConsultation.MaxLength = 50;
            this.txtLongDistanctConsultation.Multiline = false;
            this.txtLongDistanctConsultation.Name = "txtLongDistanctConsultation";
            this.txtLongDistanctConsultation.Size = new System.Drawing.Size(32, 20);
            this.txtLongDistanctConsultation.TabIndex = 49;
            this.txtLongDistanctConsultation.Text = "";
            // 
            // lblLongDistanceConsultation
            // 
            this.lblLongDistanceConsultation.AutoSize = true;
            this.lblLongDistanceConsultation.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblLongDistanceConsultation.Location = new System.Drawing.Point(110, 257);
            this.lblLongDistanceConsultation.Name = "lblLongDistanceConsultation";
            this.lblLongDistanceConsultation.Size = new System.Drawing.Size(63, 14);
            this.lblLongDistanceConsultation.TabIndex = 48;
            this.lblLongDistanceConsultation.Text = "远程会诊";
            this.lblLongDistanceConsultation.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtConsultation
            // 
            this.txtConsultation.BackColor = System.Drawing.Color.White;
            this.txtConsultation.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtConsultation.ForeColor = System.Drawing.Color.Black;
            this.txtConsultation.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtConsultation.Location = new System.Drawing.Point(66, 256);
            this.txtConsultation.m_BlnIgnoreUserInfo = false;
            this.txtConsultation.m_BlnPartControl = false;
            this.txtConsultation.m_BlnReadOnly = false;
            this.txtConsultation.m_BlnUnderLineDST = false;
            this.txtConsultation.m_ClrDST = System.Drawing.Color.Red;
            this.txtConsultation.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtConsultation.m_IntCanModifyTime = 6;
            this.txtConsultation.m_IntPartControlLength = 0;
            this.txtConsultation.m_IntPartControlStartIndex = 0;
            this.txtConsultation.m_StrUserID = "";
            this.txtConsultation.m_StrUserName = "";
            this.txtConsultation.MaxLength = 50;
            this.txtConsultation.Multiline = false;
            this.txtConsultation.Name = "txtConsultation";
            this.txtConsultation.Size = new System.Drawing.Size(28, 20);
            this.txtConsultation.TabIndex = 46;
            this.txtConsultation.Text = "";
            // 
            // lblUnit15
            // 
            this.lblUnit15.AutoSize = true;
            this.lblUnit15.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit15.Location = new System.Drawing.Point(94, 257);
            this.lblUnit15.Name = "lblUnit15";
            this.lblUnit15.Size = new System.Drawing.Size(21, 14);
            this.lblUnit15.TabIndex = 47;
            this.lblUnit15.Text = "次";
            this.lblUnit15.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblConsultation
            // 
            this.lblConsultation.AutoSize = true;
            this.lblConsultation.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblConsultation.Location = new System.Drawing.Point(2, 257);
            this.lblConsultation.Name = "lblConsultation";
            this.lblConsultation.Size = new System.Drawing.Size(63, 14);
            this.lblConsultation.TabIndex = 45;
            this.lblConsultation.Text = "院际会诊";
            this.lblConsultation.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblUnit20
            // 
            this.lblUnit20.AutoSize = true;
            this.lblUnit20.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit20.Location = new System.Drawing.Point(202, 257);
            this.lblUnit20.Name = "lblUnit20";
            this.lblUnit20.Size = new System.Drawing.Size(21, 14);
            this.lblUnit20.TabIndex = 50;
            this.lblUnit20.Text = "次";
            this.lblUnit20.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblUnit22
            // 
            this.lblUnit22.AutoSize = true;
            this.lblUnit22.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit22.Location = new System.Drawing.Point(270, 289);
            this.lblUnit22.Name = "lblUnit22";
            this.lblUnit22.Size = new System.Drawing.Size(21, 14);
            this.lblUnit22.TabIndex = 56;
            this.lblUnit22.Text = "日";
            this.lblUnit22.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblUnit23
            // 
            this.lblUnit23.AutoSize = true;
            this.lblUnit23.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit23.Location = new System.Drawing.Point(382, 289);
            this.lblUnit23.Name = "lblUnit23";
            this.lblUnit23.Size = new System.Drawing.Size(21, 14);
            this.lblUnit23.TabIndex = 59;
            this.lblUnit23.Text = "日";
            this.lblUnit23.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtNurseLevelII
            // 
            this.txtNurseLevelII.BackColor = System.Drawing.Color.White;
            this.txtNurseLevelII.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtNurseLevelII.ForeColor = System.Drawing.Color.Black;
            this.txtNurseLevelII.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtNurseLevelII.Location = new System.Drawing.Point(342, 288);
            this.txtNurseLevelII.m_BlnIgnoreUserInfo = false;
            this.txtNurseLevelII.m_BlnPartControl = false;
            this.txtNurseLevelII.m_BlnReadOnly = false;
            this.txtNurseLevelII.m_BlnUnderLineDST = false;
            this.txtNurseLevelII.m_ClrDST = System.Drawing.Color.Red;
            this.txtNurseLevelII.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtNurseLevelII.m_IntCanModifyTime = 6;
            this.txtNurseLevelII.m_IntPartControlLength = 0;
            this.txtNurseLevelII.m_IntPartControlStartIndex = 0;
            this.txtNurseLevelII.m_StrUserID = "";
            this.txtNurseLevelII.m_StrUserName = "";
            this.txtNurseLevelII.MaxLength = 50;
            this.txtNurseLevelII.Multiline = false;
            this.txtNurseLevelII.Name = "txtNurseLevelII";
            this.txtNurseLevelII.Size = new System.Drawing.Size(40, 20);
            this.txtNurseLevelII.TabIndex = 58;
            this.txtNurseLevelII.Text = "";
            // 
            // lblNurseLevelII
            // 
            this.lblNurseLevelII.AutoSize = true;
            this.lblNurseLevelII.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblNurseLevelII.Location = new System.Drawing.Point(294, 289);
            this.lblNurseLevelII.Name = "lblNurseLevelII";
            this.lblNurseLevelII.Size = new System.Drawing.Size(49, 14);
            this.lblNurseLevelII.TabIndex = 57;
            this.lblNurseLevelII.Text = "3.II级";
            this.lblNurseLevelII.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblUnit24
            // 
            this.lblUnit24.AutoSize = true;
            this.lblUnit24.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit24.Location = new System.Drawing.Point(506, 289);
            this.lblUnit24.Name = "lblUnit24";
            this.lblUnit24.Size = new System.Drawing.Size(21, 14);
            this.lblUnit24.TabIndex = 62;
            this.lblUnit24.Text = "日";
            this.lblUnit24.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtNurseLevelIII
            // 
            this.txtNurseLevelIII.BackColor = System.Drawing.Color.White;
            this.txtNurseLevelIII.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtNurseLevelIII.ForeColor = System.Drawing.Color.Black;
            this.txtNurseLevelIII.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtNurseLevelIII.Location = new System.Drawing.Point(466, 288);
            this.txtNurseLevelIII.m_BlnIgnoreUserInfo = false;
            this.txtNurseLevelIII.m_BlnPartControl = false;
            this.txtNurseLevelIII.m_BlnReadOnly = false;
            this.txtNurseLevelIII.m_BlnUnderLineDST = false;
            this.txtNurseLevelIII.m_ClrDST = System.Drawing.Color.Red;
            this.txtNurseLevelIII.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtNurseLevelIII.m_IntCanModifyTime = 6;
            this.txtNurseLevelIII.m_IntPartControlLength = 0;
            this.txtNurseLevelIII.m_IntPartControlStartIndex = 0;
            this.txtNurseLevelIII.m_StrUserID = "";
            this.txtNurseLevelIII.m_StrUserName = "";
            this.txtNurseLevelIII.MaxLength = 50;
            this.txtNurseLevelIII.Multiline = false;
            this.txtNurseLevelIII.Name = "txtNurseLevelIII";
            this.txtNurseLevelIII.Size = new System.Drawing.Size(38, 20);
            this.txtNurseLevelIII.TabIndex = 61;
            this.txtNurseLevelIII.Text = "";
            // 
            // lblNurseLevelIII
            // 
            this.lblNurseLevelIII.AutoSize = true;
            this.lblNurseLevelIII.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblNurseLevelIII.Location = new System.Drawing.Point(408, 289);
            this.lblNurseLevelIII.Name = "lblNurseLevelIII";
            this.lblNurseLevelIII.Size = new System.Drawing.Size(56, 14);
            this.lblNurseLevelIII.TabIndex = 60;
            this.lblNurseLevelIII.Text = "4.III级";
            this.lblNurseLevelIII.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtICU
            // 
            this.txtICU.BackColor = System.Drawing.Color.White;
            this.txtICU.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtICU.ForeColor = System.Drawing.Color.Black;
            this.txtICU.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtICU.Location = new System.Drawing.Point(144, 318);
            this.txtICU.m_BlnIgnoreUserInfo = false;
            this.txtICU.m_BlnPartControl = false;
            this.txtICU.m_BlnReadOnly = false;
            this.txtICU.m_BlnUnderLineDST = false;
            this.txtICU.m_ClrDST = System.Drawing.Color.Red;
            this.txtICU.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtICU.m_IntCanModifyTime = 6;
            this.txtICU.m_IntPartControlLength = 0;
            this.txtICU.m_IntPartControlStartIndex = 0;
            this.txtICU.m_StrUserID = "";
            this.txtICU.m_StrUserName = "";
            this.txtICU.MaxLength = 50;
            this.txtICU.Multiline = false;
            this.txtICU.Name = "txtICU";
            this.txtICU.Size = new System.Drawing.Size(32, 20);
            this.txtICU.TabIndex = 63;
            this.txtICU.Text = "";
            // 
            // lblUnit25
            // 
            this.lblUnit25.AutoSize = true;
            this.lblUnit25.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit25.Location = new System.Drawing.Point(178, 319);
            this.lblUnit25.Name = "lblUnit25";
            this.lblUnit25.Size = new System.Drawing.Size(35, 14);
            this.lblUnit25.TabIndex = 64;
            this.lblUnit25.Text = "小时";
            this.lblUnit25.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblICU
            // 
            this.lblICU.AutoSize = true;
            this.lblICU.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblICU.Location = new System.Drawing.Point(65, 319);
            this.lblICU.Name = "lblICU";
            this.lblICU.Size = new System.Drawing.Size(77, 14);
            this.lblICU.TabIndex = 29199;
            this.lblICU.Text = "5.重症监护";
            this.lblICU.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblUnit26
            // 
            this.lblUnit26.AutoSize = true;
            this.lblUnit26.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit26.Location = new System.Drawing.Point(348, 319);
            this.lblUnit26.Name = "lblUnit26";
            this.lblUnit26.Size = new System.Drawing.Size(21, 14);
            this.lblUnit26.TabIndex = 67;
            this.lblUnit26.Text = "日";
            this.lblUnit26.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtSpecialNurse
            // 
            this.txtSpecialNurse.BackColor = System.Drawing.Color.White;
            this.txtSpecialNurse.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtSpecialNurse.ForeColor = System.Drawing.Color.Black;
            this.txtSpecialNurse.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtSpecialNurse.Location = new System.Drawing.Point(306, 318);
            this.txtSpecialNurse.m_BlnIgnoreUserInfo = false;
            this.txtSpecialNurse.m_BlnPartControl = false;
            this.txtSpecialNurse.m_BlnReadOnly = false;
            this.txtSpecialNurse.m_BlnUnderLineDST = false;
            this.txtSpecialNurse.m_ClrDST = System.Drawing.Color.Red;
            this.txtSpecialNurse.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtSpecialNurse.m_IntCanModifyTime = 6;
            this.txtSpecialNurse.m_IntPartControlLength = 0;
            this.txtSpecialNurse.m_IntPartControlStartIndex = 0;
            this.txtSpecialNurse.m_StrUserID = "";
            this.txtSpecialNurse.m_StrUserName = "";
            this.txtSpecialNurse.MaxLength = 50;
            this.txtSpecialNurse.Multiline = false;
            this.txtSpecialNurse.Name = "txtSpecialNurse";
            this.txtSpecialNurse.Size = new System.Drawing.Size(40, 20);
            this.txtSpecialNurse.TabIndex = 66;
            this.txtSpecialNurse.Text = "";
            // 
            // lblSpecialNurse
            // 
            this.lblSpecialNurse.AutoSize = true;
            this.lblSpecialNurse.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblSpecialNurse.Location = new System.Drawing.Point(220, 319);
            this.lblSpecialNurse.Name = "lblSpecialNurse";
            this.lblSpecialNurse.Size = new System.Drawing.Size(84, 14);
            this.lblSpecialNurse.TabIndex = 65;
            this.lblSpecialNurse.Text = "6. 特殊护理";
            this.lblSpecialNurse.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // gpbLine3
            // 
            this.gpbLine3.BackColor = System.Drawing.Color.White;
            this.gpbLine3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbLine3.Location = new System.Drawing.Point(6, 387);
            this.gpbLine3.Name = "gpbLine3";
            this.gpbLine3.Size = new System.Drawing.Size(732, 4);
            this.gpbLine3.TabIndex = 29205;
            this.gpbLine3.TabStop = false;
            this.gpbLine3.Text = "groupBox10";
            this.gpbLine3.Visible = false;
            // 
            // lblInsuranceDesp1
            // 
            this.lblInsuranceDesp1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblInsuranceDesp1.Location = new System.Drawing.Point(14, 401);
            this.lblInsuranceDesp1.Name = "lblInsuranceDesp1";
            this.lblInsuranceDesp1.Size = new System.Drawing.Size(732, 36);
            this.lblInsuranceDesp1.TabIndex = 29206;
            this.lblInsuranceDesp1.Text = "说明:  医疗付款方式  1、社会基本保险（补充保险、特大病保险） 2、商业保险 3、自费保险  4、公费医疗 5、大病统筹   6、其他   住院费用总计   " +
                "凡可有计算机提供住院费用清单的，住院首页中可不填";
            // 
            // lblTimesTitle
            // 
            this.lblTimesTitle.AutoSize = true;
            this.lblTimesTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblTimesTitle.ForeColor = System.Drawing.Color.Black;
            this.lblTimesTitle.Location = new System.Drawing.Point(209, 11);
            this.lblTimesTitle.Name = "lblTimesTitle";
            this.lblTimesTitle.Size = new System.Drawing.Size(21, 14);
            this.lblTimesTitle.TabIndex = 29209;
            this.lblTimesTitle.Text = "第";
            this.lblTimesTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblTimesInHospital
            // 
            this.lblTimesInHospital.AutoSize = true;
            this.lblTimesInHospital.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblTimesInHospital.ForeColor = System.Drawing.Color.Black;
            this.lblTimesInHospital.Location = new System.Drawing.Point(249, 11);
            this.lblTimesInHospital.Name = "lblTimesInHospital";
            this.lblTimesInHospital.Size = new System.Drawing.Size(49, 14);
            this.lblTimesInHospital.TabIndex = 29210;
            this.lblTimesInHospital.Text = "次住院";
            this.lblTimesInHospital.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblModeOfPaymentTitle
            // 
            this.lblModeOfPaymentTitle.AutoSize = true;
            this.lblModeOfPaymentTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblModeOfPaymentTitle.ForeColor = System.Drawing.Color.Black;
            this.lblModeOfPaymentTitle.Location = new System.Drawing.Point(304, 11);
            this.lblModeOfPaymentTitle.Name = "lblModeOfPaymentTitle";
            this.lblModeOfPaymentTitle.Size = new System.Drawing.Size(98, 14);
            this.lblModeOfPaymentTitle.TabIndex = 29212;
            this.lblModeOfPaymentTitle.Text = "医疗付款方式:";
            this.lblModeOfPaymentTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // txtInsuranceNum
            // 
            this.txtInsuranceNum.AccessibleDescription = "医保号";
            this.txtInsuranceNum.BackColor = System.Drawing.Color.White;
            this.txtInsuranceNum.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtInsuranceNum.ForeColor = System.Drawing.Color.Black;
            this.txtInsuranceNum.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtInsuranceNum.Location = new System.Drawing.Point(61, 8);
            this.txtInsuranceNum.m_BlnIgnoreUserInfo = false;
            this.txtInsuranceNum.m_BlnPartControl = false;
            this.txtInsuranceNum.m_BlnReadOnly = false;
            this.txtInsuranceNum.m_BlnUnderLineDST = false;
            this.txtInsuranceNum.m_ClrDST = System.Drawing.Color.Red;
            this.txtInsuranceNum.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtInsuranceNum.m_IntCanModifyTime = 6;
            this.txtInsuranceNum.m_IntPartControlLength = 0;
            this.txtInsuranceNum.m_IntPartControlStartIndex = 0;
            this.txtInsuranceNum.m_StrUserID = "";
            this.txtInsuranceNum.m_StrUserName = "";
            this.txtInsuranceNum.MaxLength = 50;
            this.txtInsuranceNum.Multiline = false;
            this.txtInsuranceNum.Name = "txtInsuranceNum";
            this.txtInsuranceNum.Size = new System.Drawing.Size(141, 20);
            this.txtInsuranceNum.TabIndex = 0;
            this.txtInsuranceNum.Text = "";
            // 
            // lblInuranceTitle
            // 
            this.lblInuranceTitle.AutoSize = true;
            this.lblInuranceTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblInuranceTitle.ForeColor = System.Drawing.Color.Black;
            this.lblInuranceTitle.Location = new System.Drawing.Point(5, 11);
            this.lblInuranceTitle.Name = "lblInuranceTitle";
            this.lblInuranceTitle.Size = new System.Drawing.Size(56, 14);
            this.lblInuranceTitle.TabIndex = 29214;
            this.lblInuranceTitle.Text = "医保号:";
            this.lblInuranceTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // trvTime
            // 
            this.trvTime.BackColor = System.Drawing.Color.White;
            this.trvTime.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.trvTime.ForeColor = System.Drawing.Color.Black;
            this.trvTime.HideSelection = false;
            this.trvTime.ItemHeight = 18;
            this.trvTime.Location = new System.Drawing.Point(166, 192);
            this.trvTime.Name = "trvTime";
            treeNode1.Name = "";
            treeNode1.Text = "入院日期";
            this.trvTime.Nodes.AddRange(new System.Windows.Forms.TreeNode[] {
            treeNode1});
            this.trvTime.ShowRootLines = false;
            this.trvTime.Size = new System.Drawing.Size(200, 64);
            this.trvTime.TabIndex = 10;
            this.trvTime.Visible = false;
            this.trvTime.AfterSelect += new System.Windows.Forms.TreeViewEventHandler(this.trvTime_AfterSelect);
            // 
            // lblProvince
            // 
            this.lblProvince.BackColor = System.Drawing.SystemColors.Control;
            this.lblProvince.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblProvince.Location = new System.Drawing.Point(444, 6);
            this.lblProvince.Name = "lblProvince";
            this.lblProvince.Size = new System.Drawing.Size(284, 20);
            this.lblProvince.TabIndex = 29220;
            this.lblProvince.Visible = false;
            // 
            // lblProvinceTitle
            // 
            this.lblProvinceTitle.AllowDrop = true;
            this.lblProvinceTitle.AutoSize = true;
            this.lblProvinceTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblProvinceTitle.Location = new System.Drawing.Point(153, 34);
            this.lblProvinceTitle.Name = "lblProvinceTitle";
            this.lblProvinceTitle.Size = new System.Drawing.Size(56, 14);
            this.lblProvinceTitle.TabIndex = 29218;
            this.lblProvinceTitle.Text = "省(市):";
            this.lblProvinceTitle.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblHomePlaceTitle
            // 
            this.lblHomePlaceTitle.AutoSize = true;
            this.lblHomePlaceTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblHomePlaceTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblHomePlaceTitle.Location = new System.Drawing.Point(404, 6);
            this.lblHomePlaceTitle.Name = "lblHomePlaceTitle";
            this.lblHomePlaceTitle.Size = new System.Drawing.Size(56, 14);
            this.lblHomePlaceTitle.TabIndex = 29217;
            this.lblHomePlaceTitle.Text = "出生地:";
            // 
            // lblPatientHistoryNO
            // 
            this.lblPatientHistoryNO.AutoSize = true;
            this.lblPatientHistoryNO.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblPatientHistoryNO.Location = new System.Drawing.Point(482, 212);
            this.lblPatientHistoryNO.Name = "lblPatientHistoryNO";
            this.lblPatientHistoryNO.Size = new System.Drawing.Size(56, 14);
            this.lblPatientHistoryNO.TabIndex = 29222;
            this.lblPatientHistoryNO.Text = "病案号:";
            this.lblPatientHistoryNO.Visible = false;
            // 
            // txtPatientHistoryNO
            // 
            this.txtPatientHistoryNO.AccessibleDescription = "病案号";
            this.txtPatientHistoryNO.BackColor = System.Drawing.Color.White;
            this.txtPatientHistoryNO.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.txtPatientHistoryNO.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtPatientHistoryNO.ForeColor = System.Drawing.Color.White;
            this.txtPatientHistoryNO.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtPatientHistoryNO.Location = new System.Drawing.Point(544, 207);
            this.txtPatientHistoryNO.m_BlnIgnoreUserInfo = true;
            this.txtPatientHistoryNO.m_BlnPartControl = false;
            this.txtPatientHistoryNO.m_BlnReadOnly = false;
            this.txtPatientHistoryNO.m_BlnUnderLineDST = false;
            this.txtPatientHistoryNO.m_ClrDST = System.Drawing.Color.Red;
            this.txtPatientHistoryNO.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtPatientHistoryNO.m_IntCanModifyTime = 6;
            this.txtPatientHistoryNO.m_IntPartControlLength = 0;
            this.txtPatientHistoryNO.m_IntPartControlStartIndex = 0;
            this.txtPatientHistoryNO.m_StrUserID = "";
            this.txtPatientHistoryNO.m_StrUserName = "";
            this.txtPatientHistoryNO.MaxLength = 8000;
            this.txtPatientHistoryNO.Multiline = false;
            this.txtPatientHistoryNO.Name = "txtPatientHistoryNO";
            this.txtPatientHistoryNO.Size = new System.Drawing.Size(84, 21);
            this.txtPatientHistoryNO.TabIndex = 30;
            this.txtPatientHistoryNO.Text = "";
            this.txtPatientHistoryNO.Visible = false;
            // 
            // dtgChangeDept2
            // 
            this.dtgChangeDept2.AllowSorting = false;
            this.dtgChangeDept2.BackgroundColor = System.Drawing.Color.White;
            this.dtgChangeDept2.CaptionBackColor = System.Drawing.SystemColors.AppWorkspace;
            this.dtgChangeDept2.CaptionForeColor = System.Drawing.Color.Black;
            this.dtgChangeDept2.CaptionText = "转科科别";
            this.dtgChangeDept2.DataMember = "";
            this.dtgChangeDept2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dtgChangeDept2.ForeColor = System.Drawing.Color.Black;
            this.dtgChangeDept2.HeaderForeColor = System.Drawing.Color.White;
            this.dtgChangeDept2.LinkColor = System.Drawing.SystemColors.AppWorkspace;
            this.dtgChangeDept2.Location = new System.Drawing.Point(432, 4);
            this.dtgChangeDept2.Name = "dtgChangeDept2";
            this.dtgChangeDept2.ParentRowsForeColor = System.Drawing.Color.White;
            this.dtgChangeDept2.ReadOnly = true;
            this.dtgChangeDept2.RowHeaderWidth = 40;
            this.dtgChangeDept2.Size = new System.Drawing.Size(10, 11);
            this.dtgChangeDept2.TabIndex = 0;
            this.dtgChangeDept2.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle1});
            this.dtgChangeDept2.Visible = false;
            // 
            // dataGridTableStyle1
            // 
            this.dataGridTableStyle1.AllowSorting = false;
            this.dataGridTableStyle1.DataGrid = this.dtgChangeDept2;
            this.dataGridTableStyle1.GridColumnStyles.AddRange(new System.Windows.Forms.DataGridColumnStyle[] {
            this.dtcChangeDept});
            this.dataGridTableStyle1.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGridTableStyle1.MappingName = "ChangeDept";
            // 
            // dtcChangeDept
            // 
            this.dtcChangeDept.Format = "";
            this.dtcChangeDept.FormatInfo = null;
            this.dtcChangeDept.HeaderText = "科室名称";
            this.dtcChangeDept.MappingName = "科室名称";
            this.dtcChangeDept.NullText = "";
            this.dtcChangeDept.Width = 150;
            // 
            // dtcDept
            // 
            this.dtcDept.Format = "";
            this.dtcDept.FormatInfo = null;
            this.dtcDept.HeaderText = "科室名称";
            this.dtcDept.MappingName = "科室名称";
            this.dtcDept.NullText = "";
            this.dtcDept.Width = 120;
            // 
            // txtDiagnosis
            // 
            this.txtDiagnosis.AccessibleDescription = "门诊（急）诊断";
            this.txtDiagnosis.BackColor = System.Drawing.Color.White;
            this.txtDiagnosis.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtDiagnosis.ForeColor = System.Drawing.Color.Black;
            this.txtDiagnosis.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtDiagnosis.Location = new System.Drawing.Point(111, 92);
            this.txtDiagnosis.m_BlnIgnoreUserInfo = false;
            this.txtDiagnosis.m_BlnPartControl = false;
            this.txtDiagnosis.m_BlnReadOnly = false;
            this.txtDiagnosis.m_BlnUnderLineDST = false;
            this.txtDiagnosis.m_ClrDST = System.Drawing.Color.Red;
            this.txtDiagnosis.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtDiagnosis.m_IntCanModifyTime = 6;
            this.txtDiagnosis.m_IntPartControlLength = 0;
            this.txtDiagnosis.m_IntPartControlStartIndex = 0;
            this.txtDiagnosis.m_StrUserID = "";
            this.txtDiagnosis.m_StrUserName = "";
            this.txtDiagnosis.MaxLength = 8000;
            this.txtDiagnosis.Multiline = false;
            this.txtDiagnosis.Name = "txtDiagnosis";
            this.txtDiagnosis.Size = new System.Drawing.Size(471, 20);
            this.txtDiagnosis.TabIndex = 2;
            this.txtDiagnosis.Text = "";
            this.txtDiagnosis.Leave += new System.EventHandler(this.QueryControls_Leave);
            this.txtDiagnosis.Enter += new System.EventHandler(this.QueryControls_Enter);
            this.txtDiagnosis.KeyDown += new System.Windows.Forms.KeyEventHandler(this.m_mthEvent_KeyDown);
            // 
            // dtpConfirmDiagnosisDate
            // 
            this.dtpConfirmDiagnosisDate.BorderColor = System.Drawing.Color.Black;
            this.dtpConfirmDiagnosisDate.CustomFormat = "yyyy年MM月dd日 HH:mm:ss";
            this.dtpConfirmDiagnosisDate.DropButtonBackColor = System.Drawing.Color.Gainsboro;
            this.dtpConfirmDiagnosisDate.DropButtonCursor = System.Windows.Forms.Cursors.Hand;
            this.dtpConfirmDiagnosisDate.DropButtonForeColor = System.Drawing.Color.Black;
            this.dtpConfirmDiagnosisDate.flatFont = new System.Drawing.Font("宋体", 12F);
            this.dtpConfirmDiagnosisDate.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dtpConfirmDiagnosisDate.Format = System.Windows.Forms.DateTimePickerFormat.Custom;
            this.dtpConfirmDiagnosisDate.Location = new System.Drawing.Point(432, 221);
            this.dtpConfirmDiagnosisDate.m_BlnOnlyTime = false;
            this.dtpConfirmDiagnosisDate.m_EnmVisibleFlag = com.digitalwave.Utility.Controls.ctlTimePicker.enmDateTimeFlag.Second;
            this.dtpConfirmDiagnosisDate.MaxDate = new System.DateTime(9998, 12, 31, 0, 0, 0, 0);
            this.dtpConfirmDiagnosisDate.MinDate = new System.DateTime(1753, 1, 1, 0, 0, 0, 0);
            this.dtpConfirmDiagnosisDate.Name = "dtpConfirmDiagnosisDate";
            this.dtpConfirmDiagnosisDate.ReadOnly = false;
            this.dtpConfirmDiagnosisDate.Size = new System.Drawing.Size(149, 22);
            this.dtpConfirmDiagnosisDate.TabIndex = 5;
            this.dtpConfirmDiagnosisDate.TextBackColor = System.Drawing.Color.White;
            this.dtpConfirmDiagnosisDate.TextForeColor = System.Drawing.Color.Black;
            // 
            // gpbCondictionWhenIn
            // 
            this.gpbCondictionWhenIn.Controls.Add(this.rdbNormal);
            this.gpbCondictionWhenIn.Controls.Add(this.rdbEmergency);
            this.gpbCondictionWhenIn.Controls.Add(this.rdbDanger);
            this.gpbCondictionWhenIn.Location = new System.Drawing.Point(131, 244);
            this.gpbCondictionWhenIn.Name = "gpbCondictionWhenIn";
            this.gpbCondictionWhenIn.Size = new System.Drawing.Size(240, 40);
            this.gpbCondictionWhenIn.TabIndex = 6;
            this.gpbCondictionWhenIn.TabStop = false;
            // 
            // rdbNormal
            // 
            this.rdbNormal.BackColor = System.Drawing.Color.Transparent;
            this.rdbNormal.Checked = true;
            this.rdbNormal.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.rdbNormal.ForeColor = System.Drawing.Color.Black;
            this.rdbNormal.Location = new System.Drawing.Point(156, 12);
            this.rdbNormal.Name = "rdbNormal";
            this.rdbNormal.Size = new System.Drawing.Size(68, 24);
            this.rdbNormal.TabIndex = 2;
            this.rdbNormal.TabStop = true;
            this.rdbNormal.Text = "3.一般";
            this.rdbNormal.UseVisualStyleBackColor = false;
            this.rdbNormal.CheckedChanged += new System.EventHandler(this.CondictionWhenIn_CheckedChanged);
            // 
            // rdbEmergency
            // 
            this.rdbEmergency.BackColor = System.Drawing.Color.Transparent;
            this.rdbEmergency.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.rdbEmergency.ForeColor = System.Drawing.Color.Black;
            this.rdbEmergency.Location = new System.Drawing.Point(78, 11);
            this.rdbEmergency.Name = "rdbEmergency";
            this.rdbEmergency.Size = new System.Drawing.Size(56, 24);
            this.rdbEmergency.TabIndex = 1;
            this.rdbEmergency.Text = "2.急";
            this.rdbEmergency.UseVisualStyleBackColor = false;
            this.rdbEmergency.CheckedChanged += new System.EventHandler(this.CondictionWhenIn_CheckedChanged);
            // 
            // rdbDanger
            // 
            this.rdbDanger.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.rdbDanger.Location = new System.Drawing.Point(4, 12);
            this.rdbDanger.Name = "rdbDanger";
            this.rdbDanger.Size = new System.Drawing.Size(66, 24);
            this.rdbDanger.TabIndex = 0;
            this.rdbDanger.Text = "1.危";
            this.rdbDanger.CheckedChanged += new System.EventHandler(this.CondictionWhenIn_CheckedChanged);
            // 
            // gpbQuality
            // 
            this.gpbQuality.Controls.Add(this.rdbQuality3);
            this.gpbQuality.Controls.Add(this.rdbQuality2);
            this.gpbQuality.Controls.Add(this.rdbQuality1);
            this.gpbQuality.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbQuality.ForeColor = System.Drawing.Color.Black;
            this.gpbQuality.Location = new System.Drawing.Point(79, 459);
            this.gpbQuality.Name = "gpbQuality";
            this.gpbQuality.Size = new System.Drawing.Size(160, 32);
            this.gpbQuality.TabIndex = 22;
            this.gpbQuality.TabStop = false;
            // 
            // rdbQuality3
            // 
            this.rdbQuality3.Location = new System.Drawing.Point(107, 12);
            this.rdbQuality3.Name = "rdbQuality3";
            this.rdbQuality3.Size = new System.Drawing.Size(56, 20);
            this.rdbQuality3.TabIndex = 2;
            this.rdbQuality3.Text = "3.丙";
            this.rdbQuality3.CheckedChanged += new System.EventHandler(this.Quality_CheckedChanged);
            // 
            // rdbQuality2
            // 
            this.rdbQuality2.Location = new System.Drawing.Point(56, 12);
            this.rdbQuality2.Name = "rdbQuality2";
            this.rdbQuality2.Size = new System.Drawing.Size(56, 20);
            this.rdbQuality2.TabIndex = 1;
            this.rdbQuality2.Text = "2.乙";
            this.rdbQuality2.CheckedChanged += new System.EventHandler(this.Quality_CheckedChanged);
            // 
            // rdbQuality1
            // 
            this.rdbQuality1.Location = new System.Drawing.Point(0, 12);
            this.rdbQuality1.Name = "rdbQuality1";
            this.rdbQuality1.Size = new System.Drawing.Size(55, 20);
            this.rdbQuality1.TabIndex = 0;
            this.rdbQuality1.Text = "1.甲";
            this.rdbQuality1.CheckedChanged += new System.EventHandler(this.Quality_CheckedChanged);
            // 
            // gpbCorpseCheck
            // 
            this.gpbCorpseCheck.Controls.Add(this.rdbCorpseCheckNO);
            this.gpbCorpseCheck.Controls.Add(this.rdbCorpseCheckYes);
            this.gpbCorpseCheck.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbCorpseCheck.Location = new System.Drawing.Point(38, 106);
            this.gpbCorpseCheck.Name = "gpbCorpseCheck";
            this.gpbCorpseCheck.Size = new System.Drawing.Size(116, 37);
            this.gpbCorpseCheck.TabIndex = 20;
            this.gpbCorpseCheck.TabStop = false;
            // 
            // rdbCorpseCheckNO
            // 
            this.rdbCorpseCheckNO.Checked = true;
            this.rdbCorpseCheckNO.Location = new System.Drawing.Point(56, 8);
            this.rdbCorpseCheckNO.Name = "rdbCorpseCheckNO";
            this.rdbCorpseCheckNO.Size = new System.Drawing.Size(56, 24);
            this.rdbCorpseCheckNO.TabIndex = 1;
            this.rdbCorpseCheckNO.TabStop = true;
            this.rdbCorpseCheckNO.Text = "否";
            this.rdbCorpseCheckNO.CheckedChanged += new System.EventHandler(this.CorpseCheck_CheckedChanged);
            // 
            // rdbCorpseCheckYes
            // 
            this.rdbCorpseCheckYes.Location = new System.Drawing.Point(4, 8);
            this.rdbCorpseCheckYes.Name = "rdbCorpseCheckYes";
            this.rdbCorpseCheckYes.Size = new System.Drawing.Size(56, 24);
            this.rdbCorpseCheckYes.TabIndex = 0;
            this.rdbCorpseCheckYes.Text = "是";
            this.rdbCorpseCheckYes.CheckedChanged += new System.EventHandler(this.CorpseCheck_CheckedChanged);
            // 
            // gpbFirstCase
            // 
            this.gpbFirstCase.Controls.Add(this.rdbFirstCaseNO);
            this.gpbFirstCase.Controls.Add(this.rdbFirstCaseYes);
            this.gpbFirstCase.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbFirstCase.Location = new System.Drawing.Point(398, 106);
            this.gpbFirstCase.Name = "gpbFirstCase";
            this.gpbFirstCase.Size = new System.Drawing.Size(116, 37);
            this.gpbFirstCase.TabIndex = 21;
            this.gpbFirstCase.TabStop = false;
            // 
            // rdbFirstCaseNO
            // 
            this.rdbFirstCaseNO.Checked = true;
            this.rdbFirstCaseNO.Location = new System.Drawing.Point(56, 8);
            this.rdbFirstCaseNO.Name = "rdbFirstCaseNO";
            this.rdbFirstCaseNO.Size = new System.Drawing.Size(56, 24);
            this.rdbFirstCaseNO.TabIndex = 1;
            this.rdbFirstCaseNO.TabStop = true;
            this.rdbFirstCaseNO.Text = "否";
            this.rdbFirstCaseNO.CheckedChanged += new System.EventHandler(this.FirstCase_CheckedChanged);
            // 
            // rdbFirstCaseYes
            // 
            this.rdbFirstCaseYes.Location = new System.Drawing.Point(4, 8);
            this.rdbFirstCaseYes.Name = "rdbFirstCaseYes";
            this.rdbFirstCaseYes.Size = new System.Drawing.Size(56, 24);
            this.rdbFirstCaseYes.TabIndex = 0;
            this.rdbFirstCaseYes.Text = "是";
            this.rdbFirstCaseYes.CheckedChanged += new System.EventHandler(this.FirstCase_CheckedChanged);
            // 
            // gpbModelCase
            // 
            this.gpbModelCase.Controls.Add(this.rdbModelCaseNO);
            this.gpbModelCase.Controls.Add(this.rdbModelCaseYes);
            this.gpbModelCase.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbModelCase.Location = new System.Drawing.Point(582, 106);
            this.gpbModelCase.Name = "gpbModelCase";
            this.gpbModelCase.Size = new System.Drawing.Size(116, 37);
            this.gpbModelCase.TabIndex = 22;
            this.gpbModelCase.TabStop = false;
            // 
            // rdbModelCaseNO
            // 
            this.rdbModelCaseNO.Checked = true;
            this.rdbModelCaseNO.Location = new System.Drawing.Point(56, 8);
            this.rdbModelCaseNO.Name = "rdbModelCaseNO";
            this.rdbModelCaseNO.Size = new System.Drawing.Size(56, 24);
            this.rdbModelCaseNO.TabIndex = 1;
            this.rdbModelCaseNO.TabStop = true;
            this.rdbModelCaseNO.Text = "否";
            // 
            // rdbModelCaseYes
            // 
            this.rdbModelCaseYes.Location = new System.Drawing.Point(4, 8);
            this.rdbModelCaseYes.Name = "rdbModelCaseYes";
            this.rdbModelCaseYes.Size = new System.Drawing.Size(56, 24);
            this.rdbModelCaseYes.TabIndex = 0;
            this.rdbModelCaseYes.Text = "是";
            this.rdbModelCaseYes.CheckedChanged += new System.EventHandler(this.ModelCase_CheckedChanged);
            // 
            // gpbBloodTransAction
            // 
            this.gpbBloodTransAction.Controls.Add(this.rdbBloodTransNoAction);
            this.gpbBloodTransAction.Controls.Add(this.rdbBloodTransActionNO);
            this.gpbBloodTransAction.Controls.Add(this.rdbBloodTransActionYes);
            this.gpbBloodTransAction.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbBloodTransAction.Location = new System.Drawing.Point(74, 183);
            this.gpbBloodTransAction.Name = "gpbBloodTransAction";
            this.gpbBloodTransAction.Size = new System.Drawing.Size(180, 39);
            this.gpbBloodTransAction.TabIndex = 30;
            this.gpbBloodTransAction.TabStop = false;
            // 
            // rdbBloodTransNoAction
            // 
            this.rdbBloodTransNoAction.Location = new System.Drawing.Point(94, 13);
            this.rdbBloodTransNoAction.Name = "rdbBloodTransNoAction";
            this.rdbBloodTransNoAction.Size = new System.Drawing.Size(67, 22);
            this.rdbBloodTransNoAction.TabIndex = 2;
            this.rdbBloodTransNoAction.TabStop = true;
            this.rdbBloodTransNoAction.Text = "未输血";
            this.rdbBloodTransNoAction.UseVisualStyleBackColor = false;
            this.rdbBloodTransNoAction.CheckedChanged += new System.EventHandler(this.BloodTransAction_CheckedChanged);
            // 
            // rdbBloodTransActionNO
            // 
            this.rdbBloodTransActionNO.Location = new System.Drawing.Point(48, 11);
            this.rdbBloodTransActionNO.Name = "rdbBloodTransActionNO";
            this.rdbBloodTransActionNO.Size = new System.Drawing.Size(36, 24);
            this.rdbBloodTransActionNO.TabIndex = 1;
            this.rdbBloodTransActionNO.Text = "无";
            this.rdbBloodTransActionNO.CheckedChanged += new System.EventHandler(this.BloodTransAction_CheckedChanged);
            // 
            // rdbBloodTransActionYes
            // 
            this.rdbBloodTransActionYes.Location = new System.Drawing.Point(4, 11);
            this.rdbBloodTransActionYes.Name = "rdbBloodTransActionYes";
            this.rdbBloodTransActionYes.Size = new System.Drawing.Size(43, 22);
            this.rdbBloodTransActionYes.TabIndex = 0;
            this.rdbBloodTransActionYes.Text = "有";
            this.rdbBloodTransActionYes.CheckedChanged += new System.EventHandler(this.BloodTransAction_CheckedChanged);
            // 
            // gpbFollow
            // 
            this.gpbFollow.Controls.Add(this.rdbFollowNO);
            this.gpbFollow.Controls.Add(this.rdbFollowYes);
            this.gpbFollow.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbFollow.Location = new System.Drawing.Point(38, 147);
            this.gpbFollow.Name = "gpbFollow";
            this.gpbFollow.Size = new System.Drawing.Size(116, 36);
            this.gpbFollow.TabIndex = 23;
            this.gpbFollow.TabStop = false;
            // 
            // rdbFollowNO
            // 
            this.rdbFollowNO.Checked = true;
            this.rdbFollowNO.Location = new System.Drawing.Point(56, 8);
            this.rdbFollowNO.Name = "rdbFollowNO";
            this.rdbFollowNO.Size = new System.Drawing.Size(56, 24);
            this.rdbFollowNO.TabIndex = 1;
            this.rdbFollowNO.TabStop = true;
            this.rdbFollowNO.Text = "否";
            this.rdbFollowNO.CheckedChanged += new System.EventHandler(this.Follow_CheckedChanged);
            // 
            // rdbFollowYes
            // 
            this.rdbFollowYes.Location = new System.Drawing.Point(4, 8);
            this.rdbFollowYes.Name = "rdbFollowYes";
            this.rdbFollowYes.Size = new System.Drawing.Size(56, 24);
            this.rdbFollowYes.TabIndex = 0;
            this.rdbFollowYes.Text = "是";
            this.rdbFollowYes.CheckedChanged += new System.EventHandler(this.Follow_CheckedChanged);
            // 
            // gpbBloodRh
            // 
            this.gpbBloodRh.Controls.Add(this.rdbBloodRh_No);
            this.gpbBloodRh.Controls.Add(this.rdbBloodRh_An);
            this.gpbBloodRh.Controls.Add(this.rdbBloodRh_Ka);
            this.gpbBloodRh.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.gpbBloodRh.Location = new System.Drawing.Point(638, 147);
            this.gpbBloodRh.Name = "gpbBloodRh";
            this.gpbBloodRh.Size = new System.Drawing.Size(136, 36);
            this.gpbBloodRh.TabIndex = 28;
            this.gpbBloodRh.TabStop = false;
            // 
            // rdbBloodRh_No
            // 
            this.rdbBloodRh_No.Location = new System.Drawing.Point(78, 13);
            this.rdbBloodRh_No.Name = "rdbBloodRh_No";
            this.rdbBloodRh_No.Size = new System.Drawing.Size(53, 18);
            this.rdbBloodRh_No.TabIndex = 2;
            this.rdbBloodRh_No.Text = "未查";
            this.rdbBloodRh_No.UseVisualStyleBackColor = true;
            // 
            // rdbBloodRh_An
            // 
            this.rdbBloodRh_An.Location = new System.Drawing.Point(40, 8);
            this.rdbBloodRh_An.Name = "rdbBloodRh_An";
            this.rdbBloodRh_An.Size = new System.Drawing.Size(32, 24);
            this.rdbBloodRh_An.TabIndex = 0;
            this.rdbBloodRh_An.Text = "阳";
            this.rdbBloodRh_An.CheckedChanged += new System.EventHandler(this.BloodRh_CheckedChanged);
            // 
            // rdbBloodRh_Ka
            // 
            this.rdbBloodRh_Ka.Location = new System.Drawing.Point(4, 8);
            this.rdbBloodRh_Ka.Name = "rdbBloodRh_Ka";
            this.rdbBloodRh_Ka.Size = new System.Drawing.Size(36, 24);
            this.rdbBloodRh_Ka.TabIndex = 1;
            this.rdbBloodRh_Ka.Text = "阴";
            this.rdbBloodRh_Ka.CheckedChanged += new System.EventHandler(this.BloodRh_CheckedChanged);
            // 
            // lsvOperationEmployee
            // 
            this.lsvOperationEmployee.BackColor = System.Drawing.Color.White;
            this.lsvOperationEmployee.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.lsvOperationEmployee.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
            this.clmEmployeeID,
            this.clmEmployeeName});
            this.lsvOperationEmployee.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lsvOperationEmployee.FullRowSelect = true;
            this.lsvOperationEmployee.GridLines = true;
            this.lsvOperationEmployee.HeaderStyle = System.Windows.Forms.ColumnHeaderStyle.None;
            this.lsvOperationEmployee.Location = new System.Drawing.Point(164, 30);
            this.lsvOperationEmployee.Name = "lsvOperationEmployee";
            this.lsvOperationEmployee.Size = new System.Drawing.Size(160, 106);
            this.lsvOperationEmployee.TabIndex = 30003;
            this.lsvOperationEmployee.UseCompatibleStateImageBehavior = false;
            this.lsvOperationEmployee.View = System.Windows.Forms.View.Details;
            this.lsvOperationEmployee.Visible = false;
            this.lsvOperationEmployee.DoubleClick += new System.EventHandler(this.lsvOperationEmployee_DoubleClick);
            // 
            // clmEmployeeID
            // 
            this.clmEmployeeID.Width = 0;
            // 
            // clmEmployeeName
            // 
            this.clmEmployeeName.Width = 160;
            // 
            // lsvAanaesthesiaMode
            // 
            this.lsvAanaesthesiaMode.BackColor = System.Drawing.Color.White;
            this.lsvAanaesthesiaMode.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.lsvAanaesthesiaMode.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
            this.columnHeader3,
            this.columnHeader4});
            this.lsvAanaesthesiaMode.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lsvAanaesthesiaMode.FullRowSelect = true;
            this.lsvAanaesthesiaMode.GridLines = true;
            this.lsvAanaesthesiaMode.HeaderStyle = System.Windows.Forms.ColumnHeaderStyle.None;
            this.lsvAanaesthesiaMode.Location = new System.Drawing.Point(332, 30);
            this.lsvAanaesthesiaMode.Name = "lsvAanaesthesiaMode";
            this.lsvAanaesthesiaMode.Size = new System.Drawing.Size(176, 106);
            this.lsvAanaesthesiaMode.TabIndex = 30004;
            this.lsvAanaesthesiaMode.UseCompatibleStateImageBehavior = false;
            this.lsvAanaesthesiaMode.View = System.Windows.Forms.View.Details;
            this.lsvAanaesthesiaMode.Visible = false;
            this.lsvAanaesthesiaMode.DoubleClick += new System.EventHandler(this.lsvAanaesthesiaMode_DoubleClick);
            // 
            // columnHeader4
            // 
            this.columnHeader4.Width = 116;
            // 
            // m_cmuRichTextBoxMenu
            // 
            this.m_cmuRichTextBoxMenu.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.mniDoubleStrikeOutDelete});
            // 
            // mniDoubleStrikeOutDelete
            // 
            this.mniDoubleStrikeOutDelete.Index = 0;
            this.mniDoubleStrikeOutDelete.Text = "双划线删除";
            this.mniDoubleStrikeOutDelete.Visible = false;
            this.mniDoubleStrikeOutDelete.Click += new System.EventHandler(this.mniDoubleStrikeOutDelete_Click);
            // 
            // lblInHospitalDays
            // 
            this.lblInHospitalDays.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblInHospitalDays.Location = new System.Drawing.Point(341, 63);
            this.lblInHospitalDays.Name = "lblInHospitalDays";
            this.lblInHospitalDays.Size = new System.Drawing.Size(40, 20);
            this.lblInHospitalDays.TabIndex = 90;
            // 
            // lblInSickRoom
            // 
            this.lblInSickRoom.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblInSickRoom.Location = new System.Drawing.Point(268, 5);
            this.lblInSickRoom.Name = "lblInSickRoom";
            this.lblInSickRoom.Size = new System.Drawing.Size(158, 20);
            this.lblInSickRoom.TabIndex = 80;
            // 
            // lblOutSickRoom
            // 
            this.lblOutSickRoom.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOutSickRoom.Location = new System.Drawing.Point(268, 33);
            this.lblOutSickRoom.Name = "lblOutSickRoom";
            this.lblOutSickRoom.Size = new System.Drawing.Size(158, 20);
            this.lblOutSickRoom.TabIndex = 110;
            // 
            // lblOutHospitalSetion
            // 
            this.lblOutHospitalSetion.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblOutHospitalSetion.Location = new System.Drawing.Point(66, 33);
            this.lblOutHospitalSetion.Name = "lblOutHospitalSetion";
            this.lblOutHospitalSetion.Size = new System.Drawing.Size(158, 20);
            this.lblOutHospitalSetion.TabIndex = 100;
            // 
            // lblInHosptialSetion
            // 
            this.lblInHosptialSetion.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblInHosptialSetion.Location = new System.Drawing.Point(66, 5);
            this.lblInHosptialSetion.Name = "lblInHosptialSetion";
            this.lblInHosptialSetion.Size = new System.Drawing.Size(158, 20);
            this.lblInHosptialSetion.TabIndex = 30005;
            // 
            // lblTimes
            // 
            this.lblTimes.AccessibleDescription = "第几次住院";
            this.lblTimes.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblTimes.ForeColor = System.Drawing.Color.Black;
            this.lblTimes.Location = new System.Drawing.Point(225, 8);
            this.lblTimes.Name = "lblTimes";
            this.lblTimes.Size = new System.Drawing.Size(24, 20);
            this.lblTimes.TabIndex = 30006;
            this.lblTimes.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // m_cmdDoctor
            // 
            this.m_cmdDoctor.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdDoctor.DefaultScheme = true;
            this.m_cmdDoctor.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdDoctor.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdDoctor.Hint = "";
            this.m_cmdDoctor.Location = new System.Drawing.Point(3, 220);
            this.m_cmdDoctor.Name = "m_cmdDoctor";
            this.m_cmdDoctor.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdDoctor.Size = new System.Drawing.Size(119, 28);
            this.m_cmdDoctor.TabIndex = 4;
            this.m_cmdDoctor.Text = "*门(急)诊医生:";
            // 
            // m_cmdDirectorDt
            // 
            this.m_cmdDirectorDt.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdDirectorDt.DefaultScheme = true;
            this.m_cmdDirectorDt.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdDirectorDt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdDirectorDt.ForeColor = System.Drawing.Color.Black;
            this.m_cmdDirectorDt.Hint = "";
            this.m_cmdDirectorDt.Location = new System.Drawing.Point(8, 409);
            this.m_cmdDirectorDt.Name = "m_cmdDirectorDt";
            this.m_cmdDirectorDt.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdDirectorDt.Size = new System.Drawing.Size(84, 24);
            this.m_cmdDirectorDt.TabIndex = 14;
            this.m_cmdDirectorDt.Text = "*科主任:";
            // 
            // m_cmdQCNurse
            // 
            this.m_cmdQCNurse.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdQCNurse.DefaultScheme = true;
            this.m_cmdQCNurse.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdQCNurse.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdQCNurse.Hint = "";
            this.m_cmdQCNurse.Location = new System.Drawing.Point(405, 464);
            this.m_cmdQCNurse.Name = "m_cmdQCNurse";
            this.m_cmdQCNurse.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdQCNurse.Size = new System.Drawing.Size(79, 24);
            this.m_cmdQCNurse.TabIndex = 24;
            this.m_cmdQCNurse.Text = "*质控护士:";
            // 
            // m_cmdIntern
            // 
            this.m_cmdIntern.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdIntern.DefaultScheme = true;
            this.m_cmdIntern.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdIntern.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdIntern.Hint = "";
            this.m_cmdIntern.Location = new System.Drawing.Point(392, 438);
            this.m_cmdIntern.Name = "m_cmdIntern";
            this.m_cmdIntern.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdIntern.Size = new System.Drawing.Size(92, 24);
            this.m_cmdIntern.TabIndex = 19;
            this.m_cmdIntern.Text = "实习医师:";
            // 
            // m_cmdDt
            // 
            this.m_cmdDt.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdDt.DefaultScheme = true;
            this.m_cmdDt.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdDt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdDt.Hint = "";
            this.m_cmdDt.Location = new System.Drawing.Point(392, 409);
            this.m_cmdDt.Name = "m_cmdDt";
            this.m_cmdDt.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdDt.Size = new System.Drawing.Size(92, 24);
            this.m_cmdDt.TabIndex = 18;
            this.m_cmdDt.Text = "*主治医师:";
            // 
            // m_cmdQCDt
            // 
            this.m_cmdQCDt.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdQCDt.DefaultScheme = true;
            this.m_cmdQCDt.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdQCDt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdQCDt.ForeColor = System.Drawing.Color.Black;
            this.m_cmdQCDt.Hint = "";
            this.m_cmdQCDt.Location = new System.Drawing.Point(240, 466);
            this.m_cmdQCDt.Name = "m_cmdQCDt";
            this.m_cmdQCDt.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdQCDt.Size = new System.Drawing.Size(79, 24);
            this.m_cmdQCDt.TabIndex = 23;
            this.m_cmdQCDt.Text = "*质控医师:";
            // 
            // m_cmdGraduateStudentIntern
            // 
            this.m_cmdGraduateStudentIntern.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdGraduateStudentIntern.DefaultScheme = true;
            this.m_cmdGraduateStudentIntern.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdGraduateStudentIntern.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdGraduateStudentIntern.ForeColor = System.Drawing.Color.Black;
            this.m_cmdGraduateStudentIntern.Hint = "";
            this.m_cmdGraduateStudentIntern.Location = new System.Drawing.Point(175, 438);
            this.m_cmdGraduateStudentIntern.Name = "m_cmdGraduateStudentIntern";
            this.m_cmdGraduateStudentIntern.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdGraduateStudentIntern.Size = new System.Drawing.Size(132, 24);
            this.m_cmdGraduateStudentIntern.TabIndex = 17;
            this.m_cmdGraduateStudentIntern.Text = "研究生实习医师:";
            // 
            // m_cmdSubDirectorDt
            // 
            this.m_cmdSubDirectorDt.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdSubDirectorDt.DefaultScheme = true;
            this.m_cmdSubDirectorDt.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdSubDirectorDt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdSubDirectorDt.ForeColor = System.Drawing.Color.Black;
            this.m_cmdSubDirectorDt.Hint = "";
            this.m_cmdSubDirectorDt.Location = new System.Drawing.Point(175, 409);
            this.m_cmdSubDirectorDt.Name = "m_cmdSubDirectorDt";
            this.m_cmdSubDirectorDt.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdSubDirectorDt.Size = new System.Drawing.Size(132, 24);
            this.m_cmdSubDirectorDt.TabIndex = 16;
            this.m_cmdSubDirectorDt.Text = "*主(副主)任医师:";
            // 
            // m_cmdAttendInForAdvancesStudyDt
            // 
            this.m_cmdAttendInForAdvancesStudyDt.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdAttendInForAdvancesStudyDt.DefaultScheme = true;
            this.m_cmdAttendInForAdvancesStudyDt.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdAttendInForAdvancesStudyDt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdAttendInForAdvancesStudyDt.ForeColor = System.Drawing.Color.Black;
            this.m_cmdAttendInForAdvancesStudyDt.Hint = "";
            this.m_cmdAttendInForAdvancesStudyDt.Location = new System.Drawing.Point(8, 438);
            this.m_cmdAttendInForAdvancesStudyDt.Name = "m_cmdAttendInForAdvancesStudyDt";
            this.m_cmdAttendInForAdvancesStudyDt.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdAttendInForAdvancesStudyDt.Size = new System.Drawing.Size(84, 24);
            this.m_cmdAttendInForAdvancesStudyDt.TabIndex = 15;
            this.m_cmdAttendInForAdvancesStudyDt.Text = "进修医师:";
            // 
            // m_cmdInHospitalDt
            // 
            this.m_cmdInHospitalDt.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdInHospitalDt.DefaultScheme = true;
            this.m_cmdInHospitalDt.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdInHospitalDt.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdInHospitalDt.Hint = "";
            this.m_cmdInHospitalDt.Location = new System.Drawing.Point(564, 409);
            this.m_cmdInHospitalDt.Name = "m_cmdInHospitalDt";
            this.m_cmdInHospitalDt.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdInHospitalDt.Size = new System.Drawing.Size(92, 24);
            this.m_cmdInHospitalDt.TabIndex = 20;
            this.m_cmdInHospitalDt.Text = "*住院医师:";
            // 
            // m_cmdCoder
            // 
            this.m_cmdCoder.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdCoder.DefaultScheme = true;
            this.m_cmdCoder.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdCoder.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdCoder.Hint = "";
            this.m_cmdCoder.Location = new System.Drawing.Point(564, 438);
            this.m_cmdCoder.Name = "m_cmdCoder";
            this.m_cmdCoder.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdCoder.Size = new System.Drawing.Size(92, 24);
            this.m_cmdCoder.TabIndex = 21;
            this.m_cmdCoder.Text = "编 码 员:";
            // 
            // m_cmdFillPrint
            // 
            this.m_cmdFillPrint.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdFillPrint.DefaultScheme = true;
            this.m_cmdFillPrint.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdFillPrint.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdFillPrint.Hint = "";
            this.m_cmdFillPrint.Location = new System.Drawing.Point(559, 30);
            this.m_cmdFillPrint.Name = "m_cmdFillPrint";
            this.m_cmdFillPrint.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdFillPrint.Size = new System.Drawing.Size(64, 28);
            this.m_cmdFillPrint.TabIndex = 1000000000;
            this.m_cmdFillPrint.Text = "套 打";
            this.m_cmdFillPrint.Visible = false;
            this.m_cmdFillPrint.Click += new System.EventHandler(this.m_cmdFillPrint_Click);
            // 
            // m_grpDrugAllergy
            // 
            this.m_grpDrugAllergy.Controls.Add(this.txtHbsAg);
            this.m_grpDrugAllergy.Controls.Add(this.lblHIV_AbTitle);
            this.m_grpDrugAllergy.Controls.Add(this.lblHbsAgTitle);
            this.m_grpDrugAllergy.Controls.Add(this.txtHIV_Ab);
            this.m_grpDrugAllergy.Controls.Add(this.txtHCV_Ab);
            this.m_grpDrugAllergy.Controls.Add(this.lblHCVAbTitle);
            this.m_grpDrugAllergy.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_grpDrugAllergy.Location = new System.Drawing.Point(454, 318);
            this.m_grpDrugAllergy.Name = "m_grpDrugAllergy";
            this.m_grpDrugAllergy.Size = new System.Drawing.Size(264, 40);
            this.m_grpDrugAllergy.TabIndex = 10;
            this.m_grpDrugAllergy.TabStop = false;
            this.m_grpDrugAllergy.Text = "0、未做 1、阴性 2、阳性";
            // 
            // txtHbsAg
            // 
            this.txtHbsAg.AccessibleDescription = "HbsAg";
            this.txtHbsAg.BackColor = System.Drawing.Color.White;
            this.txtHbsAg.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtHbsAg.ForeColor = System.Drawing.Color.Black;
            this.txtHbsAg.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtHbsAg.Location = new System.Drawing.Point(44, 16);
            this.txtHbsAg.m_BlnIgnoreUserInfo = false;
            this.txtHbsAg.m_BlnPartControl = false;
            this.txtHbsAg.m_BlnReadOnly = false;
            this.txtHbsAg.m_BlnUnderLineDST = false;
            this.txtHbsAg.m_ClrDST = System.Drawing.Color.Red;
            this.txtHbsAg.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtHbsAg.m_IntCanModifyTime = 6;
            this.txtHbsAg.m_IntPartControlLength = 0;
            this.txtHbsAg.m_IntPartControlStartIndex = 0;
            this.txtHbsAg.m_StrUserID = "";
            this.txtHbsAg.m_StrUserName = "";
            this.txtHbsAg.MaxLength = 1;
            this.txtHbsAg.Multiline = false;
            this.txtHbsAg.Name = "txtHbsAg";
            this.txtHbsAg.Size = new System.Drawing.Size(40, 20);
            this.txtHbsAg.TabIndex = 1;
            this.txtHbsAg.Text = "";
            this.txtHbsAg.TextChanged += new System.EventHandler(this.txtHbsAg_TextChanged);
            // 
            // lblHIV_AbTitle
            // 
            this.lblHIV_AbTitle.AutoSize = true;
            this.lblHIV_AbTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblHIV_AbTitle.Location = new System.Drawing.Point(172, 16);
            this.lblHIV_AbTitle.Name = "lblHIV_AbTitle";
            this.lblHIV_AbTitle.Size = new System.Drawing.Size(49, 14);
            this.lblHIV_AbTitle.TabIndex = 4;
            this.lblHIV_AbTitle.Text = "HIV-Ab";
            // 
            // lblHbsAgTitle
            // 
            this.lblHbsAgTitle.AutoSize = true;
            this.lblHbsAgTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblHbsAgTitle.Location = new System.Drawing.Point(4, 16);
            this.lblHbsAgTitle.Name = "lblHbsAgTitle";
            this.lblHbsAgTitle.Size = new System.Drawing.Size(42, 14);
            this.lblHbsAgTitle.TabIndex = 0;
            this.lblHbsAgTitle.Text = "HbsAg";
            // 
            // txtHIV_Ab
            // 
            this.txtHIV_Ab.AccessibleDescription = "HIV_Ab";
            this.txtHIV_Ab.BackColor = System.Drawing.Color.White;
            this.txtHIV_Ab.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtHIV_Ab.ForeColor = System.Drawing.Color.Black;
            this.txtHIV_Ab.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtHIV_Ab.Location = new System.Drawing.Point(220, 16);
            this.txtHIV_Ab.m_BlnIgnoreUserInfo = false;
            this.txtHIV_Ab.m_BlnPartControl = false;
            this.txtHIV_Ab.m_BlnReadOnly = false;
            this.txtHIV_Ab.m_BlnUnderLineDST = false;
            this.txtHIV_Ab.m_ClrDST = System.Drawing.Color.Red;
            this.txtHIV_Ab.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtHIV_Ab.m_IntCanModifyTime = 6;
            this.txtHIV_Ab.m_IntPartControlLength = 0;
            this.txtHIV_Ab.m_IntPartControlStartIndex = 0;
            this.txtHIV_Ab.m_StrUserID = "";
            this.txtHIV_Ab.m_StrUserName = "";
            this.txtHIV_Ab.MaxLength = 1;
            this.txtHIV_Ab.Multiline = false;
            this.txtHIV_Ab.Name = "txtHIV_Ab";
            this.txtHIV_Ab.Size = new System.Drawing.Size(40, 20);
            this.txtHIV_Ab.TabIndex = 5;
            this.txtHIV_Ab.Text = "";
            this.txtHIV_Ab.TextChanged += new System.EventHandler(this.txtHIV_Ab_TextChanged);
            // 
            // txtHCV_Ab
            // 
            this.txtHCV_Ab.AccessibleDescription = "HCV_Ab";
            this.txtHCV_Ab.BackColor = System.Drawing.Color.White;
            this.txtHCV_Ab.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtHCV_Ab.ForeColor = System.Drawing.Color.Black;
            this.txtHCV_Ab.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtHCV_Ab.Location = new System.Drawing.Point(132, 16);
            this.txtHCV_Ab.m_BlnIgnoreUserInfo = false;
            this.txtHCV_Ab.m_BlnPartControl = false;
            this.txtHCV_Ab.m_BlnReadOnly = false;
            this.txtHCV_Ab.m_BlnUnderLineDST = false;
            this.txtHCV_Ab.m_ClrDST = System.Drawing.Color.Red;
            this.txtHCV_Ab.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtHCV_Ab.m_IntCanModifyTime = 6;
            this.txtHCV_Ab.m_IntPartControlLength = 0;
            this.txtHCV_Ab.m_IntPartControlStartIndex = 0;
            this.txtHCV_Ab.m_StrUserID = "";
            this.txtHCV_Ab.m_StrUserName = "";
            this.txtHCV_Ab.MaxLength = 1;
            this.txtHCV_Ab.Multiline = false;
            this.txtHCV_Ab.Name = "txtHCV_Ab";
            this.txtHCV_Ab.Size = new System.Drawing.Size(40, 20);
            this.txtHCV_Ab.TabIndex = 3;
            this.txtHCV_Ab.Text = "";
            this.txtHCV_Ab.TextChanged += new System.EventHandler(this.txtHCV_Ab_TextChanged);
            // 
            // lblHCVAbTitle
            // 
            this.lblHCVAbTitle.AutoSize = true;
            this.lblHCVAbTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblHCVAbTitle.Location = new System.Drawing.Point(84, 16);
            this.lblHCVAbTitle.Name = "lblHCVAbTitle";
            this.lblHCVAbTitle.Size = new System.Drawing.Size(49, 14);
            this.lblHCVAbTitle.TabIndex = 2;
            this.lblHCVAbTitle.Text = "HCV-Ab";
            // 
            // m_grpAccordWithDiagnosisTitle
            // 
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.txtAccordClinicWithPathology);
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.txtAccordRadiateWithPathology);
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.txtAccordBeforeOperationWithAfter);
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.txtAccordInWithOut);
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.txtAccordWithOutHospital);
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.lblAccordWithOutHospital);
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.lblAccordInWithOutTitle);
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.lblAccordBeforeOperationWithAfterTitle);
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.lblAccordClinicWithPathologyTitle);
            this.m_grpAccordWithDiagnosisTitle.Controls.Add(this.lblAccordRadiateWithPathologyTitle);
            this.m_grpAccordWithDiagnosisTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_grpAccordWithDiagnosisTitle.ForeColor = System.Drawing.Color.Black;
            this.m_grpAccordWithDiagnosisTitle.Location = new System.Drawing.Point(8, 361);
            this.m_grpAccordWithDiagnosisTitle.Name = "m_grpAccordWithDiagnosisTitle";
            this.m_grpAccordWithDiagnosisTitle.Size = new System.Drawing.Size(608, 43);
            this.m_grpAccordWithDiagnosisTitle.TabIndex = 11;
            this.m_grpAccordWithDiagnosisTitle.TabStop = false;
            this.m_grpAccordWithDiagnosisTitle.Text = "诊断符合情况:0.未做 1.符合 2.不符合 3.不肯定";
            // 
            // txtAccordClinicWithPathology
            // 
            this.txtAccordClinicWithPathology.BackColor = System.Drawing.Color.White;
            this.txtAccordClinicWithPathology.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtAccordClinicWithPathology.ForeColor = System.Drawing.Color.White;
            this.txtAccordClinicWithPathology.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtAccordClinicWithPathology.Location = new System.Drawing.Point(448, 19);
            this.txtAccordClinicWithPathology.m_BlnIgnoreUserInfo = false;
            this.txtAccordClinicWithPathology.m_BlnPartControl = false;
            this.txtAccordClinicWithPathology.m_BlnReadOnly = false;
            this.txtAccordClinicWithPathology.m_BlnUnderLineDST = false;
            this.txtAccordClinicWithPathology.m_ClrDST = System.Drawing.Color.Red;
            this.txtAccordClinicWithPathology.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtAccordClinicWithPathology.m_IntCanModifyTime = 6;
            this.txtAccordClinicWithPathology.m_IntPartControlLength = 0;
            this.txtAccordClinicWithPathology.m_IntPartControlStartIndex = 0;
            this.txtAccordClinicWithPathology.m_StrUserID = "";
            this.txtAccordClinicWithPathology.m_StrUserName = "";
            this.txtAccordClinicWithPathology.MaxLength = 1;
            this.txtAccordClinicWithPathology.Multiline = false;
            this.txtAccordClinicWithPathology.Name = "txtAccordClinicWithPathology";
            this.txtAccordClinicWithPathology.Size = new System.Drawing.Size(28, 20);
            this.txtAccordClinicWithPathology.TabIndex = 7;
            this.txtAccordClinicWithPathology.Text = "";
            // 
            // txtAccordRadiateWithPathology
            // 
            this.txtAccordRadiateWithPathology.AccessibleDescription = "放射与病理";
            this.txtAccordRadiateWithPathology.BackColor = System.Drawing.Color.White;
            this.txtAccordRadiateWithPathology.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.txtAccordRadiateWithPathology.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtAccordRadiateWithPathology.ForeColor = System.Drawing.Color.Black;
            this.txtAccordRadiateWithPathology.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtAccordRadiateWithPathology.Location = new System.Drawing.Point(572, 19);
            this.txtAccordRadiateWithPathology.m_BlnIgnoreUserInfo = false;
            this.txtAccordRadiateWithPathology.m_BlnPartControl = false;
            this.txtAccordRadiateWithPathology.m_BlnReadOnly = false;
            this.txtAccordRadiateWithPathology.m_BlnUnderLineDST = false;
            this.txtAccordRadiateWithPathology.m_ClrDST = System.Drawing.Color.Red;
            this.txtAccordRadiateWithPathology.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtAccordRadiateWithPathology.m_IntCanModifyTime = 6;
            this.txtAccordRadiateWithPathology.m_IntPartControlLength = 0;
            this.txtAccordRadiateWithPathology.m_IntPartControlStartIndex = 0;
            this.txtAccordRadiateWithPathology.m_StrUserID = "";
            this.txtAccordRadiateWithPathology.m_StrUserName = "";
            this.txtAccordRadiateWithPathology.MaxLength = 1;
            this.txtAccordRadiateWithPathology.Multiline = false;
            this.txtAccordRadiateWithPathology.Name = "txtAccordRadiateWithPathology";
            this.txtAccordRadiateWithPathology.Size = new System.Drawing.Size(28, 20);
            this.txtAccordRadiateWithPathology.TabIndex = 9;
            this.txtAccordRadiateWithPathology.Text = "";
            // 
            // txtAccordBeforeOperationWithAfter
            // 
            this.txtAccordBeforeOperationWithAfter.AccessibleDescription = "术前与术后";
            this.txtAccordBeforeOperationWithAfter.BackColor = System.Drawing.Color.White;
            this.txtAccordBeforeOperationWithAfter.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtAccordBeforeOperationWithAfter.ForeColor = System.Drawing.Color.Black;
            this.txtAccordBeforeOperationWithAfter.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtAccordBeforeOperationWithAfter.Location = new System.Drawing.Point(328, 19);
            this.txtAccordBeforeOperationWithAfter.m_BlnIgnoreUserInfo = false;
            this.txtAccordBeforeOperationWithAfter.m_BlnPartControl = false;
            this.txtAccordBeforeOperationWithAfter.m_BlnReadOnly = false;
            this.txtAccordBeforeOperationWithAfter.m_BlnUnderLineDST = false;
            this.txtAccordBeforeOperationWithAfter.m_ClrDST = System.Drawing.Color.Red;
            this.txtAccordBeforeOperationWithAfter.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtAccordBeforeOperationWithAfter.m_IntCanModifyTime = 6;
            this.txtAccordBeforeOperationWithAfter.m_IntPartControlLength = 0;
            this.txtAccordBeforeOperationWithAfter.m_IntPartControlStartIndex = 0;
            this.txtAccordBeforeOperationWithAfter.m_StrUserID = "";
            this.txtAccordBeforeOperationWithAfter.m_StrUserName = "";
            this.txtAccordBeforeOperationWithAfter.MaxLength = 1;
            this.txtAccordBeforeOperationWithAfter.Multiline = false;
            this.txtAccordBeforeOperationWithAfter.Name = "txtAccordBeforeOperationWithAfter";
            this.txtAccordBeforeOperationWithAfter.Size = new System.Drawing.Size(28, 20);
            this.txtAccordBeforeOperationWithAfter.TabIndex = 5;
            this.txtAccordBeforeOperationWithAfter.Text = "";
            // 
            // txtAccordInWithOut
            // 
            this.txtAccordInWithOut.AccessibleDescription = "入院与出院";
            this.txtAccordInWithOut.BackColor = System.Drawing.Color.White;
            this.txtAccordInWithOut.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.txtAccordInWithOut.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtAccordInWithOut.ForeColor = System.Drawing.Color.Black;
            this.txtAccordInWithOut.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtAccordInWithOut.Location = new System.Drawing.Point(204, 19);
            this.txtAccordInWithOut.m_BlnIgnoreUserInfo = false;
            this.txtAccordInWithOut.m_BlnPartControl = false;
            this.txtAccordInWithOut.m_BlnReadOnly = false;
            this.txtAccordInWithOut.m_BlnUnderLineDST = false;
            this.txtAccordInWithOut.m_ClrDST = System.Drawing.Color.Red;
            this.txtAccordInWithOut.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtAccordInWithOut.m_IntCanModifyTime = 6;
            this.txtAccordInWithOut.m_IntPartControlLength = 0;
            this.txtAccordInWithOut.m_IntPartControlStartIndex = 0;
            this.txtAccordInWithOut.m_StrUserID = "";
            this.txtAccordInWithOut.m_StrUserName = "";
            this.txtAccordInWithOut.MaxLength = 1;
            this.txtAccordInWithOut.Multiline = false;
            this.txtAccordInWithOut.Name = "txtAccordInWithOut";
            this.txtAccordInWithOut.Size = new System.Drawing.Size(28, 20);
            this.txtAccordInWithOut.TabIndex = 3;
            this.txtAccordInWithOut.Text = "";
            // 
            // txtAccordWithOutHospital
            // 
            this.txtAccordWithOutHospital.AccessibleDescription = "门诊与出院";
            this.txtAccordWithOutHospital.BackColor = System.Drawing.Color.White;
            this.txtAccordWithOutHospital.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.txtAccordWithOutHospital.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.txtAccordWithOutHospital.ForeColor = System.Drawing.Color.Black;
            this.txtAccordWithOutHospital.ImeMode = System.Windows.Forms.ImeMode.On;
            this.txtAccordWithOutHospital.Location = new System.Drawing.Point(84, 19);
            this.txtAccordWithOutHospital.m_BlnIgnoreUserInfo = false;
            this.txtAccordWithOutHospital.m_BlnPartControl = false;
            this.txtAccordWithOutHospital.m_BlnReadOnly = false;
            this.txtAccordWithOutHospital.m_BlnUnderLineDST = false;
            this.txtAccordWithOutHospital.m_ClrDST = System.Drawing.Color.Red;
            this.txtAccordWithOutHospital.m_ClrOldPartInsertText = System.Drawing.Color.Black;
            this.txtAccordWithOutHospital.m_IntCanModifyTime = 6;
            this.txtAccordWithOutHospital.m_IntPartControlLength = 0;
            this.txtAccordWithOutHospital.m_IntPartControlStartIndex = 0;
            this.txtAccordWithOutHospital.m_StrUserID = "";
            this.txtAccordWithOutHospital.m_StrUserName = "";
            this.txtAccordWithOutHospital.MaxLength = 1;
            this.txtAccordWithOutHospital.Multiline = false;
            this.txtAccordWithOutHospital.Name = "txtAccordWithOutHospital";
            this.txtAccordWithOutHospital.Size = new System.Drawing.Size(28, 20);
            this.txtAccordWithOutHospital.TabIndex = 1;
            this.txtAccordWithOutHospital.Text = "";
            // 
            // lblAccordWithOutHospital
            // 
            this.lblAccordWithOutHospital.AutoSize = true;
            this.lblAccordWithOutHospital.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblAccordWithOutHospital.Location = new System.Drawing.Point(8, 23);
            this.lblAccordWithOutHospital.Name = "lblAccordWithOutHospital";
            this.lblAccordWithOutHospital.Size = new System.Drawing.Size(77, 14);
            this.lblAccordWithOutHospital.TabIndex = 0;
            this.lblAccordWithOutHospital.Text = "门诊与出院";
            // 
            // lblAccordInWithOutTitle
            // 
            this.lblAccordInWithOutTitle.AutoSize = true;
            this.lblAccordInWithOutTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblAccordInWithOutTitle.Location = new System.Drawing.Point(128, 23);
            this.lblAccordInWithOutTitle.Name = "lblAccordInWithOutTitle";
            this.lblAccordInWithOutTitle.Size = new System.Drawing.Size(77, 14);
            this.lblAccordInWithOutTitle.TabIndex = 2;
            this.lblAccordInWithOutTitle.Text = "入院与出院";
            // 
            // lblAccordBeforeOperationWithAfterTitle
            // 
            this.lblAccordBeforeOperationWithAfterTitle.AutoSize = true;
            this.lblAccordBeforeOperationWithAfterTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblAccordBeforeOperationWithAfterTitle.Location = new System.Drawing.Point(248, 23);
            this.lblAccordBeforeOperationWithAfterTitle.Name = "lblAccordBeforeOperationWithAfterTitle";
            this.lblAccordBeforeOperationWithAfterTitle.Size = new System.Drawing.Size(77, 14);
            this.lblAccordBeforeOperationWithAfterTitle.TabIndex = 4;
            this.lblAccordBeforeOperationWithAfterTitle.Text = "术前与术后";
            // 
            // lblAccordClinicWithPathologyTitle
            // 
            this.lblAccordClinicWithPathologyTitle.AutoSize = true;
            this.lblAccordClinicWithPathologyTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblAccordClinicWithPathologyTitle.Location = new System.Drawing.Point(372, 23);
            this.lblAccordClinicWithPathologyTitle.Name = "lblAccordClinicWithPathologyTitle";
            this.lblAccordClinicWithPathologyTitle.Size = new System.Drawing.Size(77, 14);
            this.lblAccordClinicWithPathologyTitle.TabIndex = 6;
            this.lblAccordClinicWithPathologyTitle.Text = "临床与病理";
            // 
            // lblAccordRadiateWithPathologyTitle
            // 
            this.lblAccordRadiateWithPathologyTitle.AutoSize = true;
            this.lblAccordRadiateWithPathologyTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblAccordRadiateWithPathologyTitle.Location = new System.Drawing.Point(492, 23);
            this.lblAccordRadiateWithPathologyTitle.Name = "lblAccordRadiateWithPathologyTitle";
            this.lblAccordRadiateWithPathologyTitle.Size = new System.Drawing.Size(77, 14);
            this.lblAccordRadiateWithPathologyTitle.TabIndex = 8;
            this.lblAccordRadiateWithPathologyTitle.Text = "放射与病理";
            // 
            // imageList1
            // 
            this.imageList1.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imageList1.ImageStream")));
            this.imageList1.TransparentColor = System.Drawing.Color.Transparent;
            this.imageList1.Images.SetKeyName(0, "");
            this.imageList1.Images.SetKeyName(1, "");
            this.imageList1.Images.SetKeyName(2, "");
            this.imageList1.Images.SetKeyName(3, "");
            this.imageList1.Images.SetKeyName(4, "");
            this.imageList1.Images.SetKeyName(5, "");
            this.imageList1.Images.SetKeyName(6, "");
            this.imageList1.Images.SetKeyName(7, "");
            this.imageList1.Images.SetKeyName(8, "");
            // 
            // panel2
            // 
            this.panel2.BackColor = System.Drawing.SystemColors.Control;
            this.panel2.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.panel2.Controls.Add(this.m_lsvTransDept);
            this.panel2.Controls.Add(this.dgDiagnosis1);
            this.panel2.Controls.Add(this.label4);
            this.panel2.Controls.Add(this.lblOutHospitalSetion);
            this.panel2.Controls.Add(this.lblInHosptialSetion);
            this.panel2.Controls.Add(this.txtDoctor);
            this.panel2.Controls.Add(this.lblInHospitalDays);
            this.panel2.Controls.Add(this.txtDiagnosisICD10);
            this.panel2.Controls.Add(this.lblInHospitalSetionTitle);
            this.panel2.Controls.Add(this.lblInSickRoomTitle);
            this.panel2.Controls.Add(this.lblInSickRoom);
            this.panel2.Controls.Add(this.lblInHospitalDaysTitle);
            this.panel2.Controls.Add(this.lblDays);
            this.panel2.Controls.Add(this.dtgChangeDept2);
            this.panel2.Controls.Add(this.lblOutHospitalSetionTitle);
            this.panel2.Controls.Add(this.m_lblOutHospitalDate);
            this.panel2.Controls.Add(this.lblOutSickRoomTitle);
            this.panel2.Controls.Add(this.lblOutSickRoom);
            this.panel2.Controls.Add(this.lblOutHospitalDateTitle);
            this.panel2.Controls.Add(this.lblDiagnosisTitle);
            this.panel2.Controls.Add(this.txtDiagnosis);
            this.panel2.Controls.Add(this.m_cmdDoctor);
            this.panel2.Controls.Add(this.lblConfirmDiagnosisDateTitle);
            this.panel2.Controls.Add(this.dtpConfirmDiagnosisDate);
            this.panel2.Controls.Add(this.lblConditionWhenInTitle);
            this.panel2.Controls.Add(this.gpbCondictionWhenIn);
            this.panel2.Location = new System.Drawing.Point(10, 202);
            this.panel2.Name = "panel2";
            this.panel2.Size = new System.Drawing.Size(751, 290);
            this.panel2.TabIndex = 1;
            // 
            // m_lsvTransDept
            // 
            this.m_lsvTransDept.AccessibleDescription = "转科情况";
            this.m_lsvTransDept.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.m_lsvTransDept.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
            this.m_clmFromDept,
            this.m_clmTransDate,
            this.m_clmToDept});
            this.m_lsvTransDept.GridLines = true;
            this.m_lsvTransDept.Location = new System.Drawing.Point(422, 3);
            this.m_lsvTransDept.Name = "m_lsvTransDept";
            this.m_lsvTransDept.Size = new System.Drawing.Size(320, 83);
            this.m_lsvTransDept.TabIndex = 30014;
            this.m_lsvTransDept.UseCompatibleStateImageBehavior = false;
            this.m_lsvTransDept.View = System.Windows.Forms.View.Details;
            // 
            // m_clmFromDept
            // 
            this.m_clmFromDept.Text = "转出科室";
            this.m_clmFromDept.Width = 115;
            // 
            // m_clmTransDate
            // 
            this.m_clmTransDate.Text = "转科日期";
            this.m_clmTransDate.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
            this.m_clmTransDate.Width = 90;
            // 
            // m_clmToDept
            // 
            this.m_clmToDept.Text = "转入科室";
            this.m_clmToDept.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
            this.m_clmToDept.Width = 115;
            // 
            // dgDiagnosis1
            // 
            this.dgDiagnosis1.AllowSorting = false;
            this.dgDiagnosis1.BackgroundColor = System.Drawing.Color.White;
            this.dgDiagnosis1.CaptionBackColor = System.Drawing.SystemColors.AppWorkspace;
            this.dgDiagnosis1.CaptionForeColor = System.Drawing.Color.Black;
            this.dgDiagnosis1.CaptionText = "*入院诊断";
            this.dgDiagnosis1.DataMember = "";
            this.dgDiagnosis1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dgDiagnosis1.ForeColor = System.Drawing.Color.Black;
            this.dgDiagnosis1.HeaderForeColor = System.Drawing.Color.White;
            this.dgDiagnosis1.Location = new System.Drawing.Point(5, 119);
            this.dgDiagnosis1.Name = "dgDiagnosis1";
            this.dgDiagnosis1.ParentRowsForeColor = System.Drawing.Color.White;
            this.dgDiagnosis1.RowHeaderWidth = 40;
            this.dgDiagnosis1.Size = new System.Drawing.Size(737, 95);
            this.dgDiagnosis1.TabIndex = 30018;
            this.dgDiagnosis1.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle2});
            this.dgDiagnosis1.Enter += new System.EventHandler(this.QueryControls_Enter);
            this.dgDiagnosis1.Leave += new System.EventHandler(this.QueryControls_Leave);
            // 
            // dataGridTableStyle2
            // 
            this.dataGridTableStyle2.DataGrid = this.dgDiagnosis1;
            this.dataGridTableStyle2.GridColumnStyles.AddRange(new System.Windows.Forms.DataGridColumnStyle[] {
            this.m_dgtbInDia,
            this.m_dgtbInDiaICD});
            this.dataGridTableStyle2.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGridTableStyle2.MappingName = "InDiagnosis";
            // 
            // m_dgtbInDia
            // 
            this.m_dgtbInDia.Format = "";
            this.m_dgtbInDia.FormatInfo = null;
            this.m_dgtbInDia.HeaderText = "诊断内容";
            this.m_dgtbInDia.MappingName = "诊断内容";
            this.m_dgtbInDia.Width = 600;
            // 
            // m_dgtbInDiaICD
            // 
            this.m_dgtbInDiaICD.Format = "";
            this.m_dgtbInDiaICD.FormatInfo = null;
            this.m_dgtbInDiaICD.HeaderText = "ICD码";
            this.m_dgtbInDiaICD.MappingName = "ICD码";
            this.m_dgtbInDiaICD.Width = 75;
            // 
            // label4
            // 
            this.label4.AutoSize = true;
            this.label4.Location = new System.Drawing.Point(586, 96);
            this.label4.Name = "label4";
            this.label4.Size = new System.Drawing.Size(70, 14);
            this.label4.TabIndex = 30017;
            this.label4.Text = "ICD10码：";
            // 
            // txtDoctor
            // 
            this.txtDoctor.AccessibleDescription = "门诊（急）医生";
            this.txtDoctor.BackColor = System.Drawing.SystemColors.Window;
            this.txtDoctor.Location = new System.Drawing.Point(128, 223);
            this.txtDoctor.Name = "txtDoctor";
            this.txtDoctor.ReadOnly = true;
            this.txtDoctor.Size = new System.Drawing.Size(157, 23);
            this.txtDoctor.TabIndex = 30016;
            // 
            // txtDiagnosisICD10
            // 
            this.txtDiagnosisICD10.AccessibleDescription = "";
            this.txtDiagnosisICD10.Location = new System.Drawing.Point(659, 91);
            this.txtDiagnosisICD10.Name = "txtDiagnosisICD10";
            this.txtDiagnosisICD10.Size = new System.Drawing.Size(83, 23);
            this.txtDiagnosisICD10.TabIndex = 3;
            this.txtDiagnosisICD10.Enter += new System.EventHandler(this.QueryControls_Enter);
            this.txtDiagnosisICD10.Leave += new System.EventHandler(this.QueryControls_Leave);
            this.txtDiagnosisICD10.KeyDown += new System.Windows.Forms.KeyEventHandler(this.m_mthEvent_KeyDown);
            // 
            // m_lblOutHospitalDate
            // 
            this.m_lblOutHospitalDate.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_lblOutHospitalDate.Location = new System.Drawing.Point(70, 60);
            this.m_lblOutHospitalDate.Name = "m_lblOutHospitalDate";
            this.m_lblOutHospitalDate.Size = new System.Drawing.Size(198, 20);
            this.m_lblOutHospitalDate.TabIndex = 100;
            // 
            // panel1
            // 
            this.panel1.BackColor = System.Drawing.SystemColors.Control;
            this.panel1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.panel1.Controls.Add(this.panel3);
            this.panel1.Controls.Add(this.m_txtHomeAddress);
            this.panel1.Controls.Add(this.m_txtHomePC);
            this.panel1.Controls.Add(this.m_txtOfficePC);
            this.panel1.Controls.Add(this.m_txtOfficeAddress);
            this.panel1.Controls.Add(this.m_txtIDCard);
            this.panel1.Controls.Add(this.m_txtCompanyName);
            this.panel1.Controls.Add(this.m_txtHomePhone);
            this.panel1.Controls.Add(this.m_cboProvince);
            this.panel1.Controls.Add(this.m_cboCounty);
            this.panel1.Controls.Add(this.m_cboCity);
            this.panel1.Controls.Add(this.lblHomePlaceTitle);
            this.panel1.Controls.Add(this.lblIDCardTitle);
            this.panel1.Controls.Add(this.label1);
            this.panel1.Controls.Add(this.lblOfficeAddressTitle);
            this.panel1.Controls.Add(this.lblOfficePhoneTitle);
            this.panel1.Controls.Add(this.lblOfficePCTitle);
            this.panel1.Controls.Add(this.lblHomeAddressTitle);
            this.panel1.Controls.Add(this.lblHmePCTitle);
            this.panel1.Controls.Add(this.lblProvince);
            this.panel1.Location = new System.Drawing.Point(10, 62);
            this.panel1.Name = "panel1";
            this.panel1.Size = new System.Drawing.Size(751, 136);
            this.panel1.TabIndex = 0;
            // 
            // panel3
            // 
            this.panel3.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.panel3.Controls.Add(this.m_txtContactManAddress);
            this.panel3.Controls.Add(this.m_txtContactManPhone);
            this.panel3.Controls.Add(this.m_txtRelation);
            this.panel3.Controls.Add(this.m_txtContactMan);
            this.panel3.Controls.Add(this.m_txtLinkManzipcode);
            this.panel3.Controls.Add(this.label2);
            this.panel3.Controls.Add(this.lblContactManAddressTitle);
            this.panel3.Controls.Add(this.lblContactManTitle);
            this.panel3.Controls.Add(this.lblRelationTitle);
            this.panel3.Controls.Add(this.lblContactManPhoneTitle);
            this.panel3.Location = new System.Drawing.Point(-1, 77);
            this.panel3.Name = "panel3";
            this.panel3.Size = new System.Drawing.Size(751, 60);
            this.panel3.TabIndex = 92;
            // 
            // m_txtContactManAddress
            // 
            this.m_txtContactManAddress.AccessibleDescription = "联系人地址";
            this.m_txtContactManAddress.Location = new System.Drawing.Point(45, 29);
            this.m_txtContactManAddress.MaxLength = 100;
            this.m_txtContactManAddress.Name = "m_txtContactManAddress";
            this.m_txtContactManAddress.Size = new System.Drawing.Size(541, 23);
            this.m_txtContactManAddress.TabIndex = 29226;
            // 
            // m_txtContactManPhone
            // 
            this.m_txtContactManPhone.AccessibleDescription = "联系人电话";
            this.m_txtContactManPhone.Location = new System.Drawing.Point(414, 3);
            this.m_txtContactManPhone.MaxLength = 20;
            this.m_txtContactManPhone.Name = "m_txtContactManPhone";
            this.m_txtContactManPhone.Size = new System.Drawing.Size(172, 23);
            this.m_txtContactManPhone.TabIndex = 29225;
            // 
            // m_txtRelation
            // 
            this.m_txtRelation.AccessibleDescription = "联系人关系";
            this.m_txtRelation.Location = new System.Drawing.Point(283, 3);
            this.m_txtRelation.MaxLength = 20;
            this.m_txtRelation.Name = "m_txtRelation";
            this.m_txtRelation.Size = new System.Drawing.Size(88, 23);
            this.m_txtRelation.TabIndex = 29224;
            // 
            // m_txtContactMan
            // 
            this.m_txtContactMan.AccessibleDescription = "联系人姓名";
            this.m_txtContactMan.Location = new System.Drawing.Point(86, 3);
            this.m_txtContactMan.MaxLength = 50;
            this.m_txtContactMan.Name = "m_txtContactMan";
            this.m_txtContactMan.Size = new System.Drawing.Size(156, 23);
            this.m_txtContactMan.TabIndex = 29223;
            this.m_txtContactMan.TextChanged += new System.EventHandler(this.m_txtContactMan_TextChanged);
            // 
            // m_txtLinkManzipcode
            // 
            this.m_txtLinkManzipcode.AccessibleDescription = "联系人邮编";
            this.m_txtLinkManzipcode.Location = new System.Drawing.Point(657, 29);
            this.m_txtLinkManzipcode.MaxLength = 10;
            this.m_txtLinkManzipcode.Name = "m_txtLinkManzipcode";
            this.m_txtLinkManzipcode.Size = new System.Drawing.Size(83, 23);
            this.m_txtLinkManzipcode.TabIndex = 29227;
            // 
            // label2
            // 
            this.label2.AutoSize = true;
            this.label2.BackColor = System.Drawing.SystemColors.Control;
            this.label2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label2.Location = new System.Drawing.Point(590, 33);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(70, 14);
            this.label2.TabIndex = 29232;
            this.label2.Text = "邮政编码:";
            // 
            // lblContactManAddressTitle
            // 
            this.lblContactManAddressTitle.AutoSize = true;
            this.lblContactManAddressTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblContactManAddressTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblContactManAddressTitle.Location = new System.Drawing.Point(3, 33);
            this.lblContactManAddressTitle.Name = "lblContactManAddressTitle";
            this.lblContactManAddressTitle.Size = new System.Drawing.Size(42, 14);
            this.lblContactManAddressTitle.TabIndex = 29229;
            this.lblContactManAddressTitle.Text = "地址:";
            // 
            // lblContactManTitle
            // 
            this.lblContactManTitle.AutoSize = true;
            this.lblContactManTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblContactManTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblContactManTitle.Location = new System.Drawing.Point(3, 9);
            this.lblContactManTitle.Name = "lblContactManTitle";
            this.lblContactManTitle.Size = new System.Drawing.Size(84, 14);
            this.lblContactManTitle.TabIndex = 29228;
            this.lblContactManTitle.Text = "联系人姓名:";
            // 
            // lblRelationTitle
            // 
            this.lblRelationTitle.AutoSize = true;
            this.lblRelationTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblRelationTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblRelationTitle.Location = new System.Drawing.Point(242, 9);
            this.lblRelationTitle.Name = "lblRelationTitle";
            this.lblRelationTitle.Size = new System.Drawing.Size(42, 14);
            this.lblRelationTitle.TabIndex = 29231;
            this.lblRelationTitle.Text = "关系:";
            // 
            // lblContactManPhoneTitle
            // 
            this.lblContactManPhoneTitle.AutoSize = true;
            this.lblContactManPhoneTitle.BackColor = System.Drawing.SystemColors.Control;
            this.lblContactManPhoneTitle.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblContactManPhoneTitle.Location = new System.Drawing.Point(374, 9);
            this.lblContactManPhoneTitle.Name = "lblContactManPhoneTitle";
            this.lblContactManPhoneTitle.Size = new System.Drawing.Size(42, 14);
            this.lblContactManPhoneTitle.TabIndex = 29230;
            this.lblContactManPhoneTitle.Text = "电话:";
            // 
            // m_txtHomeAddress
            // 
            this.m_txtHomeAddress.AccessibleDescription = "户口地址";
            this.m_txtHomeAddress.Location = new System.Drawing.Point(73, 53);
            this.m_txtHomeAddress.MaxLength = 60;
            this.m_txtHomeAddress.Name = "m_txtHomeAddress";
            this.m_txtHomeAddress.Size = new System.Drawing.Size(515, 23);
            this.m_txtHomeAddress.TabIndex = 85;
            // 
            // m_txtHomePC
            // 
            this.m_txtHomePC.AccessibleDescription = "家庭邮编";
            this.m_txtHomePC.Location = new System.Drawing.Point(659, 53);
            this.m_txtHomePC.MaxLength = 10;
            this.m_txtHomePC.Name = "m_txtHomePC";
            this.m_txtHomePC.Size = new System.Drawing.Size(83, 23);
            this.m_txtHomePC.TabIndex = 90;
            // 
            // m_txtOfficePC
            // 
            this.m_txtOfficePC.AccessibleDescription = "办公邮编";
            this.m_txtOfficePC.Location = new System.Drawing.Point(659, 28);
            this.m_txtOfficePC.MaxLength = 10;
            this.m_txtOfficePC.Name = "m_txtOfficePC";
            this.m_txtOfficePC.Size = new System.Drawing.Size(83, 23);
            this.m_txtOfficePC.TabIndex = 80;
            // 
            // m_txtOfficeAddress
            // 
            this.m_txtOfficeAddress.AccessibleDescription = "工作地址";
            this.m_txtOfficeAddress.Location = new System.Drawing.Point(277, 28);
            this.m_txtOfficeAddress.MaxLength = 60;
            this.m_txtOfficeAddress.Name = "m_txtOfficeAddress";
            this.m_txtOfficeAddress.Size = new System.Drawing.Size(311, 23);
            this.m_txtOfficeAddress.TabIndex = 75;
            // 
            // m_txtIDCard
            // 
            this.m_txtIDCard.AccessibleDescription = "身份证号码";
            this.m_txtIDCard.Location = new System.Drawing.Point(232, 3);
            this.m_txtIDCard.MaxLength = 18;
            this.m_txtIDCard.Name = "m_txtIDCard";
            this.m_txtIDCard.Size = new System.Drawing.Size(172, 23);
            this.m_txtIDCard.TabIndex = 50;
            // 
            // m_txtCompanyName
            // 
            this.m_txtCompanyName.AccessibleDescription = "工作单位";
            this.m_txtCompanyName.Location = new System.Drawing.Point(73, 27);
            this.m_txtCompanyName.MaxLength = 60;
            this.m_txtCompanyName.Name = "m_txtCompanyName";
            this.m_txtCompanyName.Size = new System.Drawing.Size(157, 23);
            this.m_txtCompanyName.TabIndex = 70;
            // 
            // m_txtHomePhone
            // 
            this.m_txtHomePhone.AccessibleDescription = "家庭电话";
            this.m_txtHomePhone.Location = new System.Drawing.Point(45, 3);
            this.m_txtHomePhone.MaxLength = 20;
            this.m_txtHomePhone.Name = "m_txtHomePhone";
            this.m_txtHomePhone.Size = new System.Drawing.Size(104, 23);
            this.m_txtHomePhone.TabIndex = 45;
            // 
            // m_cboProvince
            // 
            this.m_cboProvince.BackColor = System.Drawing.Color.White;
            this.m_cboProvince.BorderColor = System.Drawing.Color.Black;
            this.m_cboProvince.DropButtonBackColor = System.Drawing.SystemColors.Control;
            this.m_cboProvince.DropButtonCursor = System.Windows.Forms.Cursors.Hand;
            this.m_cboProvince.DropButtonForeColor = System.Drawing.Color.Black;
            this.m_cboProvince.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDown;
            this.m_cboProvince.flatFont = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cboProvince.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cboProvince.ForeColor = System.Drawing.Color.Black;
            this.m_cboProvince.ListBackColor = System.Drawing.Color.White;
            this.m_cboProvince.ListForeColor = System.Drawing.Color.Black;
            this.m_cboProvince.ListSelectedBackColor = System.Drawing.Color.Blue;
            this.m_cboProvince.ListSelectedForeColor = System.Drawing.Color.White;
            this.m_cboProvince.Location = new System.Drawing.Point(456, 3);
            this.m_cboProvince.m_BlnEnableItemEventMenu = true;
            this.m_cboProvince.MaxLength = 32767;
            this.m_cboProvince.Name = "m_cboProvince";
            this.m_cboProvince.SelectedIndex = -1;
            this.m_cboProvince.SelectedItem = null;
            this.m_cboProvince.SelectionStart = 0;
            this.m_cboProvince.Size = new System.Drawing.Size(88, 23);
            this.m_cboProvince.TabIndex = 55;
            this.m_cboProvince.TextBackColor = System.Drawing.Color.White;
            this.m_cboProvince.TextForeColor = System.Drawing.Color.Black;
            this.m_cboProvince.evtDelItem += new System.EventHandler(this.m_cboProvince_evtDelItem);
            this.m_cboProvince.evtAddItem += new System.EventHandler(this.m_cboProvince_evtAddItem);
            this.m_cboProvince.SelectedIndexChanged += new System.EventHandler(this.m_cboProvince_SelectedIndexChanged);
            this.m_cboProvince.evtModifyItem += new System.EventHandler(this.m_cboProvince_evtModifyItem);
            this.m_cboProvince.evtTextChanged += new System.EventHandler(this.m_cboProvince_evtTextChanged);
            this.m_cboProvince.DropDown += new System.EventHandler(this.m_cboProvince_DropDown);
            // 
            // m_cboCounty
            // 
            this.m_cboCounty.BackColor = System.Drawing.Color.White;
            this.m_cboCounty.BorderColor = System.Drawing.Color.Black;
            this.m_cboCounty.DropButtonBackColor = System.Drawing.SystemColors.Control;
            this.m_cboCounty.DropButtonCursor = System.Windows.Forms.Cursors.Hand;
            this.m_cboCounty.DropButtonForeColor = System.Drawing.Color.Black;
            this.m_cboCounty.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDown;
            this.m_cboCounty.flatFont = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cboCounty.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cboCounty.ForeColor = System.Drawing.Color.Black;
            this.m_cboCounty.ListBackColor = System.Drawing.Color.White;
            this.m_cboCounty.ListForeColor = System.Drawing.Color.Black;
            this.m_cboCounty.ListSelectedBackColor = System.Drawing.Color.Blue;
            this.m_cboCounty.ListSelectedForeColor = System.Drawing.Color.White;
            this.m_cboCounty.Location = new System.Drawing.Point(640, 3);
            this.m_cboCounty.m_BlnEnableItemEventMenu = true;
            this.m_cboCounty.MaxLength = 32767;
            this.m_cboCounty.Name = "m_cboCounty";
            this.m_cboCounty.SelectedIndex = -1;
            this.m_cboCounty.SelectedItem = null;
            this.m_cboCounty.SelectionStart = 0;
            this.m_cboCounty.Size = new System.Drawing.Size(88, 23);
            this.m_cboCounty.TabIndex = 65;
            this.m_cboCounty.TextBackColor = System.Drawing.Color.White;
            this.m_cboCounty.TextForeColor = System.Drawing.Color.Black;
            this.m_cboCounty.evtDelItem += new System.EventHandler(this.m_cboCounty_evtDelItem);
            this.m_cboCounty.evtAddItem += new System.EventHandler(this.m_cboCounty_evtAddItem);
            this.m_cboCounty.evtModifyItem += new System.EventHandler(this.m_cboCounty_evtModifyItem);
            this.m_cboCounty.DropDown += new System.EventHandler(this.m_cboCounty_DropDown);
            // 
            // m_cboCity
            // 
            this.m_cboCity.BackColor = System.Drawing.Color.White;
            this.m_cboCity.BorderColor = System.Drawing.Color.Black;
            this.m_cboCity.DropButtonBackColor = System.Drawing.SystemColors.Control;
            this.m_cboCity.DropButtonCursor = System.Windows.Forms.Cursors.Hand;
            this.m_cboCity.DropButtonForeColor = System.Drawing.Color.Black;
            this.m_cboCity.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDown;
            this.m_cboCity.flatFont = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cboCity.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cboCity.ForeColor = System.Drawing.Color.Black;
            this.m_cboCity.ListBackColor = System.Drawing.Color.White;
            this.m_cboCity.ListForeColor = System.Drawing.Color.Black;
            this.m_cboCity.ListSelectedBackColor = System.Drawing.Color.Blue;
            this.m_cboCity.ListSelectedForeColor = System.Drawing.Color.White;
            this.m_cboCity.Location = new System.Drawing.Point(548, 3);
            this.m_cboCity.m_BlnEnableItemEventMenu = true;
            this.m_cboCity.MaxLength = 32767;
            this.m_cboCity.Name = "m_cboCity";
            this.m_cboCity.SelectedIndex = -1;
            this.m_cboCity.SelectedItem = null;
            this.m_cboCity.SelectionStart = 0;
            this.m_cboCity.Size = new System.Drawing.Size(88, 23);
            this.m_cboCity.TabIndex = 60;
            this.m_cboCity.TextBackColor = System.Drawing.Color.White;
            this.m_cboCity.TextForeColor = System.Drawing.Color.Black;
            this.m_cboCity.evtDelItem += new System.EventHandler(this.m_cboCity_evtDelItem);
            this.m_cboCity.evtAddItem += new System.EventHandler(this.m_cboCity_evtAddItem);
            this.m_cboCity.SelectedIndexChanged += new System.EventHandler(this.m_cboCity_SelectedIndexChanged);
            this.m_cboCity.evtModifyItem += new System.EventHandler(this.m_cboCity_evtModifyItem);
            this.m_cboCity.evtTextChanged += new System.EventHandler(this.m_cboCity_evtTextChanged);
            this.m_cboCity.DropDown += new System.EventHandler(this.m_cboCity_DropDown);
            // 
            // label1
            // 
            this.label1.AutoSize = true;
            this.label1.BackColor = System.Drawing.SystemColors.Control;
            this.label1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label1.Location = new System.Drawing.Point(232, 32);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(42, 14);
            this.label1.TabIndex = 534;
            this.label1.Text = "地址:";
            // 
            // lblUnit1
            // 
            this.lblUnit1.AutoSize = true;
            this.lblUnit1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.lblUnit1.ForeColor = System.Drawing.SystemColors.WindowText;
            this.lblUnit1.Location = new System.Drawing.Point(266, 85);
            this.lblUnit1.Name = "lblUnit1";
            this.lblUnit1.Size = new System.Drawing.Size(28, 14);
            this.lblUnit1.TabIndex = 29024;
            this.lblUnit1.Text = "GY/";
            // 
            // dtcDiagnosis
            // 
            this.dtcDiagnosis.Format = "";
            this.dtcDiagnosis.FormatInfo = null;
            this.dtcDiagnosis.HeaderText = "诊断内容";
            this.dtcDiagnosis.MappingName = "诊断内容";
            this.dtcDiagnosis.NullText = "";
            this.dtcDiagnosis.Width = 430;
            // 
            // dtcHealOfMain
            // 
            this.dtcHealOfMain.AllowNull = false;
            this.dtcHealOfMain.HeaderText = "治愈";
            this.dtcHealOfMain.MappingName = "治愈";
            this.dtcHealOfMain.NullText = "";
            this.dtcHealOfMain.NullValue = "False";
            this.dtcHealOfMain.Width = 70;
            // 
            // dtcOnTheMendOfMain
            // 
            this.dtcOnTheMendOfMain.AllowNull = false;
            this.dtcOnTheMendOfMain.HeaderText = "好转";
            this.dtcOnTheMendOfMain.MappingName = "好转";
            this.dtcOnTheMendOfMain.NullText = "";
            this.dtcOnTheMendOfMain.NullValue = "False";
            this.dtcOnTheMendOfMain.Width = 70;
            // 
            // dtcNotCureOfMain
            // 
            this.dtcNotCureOfMain.AllowNull = false;
            this.dtcNotCureOfMain.HeaderText = "未愈";
            this.dtcNotCureOfMain.MappingName = "未愈";
            this.dtcNotCureOfMain.NullText = "";
            this.dtcNotCureOfMain.NullValue = "False";
            this.dtcNotCureOfMain.Width = 70;
            // 
            // dtcDieOfMain
            // 
            this.dtcDieOfMain.AllowNull = false;
            this.dtcDieOfMain.HeaderText = "死亡";
            this.dtcDieOfMain.MappingName = "死亡";
            this.dtcDieOfMain.NullText = "";
            this.dtcDieOfMain.NullValue = "False";
            this.dtcDieOfMain.Width = 70;
            // 
            // dtcNotDefineOfMain
            // 
            this.dtcNotDefineOfMain.AllowNull = false;
            this.dtcNotDefineOfMain.HeaderText = "其他";
            this.dtcNotDefineOfMain.MappingName = "其他";
            this.dtcNotDefineOfMain.NullText = "";
            this.dtcNotDefineOfMain.NullValue = "False";
            this.dtcNotDefineOfMain.Width = 70;
            // 
            // ICD10
            // 
            this.ICD10.Format = "";
            this.ICD10.FormatInfo = null;
            this.ICD10.HeaderText = "ICD10";
            this.ICD10.MappingName = "ICD10";
            this.ICD10.NullText = "";
            this.ICD10.Width = 75;
            // 
            // tabControl2
            // 
            this.tabControl2.Controls.Add(this.tabPage6);
            this.tabControl2.Controls.Add(this.tabPage7);
            this.tabControl2.Controls.Add(this.tabPage8);
            this.tabControl2.Controls.Add(this.tabPage9);
            this.tabControl2.Controls.Add(this.tabPage10);
            this.tabControl2.ImageList = this.imageList1;
            this.tabControl2.Location = new System.Drawing.Point(5, 70);
            this.tabControl2.Name = "tabControl2";
            this.tabControl2.SelectedIndex = 0;
            this.tabControl2.Size = new System.Drawing.Size(797, 525);
            this.tabControl2.TabIndex = 41;
            // 
            // tabPage6
            // 
            this.tabPage6.Controls.Add(this.panel2);
            this.tabPage6.Controls.Add(this.panel4);
            this.tabPage6.Controls.Add(this.panel1);
            this.tabPage6.ImageIndex = 3;
            this.tabPage6.Location = new System.Drawing.Point(4, 23);
            this.tabPage6.Name = "tabPage6";
            this.tabPage6.Padding = new System.Windows.Forms.Padding(3);
            this.tabPage6.Size = new System.Drawing.Size(789, 498);
            this.tabPage6.TabIndex = 0;
            this.tabPage6.Text = "登记资料";
            this.tabPage6.UseVisualStyleBackColor = true;
            // 
            // panel4
            // 
            this.panel4.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.panel4.Controls.Add(this.m_cboModeOfPayment);
            this.panel4.Controls.Add(this.m_txtMarried);
            this.panel4.Controls.Add(this.m_txtNation);
            this.panel4.Controls.Add(this.m_txtCountry);
            this.panel4.Controls.Add(this.txtInsuranceNum);
            this.panel4.Controls.Add(this.lblModeOfPaymentTitle);
            this.panel4.Controls.Add(this.lblTimes);
            this.panel4.Controls.Add(this.lblMarriedTitle);
            this.panel4.Controls.Add(this.lblNationalityTitle);
            this.panel4.Controls.Add(this.lblNationTitle);
            this.panel4.Controls.Add(this.m_txtOccupation);
            this.panel4.Controls.Add(this.lblOccupationTitle);
            this.panel4.Controls.Add(this.m_txtNationality);
            this.panel4.Controls.Add(this.label3);
            this.panel4.Controls.Add(this.lblTimesTitle);
            this.panel4.Controls.Add(this.m_dtpBirthDate);
            this.panel4.Controls.Add(this.lblTimesInHospital);
            this.panel4.Controls.Add(this.lblInuranceTitle);
            this.panel4.Controls.Add(this.lblProvinceTitle);
            this.panel4.Location = new System.Drawing.Point(10, 3);
            this.panel4.Name = "panel4";
            this.panel4.Size = new System.Drawing.Size(751, 60);
            this.panel4.TabIndex = 1000000002;
            // 
            // m_cboModeOfPayment
            // 
            this.m_cboModeOfPayment.AccessibleDescription = "医疗付款方式";
            this.m_cboModeOfPayment.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.m_cboModeOfPayment.FormattingEnabled = true;
            this.m_cboModeOfPayment.Items.AddRange(new object[] {
            "社会基本保险（补充保险、特大病保险）",
            "商业保险",
            "自费医疗",
            "公费医疗",
            "大病统筹",
            "其他"});
            this.m_cboModeOfPayment.Location = new System.Drawing.Point(403, 7);
            this.m_cboModeOfPayment.Name = "m_cboModeOfPayment";
            this.m_cboModeOfPayment.Size = new System.Drawing.Size(103, 22);
            this.m_cboModeOfPayment.TabIndex = 30007;
            // 
            // m_txtMarried
            // 
            this.m_txtMarried.AccessibleDescription = "婚姻";
            this.m_txtMarried.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.m_txtMarried.FormattingEnabled = true;
            this.m_txtMarried.Items.AddRange(new object[] {
            "未婚",
            "已婚",
            "离婚",
            "丧偶",
            "其他"});
            this.m_txtMarried.Location = new System.Drawing.Point(679, 29);
            this.m_txtMarried.Name = "m_txtMarried";
            this.m_txtMarried.Size = new System.Drawing.Size(62, 22);
            this.m_txtMarried.TabIndex = 40;
            // 
            // m_txtNation
            // 
            this.m_txtNation.AccessibleDescription = "民族";
            this.m_txtNation.Location = new System.Drawing.Point(562, 29);
            this.m_txtNation.MaxLength = 50;
            this.m_txtNation.Name = "m_txtNation";
            this.m_txtNation.Size = new System.Drawing.Size(74, 23);
            this.m_txtNation.TabIndex = 35;
            // 
            // m_txtCountry
            // 
            this.m_txtCountry.AccessibleDescription = "省(市)";
            this.m_txtCountry.Location = new System.Drawing.Point(208, 31);
            this.m_txtCountry.MaxLength = 20;
            this.m_txtCountry.Name = "m_txtCountry";
            this.m_txtCountry.Size = new System.Drawing.Size(110, 23);
            this.m_txtCountry.TabIndex = 25;
            // 
            // m_txtOccupation
            // 
            this.m_txtOccupation.AccessibleDescription = "职业";
            this.m_txtOccupation.Location = new System.Drawing.Point(372, 31);
            this.m_txtOccupation.MaxLength = 50;
            this.m_txtOccupation.Name = "m_txtOccupation";
            this.m_txtOccupation.Size = new System.Drawing.Size(134, 23);
            this.m_txtOccupation.TabIndex = 30;
            // 
            // m_txtNationality
            // 
            this.m_txtNationality.AccessibleDescription = "国家";
            this.m_txtNationality.Location = new System.Drawing.Point(61, 31);
            this.m_txtNationality.MaxLength = 20;
            this.m_txtNationality.Name = "m_txtNationality";
            this.m_txtNationality.Size = new System.Drawing.Size(85, 23);
            this.m_txtNationality.TabIndex = 20;
            // 
            // m_dtpBirthDate
            // 
            this.m_dtpBirthDate.BorderColor = System.Drawing.Color.Black;
            this.m_dtpBirthDate.CustomFormat = "yyyy年MM月dd日 HH:mm:ss";
            this.m_dtpBirthDate.DropButtonBackColor = System.Drawing.Color.Gainsboro;
            this.m_dtpBirthDate.DropButtonCursor = System.Windows.Forms.Cursors.Hand;
            this.m_dtpBirthDate.DropButtonForeColor = System.Drawing.Color.Black;
            this.m_dtpBirthDate.flatFont = new System.Drawing.Font("宋体", 12F);
            this.m_dtpBirthDate.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_dtpBirthDate.Format = System.Windows.Forms.DateTimePickerFormat.Custom;
            this.m_dtpBirthDate.Location = new System.Drawing.Point(594, 6);
            this.m_dtpBirthDate.m_BlnOnlyTime = false;
            this.m_dtpBirthDate.m_EnmVisibleFlag = com.digitalwave.Utility.Controls.ctlTimePicker.enmDateTimeFlag.Second;
            this.m_dtpBirthDate.MaxDate = new System.DateTime(9998, 12, 31, 0, 0, 0, 0);
            this.m_dtpBirthDate.MinDate = new System.DateTime(1753, 1, 1, 0, 0, 0, 0);
            this.m_dtpBirthDate.Name = "m_dtpBirthDate";
            this.m_dtpBirthDate.ReadOnly = false;
            this.m_dtpBirthDate.Size = new System.Drawing.Size(147, 22);
            this.m_dtpBirthDate.TabIndex = 15;
            this.m_dtpBirthDate.TextBackColor = System.Drawing.Color.White;
            this.m_dtpBirthDate.TextForeColor = System.Drawing.Color.Black;
            this.m_dtpBirthDate.evtValueChanged += new System.EventHandler(this.m_dtpBirthDate_evtValueChanged);
            // 
            // tabPage7
            // 
            this.tabPage7.Controls.Add(this.txtAttendInForAdvancesStudyDt);
            this.tabPage7.Controls.Add(this.txtGraduateStudentIntern);
            this.tabPage7.Controls.Add(this.m_cmdGraduateStudentIntern);
            this.tabPage7.Controls.Add(this.m_cmdAttendInForAdvancesStudyDt);
            this.tabPage7.Controls.Add(this.dgDiagnosis2);
            this.tabPage7.Controls.Add(this.dgDiagnosis3);
            this.tabPage7.Controls.Add(this.label5);
            this.tabPage7.Controls.Add(this.m_cboMainSeq);
            this.tabPage7.Controls.Add(this.txtCoder);
            this.tabPage7.Controls.Add(this.txtInHospitalDt);
            this.tabPage7.Controls.Add(this.txtQCNurse);
            this.tabPage7.Controls.Add(this.txtIntern);
            this.tabPage7.Controls.Add(this.txtDt);
            this.tabPage7.Controls.Add(this.txtQCDt);
            this.tabPage7.Controls.Add(this.txtSubDirectorDt);
            this.tabPage7.Controls.Add(this.txtDirectorDt);
            this.tabPage7.Controls.Add(this.gpbQuality);
            this.tabPage7.Controls.Add(this.lblMasterDiagnose);
            this.tabPage7.Controls.Add(this.txtICD_10OfMain);
            this.tabPage7.Controls.Add(this.txtSensitive);
            this.tabPage7.Controls.Add(this.lblQualityTitle);
            this.tabPage7.Controls.Add(this.lblConditionTitle);
            this.tabPage7.Controls.Add(this.dtpQCTime);
            this.tabPage7.Controls.Add(this.lblQCDateTitle);
            this.tabPage7.Controls.Add(this.txtMainDiagnosis);
            this.tabPage7.Controls.Add(this.m_cmdQCNurse);
            this.tabPage7.Controls.Add(this.m_cmdQCDt);
            this.tabPage7.Controls.Add(this.m_cmdCoder);
            this.tabPage7.Controls.Add(this.m_cmdIntern);
            this.tabPage7.Controls.Add(this.lblPathologyDiagnosisTitle);
            this.tabPage7.Controls.Add(this.txtPathologyDiagnosis);
            this.tabPage7.Controls.Add(this.txtScacheSource);
            this.tabPage7.Controls.Add(this.lblScacheSourceTitle);
            this.tabPage7.Controls.Add(this.lblSensitivetitle);
            this.tabPage7.Controls.Add(this.m_cmdInHospitalDt);
            this.tabPage7.Controls.Add(this.m_grpDrugAllergy);
            this.tabPage7.Controls.Add(this.m_grpAccordWithDiagnosisTitle);
            this.tabPage7.Controls.Add(this.m_cmdDt);
            this.tabPage7.Controls.Add(this.lblSalveTitle);
            this.tabPage7.Controls.Add(this.m_cmdSubDirectorDt);
            this.tabPage7.Controls.Add(this.txtSalveTimes);
            this.tabPage7.Controls.Add(this.lblTims2);
            this.tabPage7.Controls.Add(this.m_cmdDirectorDt);
            this.tabPage7.Controls.Add(this.lblSuccessTitle);
            this.tabPage7.Controls.Add(this.lblTimes3);
            this.tabPage7.Controls.Add(this.txtSalveSuccess);
            this.tabPage7.ImageIndex = 1;
            this.tabPage7.Location = new System.Drawing.Point(4, 23);
            this.tabPage7.Name = "tabPage7";
            this.tabPage7.Padding = new System.Windows.Forms.Padding(3);
            this.tabPage7.Size = new System.Drawing.Size(789, 498);
            this.tabPage7.TabIndex = 1;
            this.tabPage7.Text = "出院诊断";
            this.tabPage7.UseVisualStyleBackColor = true;
            // 
            // txtAttendInForAdvancesStudyDt
            // 
            this.txtAttendInForAdvancesStudyDt.AccessibleDescription = "进修医师";
            this.txtAttendInForAdvancesStudyDt.Location = new System.Drawing.Point(92, 438);
            this.txtAttendInForAdvancesStudyDt.MaxLength = 50;
            this.txtAttendInForAdvancesStudyDt.Name = "txtAttendInForAdvancesStudyDt";
            this.txtAttendInForAdvancesStudyDt.Size = new System.Drawing.Size(80, 23);
            this.txtAttendInForAdvancesStudyDt.TabIndex = 749;
            // 
            // txtGraduateStudentIntern
            // 
            this.txtGraduateStudentIntern.AccessibleDescription = "研究生实习医师";
            this.txtGraduateStudentIntern.Location = new System.Drawing.Point(312, 438);
            this.txtGraduateStudentIntern.MaxLength = 50;
            this.txtGraduateStudentIntern.Name = "txtGraduateStudentIntern";
            this.txtGraduateStudentIntern.Size = new System.Drawing.Size(76, 23);
            this.txtGraduateStudentIntern.TabIndex = 749;
            // 
            // dgDiagnosis2
            // 
            this.dgDiagnosis2.AllowSorting = false;
            this.dgDiagnosis2.BackgroundColor = System.Drawing.Color.White;
            this.dgDiagnosis2.CaptionBackColor = System.Drawing.SystemColors.AppWorkspace;
            this.dgDiagnosis2.CaptionForeColor = System.Drawing.Color.Black;
            this.dgDiagnosis2.CaptionText = "医院感染名称";
            this.dgDiagnosis2.DataMember = "";
            this.dgDiagnosis2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dgDiagnosis2.ForeColor = System.Drawing.Color.Black;
            this.dgDiagnosis2.HeaderForeColor = System.Drawing.Color.White;
            this.dgDiagnosis2.Location = new System.Drawing.Point(10, 173);
            this.dgDiagnosis2.Name = "dgDiagnosis2";
            this.dgDiagnosis2.ParentRowsForeColor = System.Drawing.Color.White;
            this.dgDiagnosis2.RowHeaderWidth = 40;
            this.dgDiagnosis2.Size = new System.Drawing.Size(739, 96);
            this.dgDiagnosis2.TabIndex = 30019;
            this.dgDiagnosis2.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle4});
            this.dgDiagnosis2.Enter += new System.EventHandler(this.QueryControls_Enter);
            this.dgDiagnosis2.Leave += new System.EventHandler(this.QueryControls_Leave);
            // 
            // dataGridTableStyle4
            // 
            this.dataGridTableStyle4.DataGrid = this.dgDiagnosis2;
            this.dataGridTableStyle4.GridColumnStyles.AddRange(new System.Windows.Forms.DataGridColumnStyle[] {
            this.m_dgtbInfectionDia,
            this.m_dgtbInfectionDiaICD,
            this.m_dtcInfectionResult});
            this.dataGridTableStyle4.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGridTableStyle4.MappingName = "InfectionDiagnosis";
            // 
            // m_dgtbInfectionDia
            // 
            this.m_dgtbInfectionDia.Format = "";
            this.m_dgtbInfectionDia.FormatInfo = null;
            this.m_dgtbInfectionDia.HeaderText = "诊断内容";
            this.m_dgtbInfectionDia.MappingName = "诊断内容";
            this.m_dgtbInfectionDia.Width = 500;
            // 
            // m_dgtbInfectionDiaICD
            // 
            this.m_dgtbInfectionDiaICD.Format = "";
            this.m_dgtbInfectionDiaICD.FormatInfo = null;
            this.m_dgtbInfectionDiaICD.HeaderText = "ICD码";
            this.m_dgtbInfectionDiaICD.MappingName = "ICD码";
            this.m_dgtbInfectionDiaICD.Width = 75;
            // 
            // m_dtcInfectionResult
            // 
            this.m_dtcInfectionResult.Format = "";
            this.m_dtcInfectionResult.FormatInfo = null;
            this.m_dtcInfectionResult.HeaderText = "疗效";
            this.m_dtcInfectionResult.MappingName = "疗效";
            this.m_dtcInfectionResult.Width = 120;
            // 
            // dgDiagnosis3
            // 
            this.dgDiagnosis3.AllowSorting = false;
            this.dgDiagnosis3.BackgroundColor = System.Drawing.Color.White;
            this.dgDiagnosis3.CaptionBackColor = System.Drawing.SystemColors.AppWorkspace;
            this.dgDiagnosis3.CaptionForeColor = System.Drawing.Color.Black;
            this.dgDiagnosis3.CaptionText = "其它诊断";
            this.dgDiagnosis3.DataMember = "";
            this.dgDiagnosis3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.dgDiagnosis3.ForeColor = System.Drawing.Color.Black;
            this.dgDiagnosis3.HeaderForeColor = System.Drawing.Color.White;
            this.dgDiagnosis3.Location = new System.Drawing.Point(11, 32);
            this.dgDiagnosis3.Name = "dgDiagnosis3";
            this.dgDiagnosis3.ParentRowsForeColor = System.Drawing.Color.White;
            this.dgDiagnosis3.RowHeaderWidth = 40;
            this.dgDiagnosis3.Size = new System.Drawing.Size(739, 137);
            this.dgDiagnosis3.TabIndex = 30019;
            this.dgDiagnosis3.TableStyles.AddRange(new System.Windows.Forms.DataGridTableStyle[] {
            this.dataGridTableStyle3});
            this.dgDiagnosis3.Enter += new System.EventHandler(this.QueryControls_Enter);
            this.dgDiagnosis3.Leave += new System.EventHandler(this.QueryControls_Leave);
            // 
            // dataGridTableStyle3
            // 
            this.dataGridTableStyle3.DataGrid = this.dgDiagnosis3;
            this.dataGridTableStyle3.GridColumnStyles.AddRange(new System.Windows.Forms.DataGridColumnStyle[] {
            this.m_dgtbOtherDia,
            this.m_dgtbOtherDiaICD,
            this.m_dtcOtherDiaResult});
            this.dataGridTableStyle3.HeaderForeColor = System.Drawing.SystemColors.ControlText;
            this.dataGridTableStyle3.MappingName = "OtherDiagnosis";
            // 
            // m_dgtbOtherDia
            // 
            this.m_dgtbOtherDia.Format = "";
            this.m_dgtbOtherDia.FormatInfo = null;
            this.m_dgtbOtherDia.HeaderText = "诊断内容";
            this.m_dgtbOtherDia.MappingName = "诊断内容";
            this.m_dgtbOtherDia.Width = 500;
            // 
            // m_dgtbOtherDiaICD
            // 
            this.m_dgtbOtherDiaICD.Format = "";
            this.m_dgtbOtherDiaICD.FormatInfo = null;
            this.m_dgtbOtherDiaICD.HeaderText = "ICD码";
            this.m_dgtbOtherDiaICD.MappingName = "ICD码";
            this.m_dgtbOtherDiaICD.Width = 75;
            // 
            // m_dtcOtherDiaResult
            // 
            this.m_dtcOtherDiaResult.Format = "";
            this.m_dtcOtherDiaResult.FormatInfo = null;
            this.m_dtcOtherDiaResult.HeaderText = "疗效";
            this.m_dtcOtherDiaResult.MappingName = "疗效";
            this.m_dtcOtherDiaResult.Width = 120;
            // 
            // label5
            // 
            this.label5.AutoSize = true;
            this.label5.Location = new System.Drawing.Point(470, 9);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(63, 14);
            this.label5.TabIndex = 30018;
            this.label5.Text = "ICD10码:";
            // 
            // m_cboMainSeq
            // 
            this.m_cboMainSeq.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.m_cboMainSeq.FormattingEnabled = true;
            this.m_cboMainSeq.Items.AddRange(new object[] {
            "治愈",
            "好转",
            "未愈",
            "死亡",
            "其他",
            ""});
            this.m_cboMainSeq.Location = new System.Drawing.Point(694, 6);
            this.m_cboMainSeq.Name = "m_cboMainSeq";
            this.m_cboMainSeq.Size = new System.Drawing.Size(55, 22);
            this.m_cboMainSeq.TabIndex = 750;
            // 
            // txtCoder
            // 
            this.txtCoder.AccessibleDescription = "编码员";
            this.txtCoder.Location = new System.Drawing.Point(656, 438);
            this.txtCoder.Name = "txtCoder";
            this.txtCoder.ReadOnly = true;
            this.txtCoder.Size = new System.Drawing.Size(84, 23);
            this.txtCoder.TabIndex = 749;
            // 
            // txtInHospitalDt
            // 
            this.txtInHospitalDt.AccessibleDescription = "住院医师";
            this.txtInHospitalDt.Location = new System.Drawing.Point(656, 410);
            this.txtInHospitalDt.Name = "txtInHospitalDt";
            this.txtInHospitalDt.ReadOnly = true;
            this.txtInHospitalDt.Size = new System.Drawing.Size(84, 23);
            this.txtInHospitalDt.TabIndex = 749;
            // 
            // txtQCNurse
            // 
            this.txtQCNurse.AccessibleDescription = "质控护士";
            this.txtQCNurse.Location = new System.Drawing.Point(486, 465);
            this.txtQCNurse.Name = "txtQCNurse";
            this.txtQCNurse.ReadOnly = true;
            this.txtQCNurse.Size = new System.Drawing.Size(70, 23);
            this.txtQCNurse.TabIndex = 749;
            // 
            // txtIntern
            // 
            this.txtIntern.AccessibleDescription = "实习医师";
            this.txtIntern.Location = new System.Drawing.Point(484, 438);
            this.txtIntern.MaxLength = 50;
            this.txtIntern.Name = "txtIntern";
            this.txtIntern.Size = new System.Drawing.Size(76, 23);
            this.txtIntern.TabIndex = 749;
            // 
            // txtDt
            // 
            this.txtDt.AccessibleDescription = "主治医师";
            this.txtDt.Location = new System.Drawing.Point(484, 410);
            this.txtDt.Name = "txtDt";
            this.txtDt.ReadOnly = true;
            this.txtDt.Size = new System.Drawing.Size(76, 23);
            this.txtDt.TabIndex = 749;
            // 
            // txtQCDt
            // 
            this.txtQCDt.AccessibleDescription = "质控医师";
            this.txtQCDt.Location = new System.Drawing.Point(323, 467);
            this.txtQCDt.Name = "txtQCDt";
            this.txtQCDt.ReadOnly = true;
            this.txtQCDt.Size = new System.Drawing.Size(76, 23);
            this.txtQCDt.TabIndex = 749;
            // 
            // txtSubDirectorDt
            // 
            this.txtSubDirectorDt.AccessibleDescription = "主（副主）任医师";
            this.txtSubDirectorDt.Location = new System.Drawing.Point(312, 410);
            this.txtSubDirectorDt.Name = "txtSubDirectorDt";
            this.txtSubDirectorDt.ReadOnly = true;
            this.txtSubDirectorDt.Size = new System.Drawing.Size(76, 23);
            this.txtSubDirectorDt.TabIndex = 749;
            // 
            // txtDirectorDt
            // 
            this.txtDirectorDt.AccessibleDescription = "科主任";
            this.txtDirectorDt.Location = new System.Drawing.Point(92, 410);
            this.txtDirectorDt.Name = "txtDirectorDt";
            this.txtDirectorDt.ReadOnly = true;
            this.txtDirectorDt.Size = new System.Drawing.Size(80, 23);
            this.txtDirectorDt.TabIndex = 749;
            // 
            // tabPage8
            // 
            this.tabPage8.Controls.Add(this.panel6);
            this.tabPage8.Controls.Add(this.panel5);
            this.tabPage8.Controls.Add(this.lsvAanaesthesiaMode);
            this.tabPage8.Controls.Add(this.lsvOperationEmployee);
            this.tabPage8.Controls.Add(this.dtgOperation);
            this.tabPage8.Controls.Add(this.dtgBaby);
            this.tabPage8.ImageIndex = 6;
            this.tabPage8.Location = new System.Drawing.Point(4, 23);
            this.tabPage8.Name = "tabPage8";
            this.tabPage8.Padding = new System.Windows.Forms.Padding(3);
            this.tabPage8.Size = new System.Drawing.Size(789, 498);
            this.tabPage8.TabIndex = 2;
            this.tabPage8.Text = "手术资料与产科分娩婴儿记录";
            this.tabPage8.UseVisualStyleBackColor = true;
            // 
            // panel6
            // 
            this.panel6.BackColor = System.Drawing.SystemColors.AppWorkspace;
            this.panel6.Controls.Add(this.radioButton4);
            this.panel6.Controls.Add(this.radioButton3);
            this.panel6.Location = new System.Drawing.Point(154, 271);
            this.panel6.Name = "panel6";
            this.panel6.Size = new System.Drawing.Size(200, 23);
            this.panel6.TabIndex = 30006;
            // 
            // radioButton4
            // 
            this.radioButton4.AccessibleDescription = "产科分娩婴儿记录表>>无";
            this.radioButton4.AutoSize = true;
            this.radioButton4.Checked = true;
            this.radioButton4.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.radioButton4.Location = new System.Drawing.Point(52, 1);
            this.radioButton4.Name = "radioButton4";
            this.radioButton4.Size = new System.Drawing.Size(40, 18);
            this.radioButton4.TabIndex = 1;
            this.radioButton4.TabStop = true;
            this.radioButton4.Text = "无";
            this.radioButton4.UseVisualStyleBackColor = true;
            // 
            // radioButton3
            // 
            this.radioButton3.AccessibleDescription = "产科分娩婴儿记录表>>有";
            this.radioButton3.AutoSize = true;
            this.radioButton3.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.radioButton3.Location = new System.Drawing.Point(8, 1);
            this.radioButton3.Name = "radioButton3";
            this.radioButton3.Size = new System.Drawing.Size(40, 18);
            this.radioButton3.TabIndex = 0;
            this.radioButton3.Text = "有";
            this.radioButton3.UseVisualStyleBackColor = true;
            this.radioButton3.CheckedChanged += new System.EventHandler(this.radioButton3_CheckedChanged);
            // 
            // panel5
            // 
            this.panel5.BackColor = System.Drawing.SystemColors.AppWorkspace;
            this.panel5.Controls.Add(this.radioButton2);
            this.panel5.Controls.Add(this.radioButton1);
            this.panel5.Location = new System.Drawing.Point(79, 7);
            this.panel5.Name = "panel5";
            this.panel5.Size = new System.Drawing.Size(200, 22);
            this.panel5.TabIndex = 30005;
            // 
            // radioButton2
            // 
            this.radioButton2.AccessibleDescription = "手术情况>>无";
            this.radioButton2.AutoSize = true;
            this.radioButton2.Checked = true;
            this.radioButton2.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.radioButton2.Location = new System.Drawing.Point(50, 1);
            this.radioButton2.Name = "radioButton2";
            this.radioButton2.Size = new System.Drawing.Size(40, 18);
            this.radioButton2.TabIndex = 1;
            this.radioButton2.TabStop = true;
            this.radioButton2.Text = "无";
            this.radioButton2.UseVisualStyleBackColor = true;
            // 
            // radioButton1
            // 
            this.radioButton1.AccessibleDescription = "手术情况>>有";
            this.radioButton1.AutoSize = true;
            this.radioButton1.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.radioButton1.Location = new System.Drawing.Point(6, 1);
            this.radioButton1.Name = "radioButton1";
            this.radioButton1.Size = new System.Drawing.Size(40, 18);
            this.radioButton1.TabIndex = 0;
            this.radioButton1.Text = "有";
            this.radioButton1.UseVisualStyleBackColor = true;
            this.radioButton1.CheckedChanged += new System.EventHandler(this.radioButton1_CheckedChanged);
            // 
            // tabPage9
            // 
            this.tabPage9.Controls.Add(this.dtpMetastasisEndDate);
            this.tabPage9.Controls.Add(this.dtpLymphEndDate);
            this.tabPage9.Controls.Add(this.dtpOriginalDiseaseEndDate);
            this.tabPage9.Controls.Add(this.dtpMetastasisBeginDate);
            this.tabPage9.Controls.Add(this.dtpLymphBeginDate);
            this.tabPage9.Controls.Add(this.dtpOriginalDiseaseBeginDate);
            this.tabPage9.Controls.Add(this.panel7);
            this.tabPage9.Controls.Add(this.txtMetastasisDays);
            this.tabPage9.Controls.Add(this.txtOriginalDiseaseDays);
            this.tabPage9.Controls.Add(this.txtLymphDays);
            this.tabPage9.Controls.Add(this.txtMetastasisTimes);
            this.tabPage9.Controls.Add(this.txtOriginalDiseaseTimes);
            this.tabPage9.Controls.Add(this.txtLymphTimes);
            this.tabPage9.Controls.Add(this.txtMetastasisGy);
            this.tabPage9.Controls.Add(this.txtOriginalDiseaseGy);
            this.tabPage9.Controls.Add(this.txtLymphGy);
            this.tabPage9.Controls.Add(this.gpbRTMode);
            this.tabPage9.Controls.Add(this.dtgChemotherapy);
            this.tabPage9.Controls.Add(this.gpbChemotherapyRule);
            this.tabPage9.Controls.Add(this.gpbChemotherapyMode);
            this.tabPage9.Controls.Add(this.lblChemotherapyTitle);
            this.tabPage9.Controls.Add(this.lblMetastasisUnit2);
            this.tabPage9.Controls.Add(this.lblOriginalDiseaseBeginDateTitle);
            this.tabPage9.Controls.Add(this.lblMetastasisUnit1);
            this.tabPage9.Controls.Add(this.lblLymphBeginDateTitle);
            this.tabPage9.Controls.Add(this.lblMetastasisDose);
            this.tabPage9.Controls.Add(this.lblMetastasisBeginDateTitle);
            this.tabPage9.Controls.Add(this.lblMetastasisTo);
            this.tabPage9.Controls.Add(this.gpbOriginalDisease);
            this.tabPage9.Controls.Add(this.lblMetastasisUnit3);
            this.tabPage9.Controls.Add(this.lblRTTitle);
            this.tabPage9.Controls.Add(this.gpbRTRule);
            this.tabPage9.Controls.Add(this.lblMetastasisTitle);
            this.tabPage9.Controls.Add(this.gpbRTEquipment);
            this.tabPage9.Controls.Add(this.lblLymphTitle);
            this.tabPage9.Controls.Add(this.lblOriginalDiseaseTitle);
            this.tabPage9.Controls.Add(this.lblLymphToTitle);
            this.tabPage9.Controls.Add(this.lblLympUnit3);
            this.tabPage9.Controls.Add(this.lblLymphUnit2);
            this.tabPage9.Controls.Add(this.lblLymphUnit1);
            this.tabPage9.Controls.Add(this.lblUnit3);
            this.tabPage9.Controls.Add(this.lblOriginalDiseaseTo);
            this.tabPage9.Controls.Add(this.gpbLymph);
            this.tabPage9.Controls.Add(this.lblLymphDose);
            this.tabPage9.Controls.Add(this.lblOriginalDiseaseDose);
            this.tabPage9.Controls.Add(this.lblUnit1);
            this.tabPage9.Controls.Add(this.lblUnit2);
            this.tabPage9.ImageIndex = 0;
            this.tabPage9.Location = new System.Drawing.Point(4, 23);
            this.tabPage9.Name = "tabPage9";
            this.tabPage9.Padding = new System.Windows.Forms.Padding(3);
            this.tabPage9.Size = new System.Drawing.Size(789, 498);
            this.tabPage9.TabIndex = 3;
            this.tabPage9.Text = "肿瘤专科病人治疗记录表";
            this.tabPage9.UseVisualStyleBackColor = true;
            this.tabPage9.Click += new System.EventHandler(this.tabPage9_Click);
            // 
            // dtpMetastasisEndDate
            // 
            this.dtpMetastasisEndDate.InsertKeyMode = System.Windows.Forms.InsertKeyMode.Overwrite;
            this.dtpMetastasisEndDate.Location = new System.Drawing.Point(617, 152);
            this.dtpMetastasisEndDate.m_EnmDateTimeFormat = com.digitalwave.Controls.EnmDateTimeFormat.yyyyMMddHHmmss;
            this.dtpMetastasisEndDate.Mask = "0000年90月90日";
            this.dtpMetastasisEndDate.Name = "dtpMetastasisEndDate";
            this.dtpMetastasisEndDate.Size = new System.Drawing.Size(127, 23);
            this.dtpMetastasisEndDate.TabIndex = 29065;
            this.dtpMetastasisEndDate.ValidatingType = typeof(System.DateTime);
            // 
            // dtpLymphEndDate
            // 
            this.dtpLymphEndDate.InsertKeyMode = System.Windows.Forms.InsertKeyMode.Overwrite;
            this.dtpLymphEndDate.Location = new System.Drawing.Point(617, 118);
            this.dtpLymphEndDate.m_EnmDateTimeFormat = com.digitalwave.Controls.EnmDateTimeFormat.yyyyMMddHHmmss;
            this.dtpLymphEndDate.Mask = "0000年90月90日";
            this.dtpLymphEndDate.Name = "dtpLymphEndDate";
            this.dtpLymphEndDate.Size = new System.Drawing.Size(127, 23);
            this.dtpLymphEndDate.TabIndex = 29065;
            this.dtpLymphEndDate.ValidatingType = typeof(System.DateTime);
            // 
            // dtpOriginalDiseaseEndDate
            // 
            this.dtpOriginalDiseaseEndDate.InsertKeyMode = System.Windows.Forms.InsertKeyMode.Overwrite;
            this.dtpOriginalDiseaseEndDate.Location = new System.Drawing.Point(617, 82);
            this.dtpOriginalDiseaseEndDate.m_EnmDateTimeFormat = com.digitalwave.Controls.EnmDateTimeFormat.yyyyMMddHHmmss;
            this.dtpOriginalDiseaseEndDate.Mask = "0000年90月90日";
            this.dtpOriginalDiseaseEndDate.Name = "dtpOriginalDiseaseEndDate";
            this.dtpOriginalDiseaseEndDate.Size = new System.Drawing.Size(127, 23);
            this.dtpOriginalDiseaseEndDate.TabIndex = 29065;
            this.dtpOriginalDiseaseEndDate.ValidatingType = typeof(System.DateTime);
            // 
            // dtpMetastasisBeginDate
            // 
            this.dtpMetastasisBeginDate.InsertKeyMode = System.Windows.Forms.InsertKeyMode.Overwrite;
            this.dtpMetastasisBeginDate.Location = new System.Drawing.Point(457, 154);
            this.dtpMetastasisBeginDate.m_EnmDateTimeFormat = com.digitalwave.Controls.EnmDateTimeFormat.yyyyMMddHHmmss;
            this.dtpMetastasisBeginDate.Mask = "0000年90月90日";
            this.dtpMetastasisBeginDate.Name = "dtpMetastasisBeginDate";
            this.dtpMetastasisBeginDate.Size = new System.Drawing.Size(127, 23);
            this.dtpMetastasisBeginDate.TabIndex = 29065;
            this.dtpMetastasisBeginDate.ValidatingType = typeof(System.DateTime);
            // 
            // dtpLymphBeginDate
            // 
            this.dtpLymphBeginDate.InsertKeyMode = System.Windows.Forms.InsertKeyMode.Overwrite;
            this.dtpLymphBeginDate.Location = new System.Drawing.Point(457, 118);
            this.dtpLymphBeginDate.m_EnmDateTimeFormat = com.digitalwave.Controls.EnmDateTimeFormat.yyyyMMddHHmmss;
            this.dtpLymphBeginDate.Mask = "0000年90月90日";
            this.dtpLymphBeginDate.Name = "dtpLymphBeginDate";
            this.dtpLymphBeginDate.Size = new System.Drawing.Size(127, 23);
            this.dtpLymphBeginDate.TabIndex = 29065;
            this.dtpLymphBeginDate.ValidatingType = typeof(System.DateTime);
            // 
            // dtpOriginalDiseaseBeginDate
            // 
            this.dtpOriginalDiseaseBeginDate.InsertKeyMode = System.Windows.Forms.InsertKeyMode.Overwrite;
            this.dtpOriginalDiseaseBeginDate.Location = new System.Drawing.Point(457, 82);
            this.dtpOriginalDiseaseBeginDate.m_EnmDateTimeFormat = com.digitalwave.Controls.EnmDateTimeFormat.yyyyMMddHHmmss;
            this.dtpOriginalDiseaseBeginDate.Mask = "0000年90月90日";
            this.dtpOriginalDiseaseBeginDate.Name = "dtpOriginalDiseaseBeginDate";
            this.dtpOriginalDiseaseBeginDate.Size = new System.Drawing.Size(127, 23);
            this.dtpOriginalDiseaseBeginDate.TabIndex = 29065;
            this.dtpOriginalDiseaseBeginDate.ValidatingType = typeof(System.DateTime);
            // 
            // panel7
            // 
            this.panel7.BackColor = System.Drawing.SystemColors.AppWorkspace;
            this.panel7.Controls.Add(this.radioButton6);
            this.panel7.Controls.Add(this.radioButton5);
            this.panel7.Location = new System.Drawing.Point(117, 297);
            this.panel7.Name = "panel7";
            this.panel7.Size = new System.Drawing.Size(200, 22);
            this.panel7.TabIndex = 29064;
            // 
            // radioButton6
            // 
            this.radioButton6.AccessibleDescription = "化疗用药及疗效>>无";
            this.radioButton6.AutoSize = true;
            this.radioButton6.Checked = true;
            this.radioButton6.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.radioButton6.Location = new System.Drawing.Point(51, 1);
            this.radioButton6.Name = "radioButton6";
            this.radioButton6.Size = new System.Drawing.Size(40, 18);
            this.radioButton6.TabIndex = 1;
            this.radioButton6.TabStop = true;
            this.radioButton6.Text = "无";
            this.radioButton6.UseVisualStyleBackColor = true;
            // 
            // radioButton5
            // 
            this.radioButton5.AccessibleDescription = "化疗用药及疗效>>有";
            this.radioButton5.AutoSize = true;
            this.radioButton5.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.radioButton5.Location = new System.Drawing.Point(9, 1);
            this.radioButton5.Name = "radioButton5";
            this.radioButton5.Size = new System.Drawing.Size(40, 18);
            this.radioButton5.TabIndex = 0;
            this.radioButton5.Text = "有";
            this.radioButton5.UseVisualStyleBackColor = true;
            this.radioButton5.CheckedChanged += new System.EventHandler(this.radioButton5_CheckedChanged);
            // 
            // tabPage10
            // 
            this.tabPage10.Controls.Add(this.label6);
            this.tabPage10.Controls.Add(this.m_dtpUpdateDate);
            this.tabPage10.Controls.Add(this.txtTotalAmt);
            this.tabPage10.Controls.Add(this.m_txtSign);
            this.tabPage10.Controls.Add(this.m_cmdSign);
            this.tabPage10.Controls.Add(this.txtNurseLevelII);
            this.tabPage10.Controls.Add(this.txtLongDistanctConsultation);
            this.tabPage10.Controls.Add(this.txtBloodType);
            this.tabPage10.Controls.Add(this.txtOtherAmt1);
            this.tabPage10.Controls.Add(this.txtNurseLevelI);
            this.tabPage10.Controls.Add(this.lblTotalAmt);
            this.tabPage10.Controls.Add(this.lblOtherAmt1);
            this.tabPage10.Controls.Add(this.txtBedAmt);
            this.tabPage10.Controls.Add(this.txtNurseAmt);
            this.tabPage10.Controls.Add(this.lblBedAmt);
            this.tabPage10.Controls.Add(this.lblSpecialNurse);
            this.tabPage10.Controls.Add(this.lblICU);
            this.tabPage10.Controls.Add(this.txtWMAmt);
            this.tabPage10.Controls.Add(this.lblInsuranceDesp1);
            this.tabPage10.Controls.Add(this.lblWMAmt);
            this.tabPage10.Controls.Add(this.lblUnit26);
            this.tabPage10.Controls.Add(this.lblCMFinishedAmt);
            this.tabPage10.Controls.Add(this.txtSpecialNurse);
            this.tabPage10.Controls.Add(this.txtCMFinishedAmt);
            this.tabPage10.Controls.Add(this.lblUnit25);
            this.tabPage10.Controls.Add(this.lblCMSemiFinishedTitle);
            this.tabPage10.Controls.Add(this.txtICU);
            this.tabPage10.Controls.Add(this.txtCMSemiFinishedAmt);
            this.tabPage10.Controls.Add(this.lblLongDistanceConsultation);
            this.tabPage10.Controls.Add(this.lblNurseAmt);
            this.tabPage10.Controls.Add(this.lblNurseLevelIII);
            this.tabPage10.Controls.Add(this.txtRadiationAmt);
            this.tabPage10.Controls.Add(this.lblNurseLevelI);
            this.tabPage10.Controls.Add(this.lblRadiationAmt);
            this.tabPage10.Controls.Add(this.lblUnit24);
            this.tabPage10.Controls.Add(this.txtAssayAmt);
            this.tabPage10.Controls.Add(this.txtNurseLevelIII);
            this.tabPage10.Controls.Add(this.lblAssayAmt);
            this.tabPage10.Controls.Add(this.lblUnit23);
            this.tabPage10.Controls.Add(this.txtO2Amt);
            this.tabPage10.Controls.Add(this.lblNurseLevelII);
            this.tabPage10.Controls.Add(this.lblO2);
            this.tabPage10.Controls.Add(this.txtBloodAmt);
            this.tabPage10.Controls.Add(this.lblUnit22);
            this.tabPage10.Controls.Add(this.lblBloodTran);
            this.tabPage10.Controls.Add(this.txtTreatmentAmt);
            this.tabPage10.Controls.Add(this.lblUnit21);
            this.tabPage10.Controls.Add(this.lblTreatmentAmt);
            this.tabPage10.Controls.Add(this.txtTOPLevel);
            this.tabPage10.Controls.Add(this.txtOperationAmt);
            this.tabPage10.Controls.Add(this.lblNurseLevel);
            this.tabPage10.Controls.Add(this.lblDeliveryChild);
            this.tabPage10.Controls.Add(this.lblUnit20);
            this.tabPage10.Controls.Add(this.lblOperationAmt);
            this.tabPage10.Controls.Add(this.txtDeliveryChildAmt);
            this.tabPage10.Controls.Add(this.lblUnit15);
            this.tabPage10.Controls.Add(this.lblCheckAmt);
            this.tabPage10.Controls.Add(this.lblConsultation);
            this.tabPage10.Controls.Add(this.txtCheckAmt);
            this.tabPage10.Controls.Add(this.txtConsultation);
            this.tabPage10.Controls.Add(this.lblAnaethisiaAmt);
            this.tabPage10.Controls.Add(this.lblUnit14);
            this.tabPage10.Controls.Add(this.txtAnaethesiaAmt);
            this.tabPage10.Controls.Add(this.txtOtherBlood);
            this.tabPage10.Controls.Add(this.txtBabyAmt);
            this.tabPage10.Controls.Add(this.lblOtherBlood);
            this.tabPage10.Controls.Add(this.txtAccompanyAmt);
            this.tabPage10.Controls.Add(this.lblUnit13);
            this.tabPage10.Controls.Add(this.txtWholeBlood);
            this.tabPage10.Controls.Add(this.txtOtherAmt2);
            this.tabPage10.Controls.Add(this.lblWholeBlood);
            this.tabPage10.Controls.Add(this.txtOtherAmt3);
            this.tabPage10.Controls.Add(this.lblUnit11);
            this.tabPage10.Controls.Add(this.lblBabyAmt);
            this.tabPage10.Controls.Add(this.txtPlasm);
            this.tabPage10.Controls.Add(this.lblAccompanyAmt);
            this.tabPage10.Controls.Add(this.lblPlasm);
            this.tabPage10.Controls.Add(this.lblComma);
            this.tabPage10.Controls.Add(this.lblPLT);
            this.tabPage10.Controls.Add(this.lblComma2);
            this.tabPage10.Controls.Add(this.lblUnit10);
            this.tabPage10.Controls.Add(this.lblCorpseCheck);
            this.tabPage10.Controls.Add(this.txtPLT);
            this.tabPage10.Controls.Add(this.gpbCorpseCheck);
            this.tabPage10.Controls.Add(this.lblRBCUnit);
            this.tabPage10.Controls.Add(this.gpbFirstCase);
            this.tabPage10.Controls.Add(this.txtRBC);
            this.tabPage10.Controls.Add(this.lblFirstCaseTitle);
            this.tabPage10.Controls.Add(this.lblBloodComponent);
            this.tabPage10.Controls.Add(this.lblModelCaseTitle);
            this.tabPage10.Controls.Add(this.gpbLine3);
            this.tabPage10.Controls.Add(this.gpbModelCase);
            this.tabPage10.Controls.Add(this.gpbBloodTransAction);
            this.tabPage10.Controls.Add(this.gpbFollow);
            this.tabPage10.Controls.Add(this.lblBloodTransAction);
            this.tabPage10.Controls.Add(this.txtFollow_Week);
            this.tabPage10.Controls.Add(this.gpbBloodRh);
            this.tabPage10.Controls.Add(this.txtFollow_Month);
            this.tabPage10.Controls.Add(this.lblBloodRh);
            this.tabPage10.Controls.Add(this.txtFollow_Year);
            this.tabPage10.Controls.Add(this.lblBloodType);
            this.tabPage10.Controls.Add(this.lblFollowYear);
            this.tabPage10.Controls.Add(this.lblFollowMonth);
            this.tabPage10.Controls.Add(this.lblWeek);
            this.tabPage10.Controls.Add(this.lblBloodTypeDesp);
            this.tabPage10.Controls.Add(this.lblFollowDate);
            this.tabPage10.Controls.Add(this.lblFollowTitle);
            this.tabPage10.ImageIndex = 5;
            this.tabPage10.Location = new System.Drawing.Point(4, 23);
            this.tabPage10.Name = "tabPage10";
            this.tabPage10.Padding = new System.Windows.Forms.Padding(3);
            this.tabPage10.Size = new System.Drawing.Size(789, 498);
            this.tabPage10.TabIndex = 4;
            this.tabPage10.Text = "住院费用";
            this.tabPage10.UseVisualStyleBackColor = true;
            // 
            // label6
            // 
            this.label6.AutoSize = true;
            this.label6.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.label6.Location = new System.Drawing.Point(12, 362);
            this.label6.Name = "label6";
            this.label6.Size = new System.Drawing.Size(189, 14);
            this.label6.TabIndex = 10000047;
            this.label6.Text = "新版住院病案首页使用日期：";
            this.label6.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            this.label6.Visible = false;
            // 
            // m_dtpUpdateDate
            // 
            this.m_dtpUpdateDate.AccessibleDescription = "手术日期";
            this.m_dtpUpdateDate.BorderColor = System.Drawing.Color.Black;
            this.m_dtpUpdateDate.CustomFormat = "yyyy年MM月dd日 HH:mm:ss";
            this.m_dtpUpdateDate.DropButtonBackColor = System.Drawing.Color.Gainsboro;
            this.m_dtpUpdateDate.DropButtonCursor = System.Windows.Forms.Cursors.Hand;
            this.m_dtpUpdateDate.DropButtonForeColor = System.Drawing.Color.Black;
            this.m_dtpUpdateDate.flatFont = new System.Drawing.Font("宋体", 12F);
            this.m_dtpUpdateDate.Font = new System.Drawing.Font("宋体", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_dtpUpdateDate.Format = System.Windows.Forms.DateTimePickerFormat.Custom;
            this.m_dtpUpdateDate.Location = new System.Drawing.Point(207, 357);
            this.m_dtpUpdateDate.m_BlnOnlyTime = false;
            this.m_dtpUpdateDate.m_EnmVisibleFlag = com.digitalwave.Utility.Controls.ctlTimePicker.enmDateTimeFlag.Second;
            this.m_dtpUpdateDate.MaxDate = new System.DateTime(9998, 12, 31, 0, 0, 0, 0);
            this.m_dtpUpdateDate.MinDate = new System.DateTime(1753, 1, 1, 0, 0, 0, 0);
            this.m_dtpUpdateDate.Name = "m_dtpUpdateDate";
            this.m_dtpUpdateDate.ReadOnly = false;
            this.m_dtpUpdateDate.Size = new System.Drawing.Size(214, 22);
            this.m_dtpUpdateDate.TabIndex = 10000046;
            this.m_dtpUpdateDate.TextBackColor = System.Drawing.Color.White;
            this.m_dtpUpdateDate.TextForeColor = System.Drawing.Color.Black;
            this.m_dtpUpdateDate.Visible = false;
            // 
            // m_txtSign
            // 
            this.m_txtSign.AccessibleDescription = "";
            this.m_txtSign.Location = new System.Drawing.Point(567, 357);
            this.m_txtSign.Name = "m_txtSign";
            this.m_txtSign.ReadOnly = true;
            this.m_txtSign.Size = new System.Drawing.Size(179, 23);
            this.m_txtSign.TabIndex = 10000045;
            this.m_txtSign.Visible = false;
            // 
            // m_cmdSign
            // 
            this.m_cmdSign.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdSign.DefaultScheme = true;
            this.m_cmdSign.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdSign.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdSign.Hint = "";
            this.m_cmdSign.Location = new System.Drawing.Point(495, 357);
            this.m_cmdSign.Name = "m_cmdSign";
            this.m_cmdSign.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdSign.Size = new System.Drawing.Size(72, 24);
            this.m_cmdSign.TabIndex = 10000044;
            this.m_cmdSign.Text = "签名:";
            this.m_cmdSign.Visible = false;
            // 
            // m_lblQueryTips
            // 
            this.m_lblQueryTips.AutoSize = true;
            this.m_lblQueryTips.ForeColor = System.Drawing.SystemColors.ActiveCaption;
            this.m_lblQueryTips.Location = new System.Drawing.Point(9, 598);
            this.m_lblQueryTips.Name = "m_lblQueryTips";
            this.m_lblQueryTips.Size = new System.Drawing.Size(119, 14);
            this.m_lblQueryTips.TabIndex = 1000000001;
            this.m_lblQueryTips.Text = "按F9显示查询编码";
            this.m_lblQueryTips.Visible = false;
            // 
            // m_cmdCommit
            // 
            this.m_cmdCommit.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(236)))), ((int)(((byte)(233)))), ((int)(((byte)(216)))));
            this.m_cmdCommit.DefaultScheme = true;
            this.m_cmdCommit.DialogResult = System.Windows.Forms.DialogResult.None;
            this.m_cmdCommit.Font = new System.Drawing.Font("宋体", 10.5F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));
            this.m_cmdCommit.Hint = "";
            this.m_cmdCommit.Location = new System.Drawing.Point(636, 30);
            this.m_cmdCommit.Name = "m_cmdCommit";
            this.m_cmdCommit.Scheme = PinkieControls.ButtonXP.Schemes.Blue;
            this.m_cmdCommit.Size = new System.Drawing.Size(64, 28);
            this.m_cmdCommit.TabIndex = 1000000000;
            this.m_cmdCommit.Text = "提交";
            this.m_cmdCommit.Click += new System.EventHandler(this.m_cmdCommit_Click);
            // 
            // button1
            // 
            this.button1.Location = new System.Drawing.Point(-9, 120);
            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(0, 0);
            this.button1.TabIndex = 29066;
            this.button1.Text = "button1";
            this.button1.UseVisualStyleBackColor = true;
            // 
            // m_timShowTips
            // 
            this.m_timShowTips.Interval = 500;
            this.m_timShowTips.Tick += new System.EventHandler(this.m_timShowTips_Tick);
            // 
            // frmInHospitalMainRecord_2009
            // 
            this.AccessibleDescription = "住 院 病 案 首 页";
            this.BackColor = System.Drawing.SystemColors.Control;
            this.ClientSize = new System.Drawing.Size(873, 666);
            this.Controls.Add(this.button1);
            this.Controls.Add(this.m_lblQueryTips);
            this.Controls.Add(this.tabControl2);
            this.Controls.Add(this.lblPatientHistoryNO);
            this.Controls.Add(this.txtPatientHistoryNO);
            this.Controls.Add(this.trvTime);
            this.Icon = ((System.Drawing.Icon)(resources.GetObject("$this.Icon")));
            this.Name = "frmInHospitalMainRecord_2009";
            this.Text = "住院病案首页";
            this.Load += new System.EventHandler(this.frmInHospitalMainRecord_Load);
            this.Controls.SetChildIndex(this.m_pnlNewBase, 0);
            this.Controls.SetChildIndex(this.m_cmdPre, 0);
            this.Controls.SetChildIndex(this.m_cmdNext, 0);
            this.Controls.SetChildIndex(this.m_cmdModifyPatientInfo, 0);
            this.Controls.SetChildIndex(this.m_cboArea, 0);
            this.Controls.SetChildIndex(this.m_cboDept, 0);
            this.Controls.SetChildIndex(this.txtInPatientID, 0);
            this.Controls.SetChildIndex(this.m_txtBedNO, 0);
            this.Controls.SetChildIndex(this.m_txtPatientName, 0);
            this.Controls.SetChildIndex(this.chkModifyWithoutMatk, 0);
            this.Controls.SetChildIndex(this.trvTime, 0);
            this.Controls.SetChildIndex(this.txtPatientHistoryNO, 0);
            this.Controls.SetChildIndex(this.lblAreaTitle, 0);
            this.Controls.SetChildIndex(this.lblAgeTitle, 0);
            this.Controls.SetChildIndex(this.m_lblForTitle, 0);
            this.Controls.SetChildIndex(this.lblBedNoTitle, 0);
            this.Controls.SetChildIndex(this.lblSexTitle, 0);
            this.Controls.SetChildIndex(this.lblNameTitle, 0);
            this.Controls.SetChildIndex(this.lblInHospitalNoTitle, 0);
            this.Controls.SetChildIndex(this.lblPatientHistoryNO, 0);
            this.Controls.SetChildIndex(this.m_lsvPatientName, 0);
            this.Controls.SetChildIndex(this.m_lsvBedNO, 0);
            this.Controls.SetChildIndex(this.m_lsvInPatientID, 0);
            this.Controls.SetChildIndex(this.lblDept, 0);
            this.Controls.SetChildIndex(this.m_cmdNewTemplate, 0);
            this.Controls.SetChildIndex(this.tabControl2, 0);
            this.Controls.SetChildIndex(this.m_lblQueryTips, 0);
            this.Controls.SetChildIndex(this.lblSex, 0);
            this.Controls.SetChildIndex(this.lblAge, 0);
            this.Controls.SetChildIndex(this.button1, 0);
            this.m_pnlNewBase.ResumeLayout(false);
            ((System.ComponentModel.ISupportInitialize)(this.dtgOperation)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dtgBaby)).EndInit();
            this.gpbRTMode.ResumeLayout(false);
            this.gpbRTEquipment.ResumeLayout(false);
            this.gpbRTRule.ResumeLayout(false);
            this.gpbOriginalDisease.ResumeLayout(false);
            this.gpbLymph.ResumeLayout(false);
            this.gpbChemotherapyMode.ResumeLayout(false);
            this.gpbChemotherapyRule.ResumeLayout(false);
            ((System.ComponentModel.ISupportInitialize)(this.dtgChemotherapy)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dtgChangeDept2)).EndInit();
            this.gpbCondictionWhenIn.ResumeLayout(false);
            this.gpbQuality.ResumeLayout(false);
            this.gpbCorpseCheck.ResumeLayout(false);
            this.gpbFirstCase.ResumeLayout(false);
            this.gpbModelCase.ResumeLayout(false);
            this.gpbBloodTransAction.ResumeLayout(false);
            this.gpbFollow.ResumeLayout(false);
            this.gpbBloodRh.ResumeLayout(false);
            this.m_grpDrugAllergy.ResumeLayout(false);
            this.m_grpDrugAllergy.PerformLayout();
            this.m_grpAccordWithDiagnosisTitle.ResumeLayout(false);
            this.m_grpAccordWithDiagnosisTitle.PerformLayout();
            this.panel2.ResumeLayout(false);
            this.panel2.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dgDiagnosis1)).EndInit();
            this.panel1.ResumeLayout(false);
            this.panel1.PerformLayout();
            this.panel3.ResumeLayout(false);
            this.panel3.PerformLayout();
            this.tabControl2.ResumeLayout(false);
            this.tabPage6.ResumeLayout(false);
            this.panel4.ResumeLayout(false);
            this.panel4.PerformLayout();
            this.tabPage7.ResumeLayout(false);
            this.tabPage7.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.dgDiagnosis2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.dgDiagnosis3)).EndInit();
            this.tabPage8.ResumeLayout(false);
            this.panel6.ResumeLayout(false);
            this.panel6.PerformLayout();
            this.panel5.ResumeLayout(false);
            this.panel5.PerformLayout();
            this.tabPage9.ResumeLayout(false);
            this.tabPage9.PerformLayout();
            this.panel7.ResumeLayout(false);
            this.panel7.PerformLayout();
            this.tabPage10.ResumeLayout(false);
            this.tabPage10.PerformLayout();
            this.ResumeLayout(false);
            this.PerformLayout();

        }


        #endregion

        #region 初始化DataTable
        /// <summary>
        /// 初始化DataTable
        /// </summary>
        private void m_mthInitDataTable()
        {
            DataColumn dtcTemp;

            #region 诊断
            m_dtbInHospitalDiagnosis = new DataTable("InDiagnosis");
            DataColumn dcInHos = this.m_dtbInHospitalDiagnosis.Columns.Add("诊断内容");
            dcInHos.DefaultValue = "";
            DataColumn dcInHosICD = this.m_dtbInHospitalDiagnosis.Columns.Add("ICD码");
            dcInHosICD.DefaultValue = "";

            this.m_dgtbInDia.TextBox.KeyDown += new KeyEventHandler(this.m_mthEvent_KeyDown);
            this.m_dgtbInDiaICD.TextBox.KeyDown += new KeyEventHandler(this.m_mthEvent_KeyDown);
            this.m_dgtbInDia.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dgtbInDiaICD.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            dgDiagnosis1.DataSource = m_dtbInHospitalDiagnosis;

            m_dtbOtherDiagnosis = new DataTable("OtherDiagnosis");
            DataColumn dc = this.m_dtbOtherDiagnosis.Columns.Add("诊断内容");
            dc.DefaultValue = "";

            DataColumn dcICD = this.m_dtbOtherDiagnosis.Columns.Add("ICD码");
            dcICD.DefaultValue = "";

            dtcTemp = new DataColumn("疗效");
            dtcTemp.DefaultValue = "";
            this.m_dtbOtherDiagnosis.Columns.Add(dtcTemp);

            this.m_dgtbOtherDia.TextBox.KeyDown += new KeyEventHandler(this.m_mthEvent_KeyDown);
            this.m_dgtbOtherDiaICD.TextBox.KeyDown += new KeyEventHandler(this.m_mthEvent_KeyDown);
            this.m_dgtbOtherDia.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dgtbOtherDiaICD.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dgDiagnosis3.DataSource = m_dtbOtherDiagnosis;

            ComboBox cmbFunctionArea = new ComboBox();
            cmbFunctionArea.Items.AddRange(new object[] { "治愈", "好转", "未愈", "死亡", "其他" });
            cmbFunctionArea.Cursor = Cursors.Arrow;
            cmbFunctionArea.DropDownStyle = ComboBoxStyle.DropDownList;
            cmbFunctionArea.Dock = DockStyle.Fill;
            //在选定项发生更改并且提交了该更改后发生 
            cmbFunctionArea.SelectionChangeCommitted += new System.EventHandler(cmbFunctionArea_SelectionChangeCommitted);
            cmbFunctionArea.Enter += new EventHandler(cmbFunctionArea_Enter);
            ///把ComboBox添加到DataGridTableStyle的第一列
            m_dtcOtherDiaResult.TextBox.Controls.Add(cmbFunctionArea);


            m_dtbInfectionDiagnosis = new DataTable("InfectionDiagnosis");
            DataColumn dcInfection = this.m_dtbInfectionDiagnosis.Columns.Add("诊断内容");

            DataColumn dcInfectionICD = this.m_dtbInfectionDiagnosis.Columns.Add("ICD码");
            dcInfectionICD.DefaultValue = "";

            dtcTemp = new DataColumn("疗效");
            dtcTemp.DefaultValue = "";
            m_dtbInfectionDiagnosis.Columns.Add(dtcTemp);

            this.m_dgtbInfectionDia.TextBox.KeyDown += new KeyEventHandler(this.m_mthEvent_KeyDown);
            this.m_dgtbInfectionDiaICD.TextBox.KeyDown += new KeyEventHandler(this.m_mthEvent_KeyDown);
            this.m_dgtbInfectionDia.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dgtbInfectionDiaICD.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dgDiagnosis2.DataSource = m_dtbInfectionDiagnosis;

            ComboBox cmbFunctionAreaI = new ComboBox();
            cmbFunctionAreaI.Items.AddRange(new object[] { "治愈", "好转", "未愈", "死亡", "其他" });
            cmbFunctionAreaI.Cursor = Cursors.Arrow;
            cmbFunctionAreaI.DropDownStyle = ComboBoxStyle.DropDownList;
            cmbFunctionAreaI.Dock = DockStyle.Fill;
            //在选定项发生更改并且提交了该更改后发生 
            cmbFunctionAreaI.SelectionChangeCommitted += new System.EventHandler(cmbFunctionArea_SelectionChangeCommitted);
            cmbFunctionAreaI.Enter += new EventHandler(cmbFunctionAreaI_Enter);
            ///把ComboBox添加到DataGridTableStyle的第一列
            m_dtcInfectionResult.TextBox.Controls.Add(cmbFunctionAreaI);
            #endregion

            #region 手术麻醉
            m_dtbOperationDetail = new DataTable("OperationDetail");
            dtcTemp = new DataColumn("手术、操作编码");
            dtcTemp.DefaultValue = "";
            this.m_dtbOperationDetail.Columns.Add(dtcTemp);//0
            dtcTemp = new DataColumn("手术、操作日期");
            dtcTemp.DataType = typeof(System.DateTime);
            dtcTemp.DefaultValue = DateTime.Now.ToString("yyyy-MM-dd HH:mm");
            this.m_dtbOperationDetail.Columns.Add(dtcTemp);//1
            dtcTemp = new DataColumn("手术、操作名称");
            dtcTemp.DefaultValue = "";
            this.m_dtbOperationDetail.Columns.Add(dtcTemp);//2
            dtcTemp = new DataColumn("术者");
            dtcTemp.DefaultValue = "";
            this.m_dtbOperationDetail.Columns.Add(dtcTemp);//3
            dtcTemp = new DataColumn("Ⅰ助");
            dtcTemp.DefaultValue = "";
            this.m_dtbOperationDetail.Columns.Add(dtcTemp);//4
            dtcTemp = new DataColumn("Ⅱ助");
            dtcTemp.DefaultValue = "";
            this.m_dtbOperationDetail.Columns.Add(dtcTemp);//5
            dtcTemp = new DataColumn("麻醉方式");
            dtcTemp.DefaultValue = "";
            this.m_dtbOperationDetail.Columns.Add(dtcTemp);//6
            dtcTemp = new DataColumn("切口愈合等级");
            dtcTemp.DefaultValue = "";
            this.m_dtbOperationDetail.Columns.Add(dtcTemp);//7
            dtcTemp = new DataColumn("麻醉医师");
            dtcTemp.DefaultValue = "";
            this.m_dtbOperationDetail.Columns.Add(dtcTemp);//8
            this.m_dtbOperationDetail.Columns.Add("AnesthesiaModeID");//9
            this.m_dtbOperationDetail.Columns.Add("OperatorID");//10
            this.m_dtbOperationDetail.Columns.Add("Assistant1ID");//11
            this.m_dtbOperationDetail.Columns.Add("Assistant2ID");//12
            this.m_dtbOperationDetail.Columns.Add("AnesthetistID");//13
            this.dtgOperation.DataSource = m_dtbOperationDetail;
            DateTimePicker dtpOperationDate = new DateTimePicker();
            dtpOperationDate.Dock = DockStyle.Fill;
            dtpOperationDate.Name = "dtpOperationDate";

            dtpOperationDate.TextChanged += new EventHandler(dtp_OperationDateValueChanged);
            dtpOperationDate.CloseUp += new EventHandler(dtp_OperationDateValueChanged);
            dtpOperationDate.GotFocus += new EventHandler(dtp_OperationDateValueChanged);
            dtpOperationDate.MouseHover += new EventHandler(dtp_OperationDateValueChanged);
            m_dtcOperationDate.TextBox.Controls.Add(dtpOperationDate);
            ComboBox cmbLevel = new ComboBox();
            cmbLevel.Items.AddRange(new object[] { "Ⅰ/甲", "Ⅰ/乙", "Ⅰ/丙", "Ⅱ/甲", "Ⅱ/乙", "Ⅱ/丙", "III/甲", "III/乙", "III/丙" });
            cmbLevel.Cursor = Cursors.Arrow;
            cmbLevel.DropDownStyle = ComboBoxStyle.DropDownList;
            cmbLevel.Dock = DockStyle.Fill;
            cmbLevel.Name = "cmbLevel";
            //在选定项发生更改并且提交了该更改后发生 
            cmbLevel.SelectionChangeCommitted += new System.EventHandler(cmbFunctionArea_SelectionChangeCommitted);
            cmbLevel.Enter += new EventHandler(cmbLevel_Enter);
            ///把ComboBox添加到DataGridTableStyle的第一列
            m_dtcCutLevel.TextBox.Controls.Add(cmbLevel);
            #region 麻醉及手术名称相关事件定义
            //this.m_dtcOperationDate.TextBox.TextChanged += new EventHandler(OperationDate_TextChanged);
            //this.m_dtcAanaesthesiaMode.TextBox.GotFocus += new EventHandler(dtcAanaesthesiaMode_GotFocus);
            this.m_dtcOperationID.TextBox.KeyDown += new KeyEventHandler(m_mthEvent_KeyDown);
            this.m_dtcOperationName.TextBox.KeyDown += new KeyEventHandler(m_mthEvent_KeyDown);
            this.m_dtcAnaesthesiaMode.TextBox.KeyDown += new KeyEventHandler(m_mthEvent_KeyDown);
            #endregion

            #region 手术、麻醉医师查询相关事件定义
            this.m_dtcOperator.TextBox.KeyDown += new KeyEventHandler(m_mthEvent_KeyDown);

            this.m_dtcAssistant1.TextBox.KeyDown += new KeyEventHandler(m_mthEvent_KeyDown);

            this.m_dtcAssistant2.TextBox.KeyDown += new KeyEventHandler(m_mthEvent_KeyDown);

            this.m_dtcAnaesthetist.TextBox.KeyDown += new KeyEventHandler(m_mthEvent_KeyDown);
            #endregion

            this.m_dtcOperationID.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dtcOperationDate.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dtcOperationName.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dtcOperator.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dtcAssistant2.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dtcAssistant1.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dtcAnaesthesiaMode.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dtcCutLevel.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.m_dtcAnaesthetist.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            //this.m_dtcOperationDate.TextBox.Leave += new EventHandler(m_mthDate_Change);
            this.dtgOperation.DataSource = m_dtbOperationDetail;

            #region DataGrid模糊查询初始化

            //m_objGridListView0 = new clsGridListView(dtgOperation, m_dtcOperator, lsvOperationEmployee, new EventHandler(m_objAddGridListViewItemArr));
            //m_objGridListView1 = new clsGridListView(dtgOperation, m_dtcAssistant1, lsvOperationEmployee, new EventHandler(m_objAddGridListViewItemArr));
            //m_objGridListView2 = new clsGridListView(dtgOperation, m_dtcAssistant2, lsvOperationEmployee, new EventHandler(m_objAddGridListViewItemArr));
            //m_objGridListView3 = new clsGridListView(dtgOperation, m_dtcAnaesthetist, lsvOperationEmployee, new EventHandler(m_objAddGridListViewItemArr));
            //m_objGridListView4 = new clsGridListView(dtgOperation, m_dtcAnaesthesiaMode, lsvAanaesthesiaMode, new EventHandler(m_objAddGridAanaesthesiaModeListViewItemArr));

            m_hasAanaesthesiaMode = new Hashtable();
            #endregion
            #endregion

            #region 产科
            m_dtbBaby = new DataTable("Baby");

            dtcTemp = new DataColumn("婴儿序号");
            dtcTemp.DataType = typeof(int);
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("男性");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("女性");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("活产");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("死产");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("死胎");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            this.m_dtbBaby.Columns.Add("婴儿体重(g)");
            dtcTemp = new DataColumn("死亡");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("转科");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("出院");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("自然");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("I度窒息");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("II度窒息");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbBaby.Columns.Add(dtcTemp);
            this.m_dtbBaby.Columns.Add("医院感染次数");
            this.m_dtbBaby.Columns.Add("主要医院感染名称");
            this.m_dtbBaby.Columns.Add("ICD10");
            this.m_dtbBaby.Columns.Add("抢救次数");
            this.m_dtbBaby.Columns.Add("抢救成功次数");
            dtgBaby.DataSource = m_dtbBaby;
            m_dtbBaby.RowChanged += new DataRowChangeEventHandler(m_mthRowChanged);
            m_dtbBaby.RowDeleted += new DataRowChangeEventHandler(m_mthRowChanged);
            //m_dtbBaby.ColumnChanged += new DataColumnChangeEventHandler(m_mthColumnChenged);
            this.dtcSeqNo.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dtcWeight.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dtcInfectionTimes.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dtcInfectionName.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dtcICD10.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dtcSalveTimes.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dtcSalveSuccessTimes.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            dtcWeight.TextBox.KeyPress += new KeyPressEventHandler(dtcWeight_KeyDown);


            #endregion

            #region 肿瘤专科
            m_dtbChemotherapy = new DataTable("Chemotherapy");
            dtcTemp = new DataColumn("日期");
            dtcTemp.DataType = typeof(System.DateTime);
            dtcTemp.DefaultValue = DateTime.Now.ToString("yyyy-MM-dd HH:mm");
            this.m_dtbChemotherapy.Columns.Add(dtcTemp);
            this.m_dtbChemotherapy.Columns.Add("药品名称（剂量）");
            this.m_dtbChemotherapy.Columns.Add("疗程");
            dtcTemp = new DataColumn("疗效消失(CR)");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbChemotherapy.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("显效(PR)");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbChemotherapy.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("好转(MR)");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbChemotherapy.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("不变(S)");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbChemotherapy.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("恶化(P)");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbChemotherapy.Columns.Add(dtcTemp);
            dtcTemp = new DataColumn("未定(NA)");
            dtcTemp.DataType = typeof(bool);
            dtcTemp.DefaultValue = false;
            this.m_dtbChemotherapy.Columns.Add(dtcTemp);
            dtgChemotherapy.DataSource = m_dtbChemotherapy;
            this.dtcDate.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dtcMedicineName.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            this.dtcPeriod.TextBox.DoubleClick += new EventHandler(m_dtgRecord_DoubleClick);
            DateTimePicker dtpChemotherapyDate = new DateTimePicker();
            dtpChemotherapyDate.Name = "dtpChemotherapyDate";
            dtpChemotherapyDate.Dock = DockStyle.Fill;
            dtpChemotherapyDate.CloseUp += new EventHandler(dtp_ChemotherapyDateValueChanged);
            dtpChemotherapyDate.LostFocus += new EventHandler(dtp_ChemotherapyDateValueChanged);
            dtcDate.TextBox.Controls.Add(dtpChemotherapyDate);
            //this.dtcDate.TextBox.Leave += new EventHandler(m_mthDate_Change);
            #endregion
        }
        private void dtp_OperationDateValueChanged(object sender, EventArgs e)
        {
            this.dtgOperation[this.dtgOperation.CurrentCell] = ((DateTimePicker)sender).Value.ToString("yyyy-MM-dd");
        }
        private void dtp_ChemotherapyDateValueChanged(object sender, EventArgs e)
        {
            this.dtgChemotherapy[this.dtgChemotherapy.CurrentCell] = ((DateTimePicker)sender).Value.ToString("yyyy-MM-dd");
        }
        /// <summary>
        /// 当前DataGird
        /// </summary>
        string strControl = string.Empty;

        private void cmbFunctionArea_Enter(object sender, EventArgs e)
        {
            strControl = "dgDiagnosis3";
        }

        private void cmbFunctionAreaI_Enter(object sender, EventArgs e)
        {
            strControl = "dgDiagnosis2";
        }
        private void cmbLevel_Enter(object sender, EventArgs e)
        {
            strControl = "dtgOperation";
        }
        DataRow drCurrent1 = null;
        private void cmbFunctionArea_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if (strControl == "dgDiagnosis2")
            {
                if (m_dtbInfectionDiagnosis.Rows.Count > 1)
                {
                    if (m_dtbInfectionDiagnosis.Rows.Count >= dgDiagnosis2.CurrentRowIndex)
                    {
                        for (int i = 0; i < m_dtbInfectionDiagnosis.Rows.Count; i++)
                        {
                            drCurrent1 = m_dtbInfectionDiagnosis.Rows[i];

                            if (drCurrent1.RowState == DataRowState.Deleted || drCurrent1.RowState == DataRowState.Detached)
                            {
                                m_dtbInfectionDiagnosis.AcceptChanges();
                                break;
                            }
                        }
                    }
                }
                dgDiagnosis2.BindingContext[dgDiagnosis2.DataSource, dgDiagnosis2.DataMember].EndCurrentEdit();
                if (dgDiagnosis2.CurrentRowIndex >= m_dtbInfectionDiagnosis.Rows.Count)
                {
                    DataRow drTemp = m_dtbInfectionDiagnosis.NewRow();
                    drTemp[0] = dgDiagnosis2[dgDiagnosis2.CurrentRowIndex, 0].ToString();
                    drTemp[1] = dgDiagnosis2[dgDiagnosis2.CurrentRowIndex, 1].ToString();
                    drTemp[2] = ((ComboBox)sender).SelectedItem.ToString();
                    m_dtbInfectionDiagnosis.Rows.Add(drTemp);
                }
                else
                {
                    m_dtbInfectionDiagnosis.Rows[dgDiagnosis2.CurrentRowIndex][2] = ((ComboBox)sender).SelectedItem.ToString();
                }
                return;

            }
            else if (strControl == "dgDiagnosis3")
            {
                int intCount = m_dtbOtherDiagnosis.Rows.Count;
                int intCurrent = dgDiagnosis3.CurrentRowIndex;
                if (m_dtbOtherDiagnosis.Rows.Count > 1)
                {
                    if (intCount >= intCurrent)
                    {
                        for (int i = 0; i < intCount; i++)
                        {
                            drCurrent1 = m_dtbOtherDiagnosis.Rows[i];
                            if (drCurrent1.RowState == DataRowState.Deleted || drCurrent1.RowState == DataRowState.Detached)
                            {
                                m_dtbOtherDiagnosis.AcceptChanges();
                                //intCount -= 1;
                                break;
                            }
                        }
                    }
                }
                dgDiagnosis3.BindingContext[dgDiagnosis3.DataSource, dgDiagnosis3.DataMember].EndCurrentEdit();
                if (dgDiagnosis3.CurrentRowIndex >= m_dtbOtherDiagnosis.Rows.Count)
                {
                    DataRow drTemp = m_dtbOtherDiagnosis.NewRow();
                    drTemp[0] = dgDiagnosis3[dgDiagnosis3.CurrentRowIndex, 0].ToString();
                    drTemp[1] = dgDiagnosis3[dgDiagnosis3.CurrentRowIndex, 1].ToString();
                    drTemp[2] = ((ComboBox)sender).SelectedItem.ToString();
                    m_dtbOtherDiagnosis.Rows.Add(drTemp);
                }
                else
                {
                    m_dtbOtherDiagnosis.Rows[dgDiagnosis3.CurrentRowIndex][2] = ((ComboBox)sender).SelectedItem.ToString();
                }
                return;

            }
            else if (strControl == "dtgOperation")
            {
                if (m_dtbOperationDetail.Rows.Count > 1)
                {
                    if (m_dtbOperationDetail.Rows.Count >= dtgOperation.CurrentRowIndex)
                    {
                        for (int i = 0; i < m_dtbOperationDetail.Rows.Count; i++)
                        {
                            drCurrent1 = m_dtbOperationDetail.Rows[i];

                            if (drCurrent1.RowState == DataRowState.Deleted || drCurrent1.RowState == DataRowState.Detached)
                            {
                                m_dtbOperationDetail.AcceptChanges();
                                break;
                            }
                        }
                    }
                }
                dtgOperation.BindingContext[dtgOperation.DataSource, dtgOperation.DataMember].EndCurrentEdit();
                if (dtgOperation.CurrentRowIndex >= m_dtbOperationDetail.Rows.Count)
                {
                    DataRow drTemp = m_dtbOperationDetail.NewRow();
                    drTemp[0] = dtgOperation[dtgOperation.CurrentRowIndex, 0].ToString();
                    drTemp[1] = dtgOperation[dtgOperation.CurrentRowIndex, 1].ToString();
                    drTemp[2] = dtgOperation[dtgOperation.CurrentRowIndex, 2].ToString();
                    drTemp[3] = dtgOperation[dtgOperation.CurrentRowIndex, 3].ToString();
                    drTemp[4] = dtgOperation[dtgOperation.CurrentRowIndex, 4].ToString();
                    drTemp[5] = dtgOperation[dtgOperation.CurrentRowIndex, 5].ToString();
                    drTemp[6] = dtgOperation[dtgOperation.CurrentRowIndex, 6].ToString();
                    drTemp[7] = ((ComboBox)sender).SelectedItem.ToString();
                    drTemp[8] = dtgOperation[dtgOperation.CurrentRowIndex, 8].ToString();

                    m_dtbOperationDetail.Rows.Add(drTemp);
                }
                else
                {
                    m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][7] = ((ComboBox)sender).SelectedItem.ToString();
                }
                return;
            }
        }
        #endregion



        private void frmInHospitalMainRecord_Load(object sender, System.EventArgs e)
        {
            if (m_BlnNeedContextMenu)
                m_mthAddRichTemplateInContainer(this);
            clsAnaesthesiaModeInOperation[] m_objAnaesthesiaModeArr = new clsOperationRecordDomain().m_objGetAnaesthesiaMode();

            for (int i1 = 0; i1 < m_objAnaesthesiaModeArr.Length; i1++)
            {
                m_hasAanaesthesiaMode.Add(m_objAnaesthesiaModeArr[i1].strAnaesthesiaModeID, m_objAnaesthesiaModeArr[i1].strAnaesthesiaModeName);
            }
            m_mthSetQuickKeys();
            //			lblAreaTitle.Visible=false;
            //			m_cboArea.Visible =false;
            //			lblBedNoTitle.Visible =false;
            //			m_txtBedNO.Visible=false;
            //			m_lsvInPatientID.Visible = false;
            m_mthInitGroupBoxTagValue();
            //			txtInPatientID.Focus();


            m_mthfrmLoad();

            txtDiagnosis.Focus();
            m_mthGetDistrict("0", ref m_cboProvince);
            if (m_cboProvince.GetItemsCount() != 0)
                m_cboProvince.SelectedIndex = 0;

            m_cboMainSeq.SelectedIndex = 0;
            base.m_mthAssociateComboBoxItemEvent(m_cboModeOfPayment);

            this.rdbNormal.Checked = true;
            gpbCondictionWhenIn.Tag = "2";
        }

        private void trvTime_AfterSelect(object sender, System.Windows.Forms.TreeViewEventArgs e)
        {
            m_mthRecordChangedToSave();

            m_cmdCommit.Enabled = false;
            m_bolIfHasSave = false;
            m_strOpenDate = null;
            m_txtFocusedRichTextBox = null;
            m_RtbCurrentTextBox = null;
            m_mthCleanUpPatientInHospitalMainRecrodInfo();
            m_mthCleanUpPatientDetailInfo();
            if (trvTime.SelectedNode.Tag == null)
            {
                m_mthSetControlReadOnly(this, true);
                //当前处于禁止输入状态
                MDIParent.m_mthChangeFormText(this, MDIParent.enmFormEditStatus.None);
                m_mthAddFormStatusForClosingSave();
                return;

            }
            m_cmdCommit.Enabled = true;
            //设置病人当次住院的基本信息 更新信息
            m_mthOnlySetPatientInfo(m_objSelectedPatient);
            m_objSelectedPatient.m_ObjPeopleInfo = m_objSelectedPatient.m_ObjInBedInfo.m_objGetSessionByIndex(trvTime.Nodes[0].Nodes.Count - trvTime.SelectedNode.Index - 1).m_ObjPeopleInfo;

            m_mthSetPatientCurrentInHospitalDeptInfo();

            m_mthIsReadOnly();
            if (!m_blnCanShowRecordContent())
            {
                clsPublicFunction.ShowInformationMessageBox("该病案已归档，当前用户没有查阅权限");
                return;
            }

            m_mthDiaplayDetail();
            m_mthSetControlReadOnly(this, false);
        }

        /// <summary>
        /// 读取手术记录单的共享数据
        /// </summary>
        private void m_mthLoadOperationInfo()
        {
            if (m_objSelectedPatient != null)
            {
                clsOperationRecordDoctorShareDomain.stuBaseOperationValue[] stuValueArr;
                long lngRes = m_objShareDomain.m_lngGetBaseOperationValueArr(m_objSelectedPatient.m_StrInPatientID, m_objSelectedPatient.m_DtmSelectedInDate.ToString("yyyy-MM-dd HH:mm:ss"), out stuValueArr);

                if (lngRes > 0 && stuValueArr != null)
                {
                    for (int i = 0; i < stuValueArr.Length; i++)
                    {
                        object[] objValue = new object[14];
                        objValue[0] = "";//操作编码
                        objValue[1] = stuValueArr[i].m_strOperationBeginDate;
                        objValue[2] = stuValueArr[i].m_strOperationName;
                        objValue[3] = stuValueArr[i].m_strOperationDoctorName;
                        objValue[4] = stuValueArr[i].m_strFirstAssistantName;
                        objValue[5] = stuValueArr[i].m_strSecondAssistantName;
                        objValue[6] = stuValueArr[i].m_strAnaesthesiaCategoryDosage;
                        objValue[7] = "/";
                        objValue[8] = stuValueArr[i].m_strAnaesther;
                        objValue[9] = "";//麻醉方式的ID
                        objValue[10] = stuValueArr[i].m_strOperationDoctorID;
                        objValue[11] = stuValueArr[i].m_strFirstAssistantID;
                        objValue[12] = stuValueArr[i].m_strSecondAssistantID;
                        objValue[13] = "";//麻醉医师的ID

                        m_dtbOperationDetail.Rows.Add(objValue);
                    }
                }
            }
        }

        #region 判断该次住院的住院病案首页是否已经生成过
        /// <summary>
        /// 判断该次住院的住院病案首页是否已经生成过
        /// </summary>
        private void m_mthCheckIfHasSave(string m_strInPatientDate)
        {
            if (m_strInPatientDate == null || m_strInPatientDate == "")
            {
                m_bolIfHasSave = false;
                return;
            }
            m_strOpenDate = null;
            long lngRes = m_objDomain.m_lngGetOpenDateInfo(m_objSelectedPatient.m_StrInPatientID, m_strInPatientDate, out m_strOpenDate);
            if (lngRes < 1)
            {
                m_mthShowDBError();
                return;
            }
            if (m_strOpenDate == null || m_strOpenDate == "")
            {
                m_bolIfHasSave = false;
            }
            else
            {
                m_bolIfHasSave = true;
            }
        }

        #endregion

        #region 显示该次住院的住院病案首页的信息
        /// <summary>
        /// 显示该次住院的住院病案首页的信息
        /// </summary>
        private void m_mthDiaplayDetail()
        {
            string m_strInPatientDate = m_objSelectedPatient.m_DtmSelectedInDate.ToString("yyyy-MM-dd HH:mm:ss");
            m_mthCheckIfHasSave(m_strInPatientDate);
            long m_lngRes = 0;
            if (m_bolIfHasSave)
            {
                m_lngRes = m_objDomain.m_lngGetMainInfo(m_objSelectedPatient.m_StrInPatientID, m_strInPatientDate, m_strOpenDate, out m_objCollection.m_objMain);
                if (m_lngRes < 1)
                {
                    m_mthShowDBError();
                    return;
                }
                m_lngRes = m_objDomain.m_lngGetContentInfo(m_objSelectedPatient.m_StrInPatientID, m_strInPatientDate, m_strOpenDate, out m_objCollection.m_objContent);
                if (m_lngRes < 1)
                {
                    m_mthShowDBError();
                    return;
                }
                m_lngRes = m_objDomain.m_lngGetDiagnosisArr(m_objSelectedPatient.m_StrInPatientID, m_strInPatientDate, m_strOpenDate, out m_objCollection.m_objDiagnosisArr);
                if (m_lngRes < 1)
                {
                    m_mthShowDBError();
                    return;
                }
                m_lngRes = m_objDomain.m_lngGetOperationArr(m_objSelectedPatient.m_StrInPatientID, m_strInPatientDate, m_strOpenDate, out m_objCollection.m_objOperationArr);
                if (m_lngRes < 1)
                {
                    m_mthShowDBError();
                    return;
                }
                m_lngRes = m_objDomain.m_lngGetBabyArr(m_objSelectedPatient.m_StrInPatientID, m_strInPatientDate, m_strOpenDate, out m_objCollection.m_objBabyArr);
                if (m_lngRes < 1)
                {
                    m_mthShowDBError();
                    return;
                }
                m_lngRes = m_objDomain.m_lngGetChemotherapyArr(m_objSelectedPatient.m_StrInPatientID, m_strInPatientDate, m_strOpenDate, out m_objCollection.m_objChemotherapyArr);
                if (m_lngRes < 1)
                {
                    m_mthShowDBError();
                    return;
                }
                m_bolIfChange = false;

                m_mthSetMainInfo(m_objCollection.m_objMain, m_objCollection.m_objContent);
                m_mthSetDiagnosisInfo(m_objCollection.m_objDiagnosisArr);
                m_mthSetOperationInfo(m_objCollection.m_objOperationArr);
                m_mthSetBabyInfo(m_objCollection.m_objBabyArr);
                m_mthSetChemotherapyInfo(m_objCollection.m_objChemotherapyArr);
                m_bolIfChange = true;

                if (m_objCollection.m_objMain.m_intISHANDIN != 1)
                {
                    m_mthLoadChargeInfo();
                }

                //当前处于修改记录状态
                MDIParent.m_mthChangeFormText(this, MDIParent.enmFormEditStatus.Modify);

                m_EnmFormEditStatus = MDIParent.enmFormEditStatus.Modify;
            }
            else
            {
                m_mthLoadOperationInfo();

                m_mthLoadChargeInfo();

                m_mthSetDefaultValue(m_objSelectedPatient);

                //当前处于新增记录状态
                MDIParent.m_mthChangeFormText(this, MDIParent.enmFormEditStatus.AddNew);
                m_EnmFormEditStatus = MDIParent.enmFormEditStatus.AddNew;
            }

            m_mthAddFormStatusForClosingSave();
        }

        /// <summary>
        /// 设置各种类型的默认值
        /// </summary>
        /// <param name="p_objPatient"></param>
        private void m_mthSetDefaultValue(clsPatient p_objPatient)
        {
            //new clsDefaultValueTool(this,p_objPatient).m_mthSetDefaultValue();

            //自动模板
            m_mthSetSpecialPatientTemplateSet(p_objPatient);

            #region 从住院病历读取数据
            string strInPatientDate = p_objPatient.m_DtmSelectedInDate.ToString("yyyy-MM-dd HH:mm:ss");
            clsInPatientCaseHisoryDefaultDomain objInPaitentCaseDefault = new clsInPatientCaseHisoryDefaultDomain();
            clsInPatientCaseHisoryDefaultValue[] objInPatientCaseDefaultValue = null;
            if (p_objPatient != null)
            {
                objInPatientCaseDefaultValue = objInPaitentCaseDefault.lngGetAllInPatientCaseHisoryDefault(p_objPatient.m_StrInPatientID, strInPatientDate);
                if (objInPatientCaseDefaultValue != null && objInPatientCaseDefaultValue.Length > 0)
                {
                    txtDiagnosis.Text = objInPatientCaseDefaultValue[0].m_strPrimaryDiagnose;
                    //txtInHospitalDiagnosis.Text=objInPatientCaseDefaultValue[0].m_strPrimaryDiagnose;
                    txtMainDiagnosis.Text = objInPatientCaseDefaultValue[0].m_strFinallyDiagnose != "" ? objInPatientCaseDefaultValue[0].m_strFinallyDiagnose : objInPatientCaseDefaultValue[0].m_strPrimaryDiagnose;
                    dtpConfirmDiagnosisDate.Value = DateTime.Parse(objInPatientCaseDefaultValue[0].m_strInPatientDate);
                }
            }
            #endregion

            //设完默认值后回到光标床号
            m_txtBedNO.Focus();
        }

        private void m_mthGetDeletedDetail(string p_strInpatientId, string p_strInpatientDate, string p_strOpenDate, ref clsInHospitalMainRecord_Collection p_objCollection)
        {
            long m_lngRes = 0;

            m_lngRes = m_objDomain.m_lngGetDeletedMainInfo(p_strInpatientId, p_strInpatientDate, p_strOpenDate, out p_objCollection.m_objMain);
            if (m_lngRes < 1)
            {
                m_mthShowDBError();
                return;
            }
            m_lngRes = m_objDomain.m_lngGetDeletedContentInfo(p_strInpatientId, p_strInpatientDate, p_strOpenDate, out p_objCollection.m_objContent);
            if (m_lngRes < 1)
            {
                m_mthShowDBError();
                return;
            }
            m_lngRes = m_objDomain.m_lngGetDeleteDiagnosisArr(p_strInpatientId, p_strInpatientDate, p_strOpenDate, out p_objCollection.m_objDiagnosisArr);
            if (m_lngRes < 1)
            {
                m_mthShowDBError();
                return;
            }
            m_lngRes = m_objDomain.m_lngGetDeletedOperationArr(p_strInpatientId, p_strInpatientDate, p_strOpenDate, out p_objCollection.m_objOperationArr);
            if (m_lngRes < 1)
            {
                m_mthShowDBError();
                return;
            }
            m_lngRes = m_objDomain.m_lngGetBabyArr(p_strInpatientId, p_strInpatientDate, p_strOpenDate, out p_objCollection.m_objBabyArr);
            if (m_lngRes < 1)
            {
                m_mthShowDBError();
                return;
            }
            m_lngRes = m_objDomain.m_lngGetDeletedChemotherapyArr(p_strInpatientId, p_strInpatientDate, p_strOpenDate, out p_objCollection.m_objChemotherapyArr);
            if (m_lngRes < 1)
            {
                m_mthShowDBError();
                return;
            }
        }

        private void m_mthDiaplayDeletedDetail(string p_strInpatientId, string p_strInpatientDate, string p_strOpenDate)
        {
            m_mthGetDeletedDetail(p_strInpatientId, p_strInpatientDate, p_strOpenDate, ref  m_objCollection);
            m_bolIfChange = false;
            m_mthSetMainInfo(m_objCollection.m_objMain, m_objCollection.m_objContent);
            m_mthSetDiagnosisInfo(m_objCollection.m_objDiagnosisArr);
            m_mthSetOperationInfo(m_objCollection.m_objOperationArr);
            m_mthSetBabyInfo(m_objCollection.m_objBabyArr);
            m_mthSetChemotherapyInfo(m_objCollection.m_objChemotherapyArr);
            m_bolIfChange = true;


        }


        #endregion

        #region 显示该病人该次住院的科室，出院住院信息
        /// <summary>
        /// 当次住院转科信息
        /// </summary>
        clsInHospitalMainTransDeptInstance objTransDeptInstance = null;
        /// <summary>
        /// 显示该病人该次住院的科室，出院住院信息
        /// </summary>
        private void m_mthSetPatientCurrentInHospitalDeptInfo()
        {
            if (m_ObjCurrentEmrPatientSession == null)
                return;
            lblTimes.Text = m_ObjCurrentEmrPatientSession.m_strInTimes;//第几次住院

            #region 获取入院、出院科室，转科情况
            DateTime dtmOutDate = new DateTime(1900, 1, 1);
            long lngRes = 0;
            lngRes = m_objDomain.m_lngGetInHospitalMainTransDeptInstance(m_ObjCurrentEmrPatientSession.m_strRegisterId, out objTransDeptInstance);
            m_strRegisterID = m_ObjCurrentEmrPatientSession.m_strRegisterId;

            if (lngRes > 0 && objTransDeptInstance != null)
            {
                if (objTransDeptInstance.m_demOutPatientDate != new DateTime(1900, 1, 1) && objTransDeptInstance.m_demOutPatientDate != DateTime.MinValue)
                    m_lblOutHospitalDate.Text = objTransDeptInstance.m_demOutPatientDate.ToString("yyyy年MM月dd日 HH时");
                else
                    m_lblOutHospitalDate.Text = "";
                lblInHosptialSetion.Text = objTransDeptInstance.m_strInPatientAreaName;
                //lblInSickRoom.Text = objTransDeptInstance.m_strInPatientAreaName + objTransDeptInstance.m_strInPatientBedName;
                lblInSickRoom.Text = objTransDeptInstance.m_strInPatientBedName;
                lblOutHospitalSetion.Text = objTransDeptInstance.m_strOutPatientAreaName;
                //lblOutSickRoom.Text = objTransDeptInstance.m_strOutPatientAreaName + objTransDeptInstance.m_strOutPatientBedName;
                lblOutSickRoom.Text = objTransDeptInstance.m_strOutPatientBedName;
                if (objTransDeptInstance.m_strTransSourceAreaIDArr != null
                    && objTransDeptInstance.m_strTransTargetAreaIDArr != null
                    && objTransDeptInstance.m_strTransSourceAreaIDArr.Length == objTransDeptInstance.m_strTransTargetAreaIDArr.Length)
                {
                    m_lsvTransDept.Items.Clear();
                    for (int i = 0; i < objTransDeptInstance.m_strTransSourceAreaIDArr.Length; i++)
                    {
                        DateTime dtTransDate = Convert.ToDateTime(objTransDeptInstance.m_strTransAreaDateArr[i]);
                        ListViewItem item = new ListViewItem(new string[]{objTransDeptInstance.m_strTransSourceAreaNameArr[i],
																			 dtTransDate.ToString("yyyy-MM-dd"),
																			 objTransDeptInstance.m_strTransTargetAreaNameArr[i]});
                        m_lsvTransDept.Items.Add(item);
                    }
                }
            }
            else
            {
                m_lblOutHospitalDate.Text = "";
                lblInHosptialSetion.Text = "";
                lblOutHospitalSetion.Text = "";
                m_lsvTransDept.Items.Clear();
                lblInSickRoom.Text = "";
                lblOutSickRoom.Text = "";
            }
            #endregion

            //m_lblInHospitalDate.Text = Convert.ToDateTime(trvTime.SelectedNode.Text).ToString("yyyy年MM月dd日 HH时");

            System.TimeSpan diff = new TimeSpan(0);
            DateTime dtmTemp = DateTime.Now;
            if (m_lblOutHospitalDate.Text == "")
            {

                //com.digitalwave.PublicMiddleTier.clsPublicMiddleTier objPMT =
                //    (com.digitalwave.PublicMiddleTier.clsPublicMiddleTier)com.digitalwave.iCare.common.clsObjectGenerator.objCreatorObjectByType(typeof(com.digitalwave.PublicMiddleTier.clsPublicMiddleTier));
                string strDateNow = (new weCare.Proxy.ProxyEmr()).Service.m_strGetDBServerTime( );
                //objPMT = null;
                if (!DateTime.TryParse(strDateNow, out dtmTemp))
                {
                    dtmTemp = DateTime.Now;
                }
                diff = dtmTemp.Subtract(m_ObjCurrentEmrPatientSession.m_dtmHISInpatientDate);
            }
            else
            {
                diff = Convert.ToDateTime(m_lblOutHospitalDate.Text).Subtract(m_ObjCurrentEmrPatientSession.m_dtmHISInpatientDate);
            }

            if (diff.Days < 1)
                lblInHospitalDays.Text = "1";
            else if (m_lblOutHospitalDate.Text == "")
            {
                diff = Convert.ToDateTime(dtmTemp.ToString("yyyy-MM-dd")).Subtract(Convert.ToDateTime(m_ObjCurrentEmrPatientSession.m_dtmHISInpatientDate.ToString("yyyy-MM-dd")));
                lblInHospitalDays.Text = diff.Days.ToString();
            }
            else
            {
                diff = Convert.ToDateTime(Convert.ToDateTime(m_lblOutHospitalDate.Text).ToString("yyyy-MM-dd")).Subtract(Convert.ToDateTime(m_ObjCurrentEmrPatientSession.m_dtmHISInpatientDate.ToString("yyyy-MM-dd")));
                lblInHospitalDays.Text = diff.Days.ToString();
            }
            #region Old
            //if(m_objSession.m_DtmOutDate == DateTime.Parse("1900-01-01 00:00:00") || m_objSession.m_DtmOutDate == m_objSession.m_DtmInDate)//（没有出院日期，表示未曾出院）
            //    dtpOutHospitalDate.Value = DateTime.Now;
            //else
            //    dtpOutHospitalDate.Value = m_objSession.m_DtmOutDate;

            //System.TimeSpan diff=dtpOutHospitalDate.Value.Subtract(m_objSession.m_DtmInDate);
            //lblInHospitalDays.Text = ((int)diff.TotalDays).ToString();
            //int m_intDeptCount = m_objSession.m_intGetDeptCount();
            //if(m_intDeptCount <=0)
            //    return;
            //clsInBedDeptInfo m_objFirstDeptInfo = m_objSession.m_objGetDeptByIndex(0);
            //clsInBedDeptInfo m_objLastDeptInfo = m_objSession.m_objGetDeptByIndex(m_intDeptCount - 1);
            //if(m_objFirstDeptInfo != null)
            //{
            //    lblInHosptialSetion.Text = m_objFirstDeptInfo.m_ObjDept.m_StrDeptName;
            //    //				lblInSickRoom.Text = m_objFirstDeptInfo.m_objGetAreaByIndex(0).m_objGetRoomByIndex(0).m_ObjRoom.m_StrRoomName;
            //    lblInSickRoom.Text = m_objFirstDeptInfo.m_ObjSession.m_ObjInBedInfo.m_ObjLastAreaInfo.m_ObjArea.m_StrAreaName;
            //}
            //if(m_objLastDeptInfo != null)
            //{
            //    lblOutHospitalSetion.Text = m_objSession.m_ObjInBedInfo.m_ObjLastDeptInfo.m_ObjDept.m_StrDeptName;
            //    //				lblOutSickRoom.Text = m_objSession.m_ObjInBedInfo.m_ObjLastRoomInfo.m_ObjRoom.m_StrRoomName;
            //    lblOutSickRoom.Text = m_objSession.m_ObjInBedInfo.m_ObjLastAreaInfo.m_ObjArea.m_StrAreaName;
            //}

            //dtgChangeDept.CurrentRowIndex = 0;
            //m_dtbChangeDept.Rows.Clear();
            //for(int i1=1;i1<m_intDeptCount;i1++)
            //{
            //    m_dtbChangeDept.Rows.Add(new object[]{m_objSession.m_objGetDeptByIndex(i1).m_ObjDept.m_StrDeptName});
            //}
            #endregion Old
        }
        #endregion

        #region 显示该次住院的住院病案首页的主表信息
        /// <summary>
        /// 显示该次住院的住院病案首页的主表信息
        /// </summary>
        /// <param name="p_objContent"></param>
        private void m_mthSetMainInfo(clsInHospitalMainRecord_Main p_objMain, clsInHospitalMainRecord_Content p_objContent)
        {
            if (p_objMain == null || p_objContent == null)
            {

                #region 在住院病历没有记录时候，从其他表读入信息,刘颖源,2003-5-14 17:50:50
                string strInPatientDate = m_objSelectedPatient.m_DtmSelectedInDate.ToString("yyyy-MM-dd HH:mm:ss");
                clsInPatientCaseHisoryDefaultDomain objInPaitentCaseDefault = new clsInPatientCaseHisoryDefaultDomain();
                clsInPatientCaseHisoryDefaultValue[] objInPatientCaseDefaultValue = null;

                if (m_objSelectedPatient != null)
                {
                    objInPatientCaseDefaultValue = objInPaitentCaseDefault.lngGetAllInPatientCaseHisoryDefault(m_objSelectedPatient.m_StrInPatientID, strInPatientDate);
                    if (objInPatientCaseDefaultValue != null && objInPatientCaseDefaultValue.Length > 0)
                    {
                        //this.txtInHospitalDiagnosis.Text =objInPatientCaseDefaultValue[0].m_strFinallyDiagnose ; 
                    }
                }
                #endregion
                txtAccordClinicWithPathology.Enabled = false;
                return;
            }
            txtDiagnosis.m_mthSetNewText(p_objContent.m_strDiagnosis, p_objMain.m_strDiagnosisXML);
            //			txtInHospitalDiagnosis.m_mthSetNewText(p_objContent.m_strInHospitalDiagnosis,p_objMain.m_strInHospitalDiagnosisXML);
            m_strCurrentOpenDate = p_objContent.m_strOpenDate;
            if (p_objMain.m_intISHANDIN == 1)
            {
                m_cmdCommit.Enabled = false;
            }
            else
            {
                m_cmdCommit.Enabled = true;
            }

            int i = 0;
            int j = 0;
            if (p_objContent.m_strBirthPlace.Trim() != "")
            {
                i = p_objContent.m_strBirthPlace.IndexOf(">");
                j = p_objContent.m_strBirthPlace.LastIndexOf(">");
                if (i > 0)
                    m_cboProvince.Text = (p_objContent.m_strBirthPlace).Substring(0, i);
                else m_cboProvince.Text = "";
                m_cboCity.Text = (p_objContent.m_strBirthPlace).Substring(i + 2, j - i - 3);
                m_cboCounty.Text = (p_objContent.m_strBirthPlace).Substring(j + 1, p_objContent.m_strBirthPlace.Length - j - 1);
            }
            else
            {
                m_cboProvince.Text = "";
                m_cboCity.Text = "";
                m_cboCounty.Text = "";
            }
            //txtDiagnosis.Text = p_objContent.m_strDiagnosis;
            txtDiagnosisICD10.Text = p_objMain.m_strMZICD10;
            txtICD_10OfMain.Text = p_objMain.m_strMAINICD10;
            //txtInHospitalDiagnosis.Text = p_objContent.m_strInHospitalDiagnosis;

            #region 签名
            //新的签名
            TextBoxBase[] txtArr = new TextBoxBase[] { txtDoctor,  txtQCNurse, txtCoder,
            txtDirectorDt,txtSubDirectorDt,txtQCDt,txtDt,txtInHospitalDt,txtAttendInForAdvancesStudyDt,txtGraduateStudentIntern,txtIntern};
            string[][] strArr = new string[txtArr.Length][];

            strArr[0] = new string[] { p_objContent.m_strDoctor, p_objContent.m_strDoctorName, "" };
            strArr[1] = new string[] { p_objContent.m_strQCNurse, p_objContent.m_strQCNurseName, "" };
            strArr[2] = new string[] { p_objContent.m_strCoder, p_objContent.m_strCoderName, "" };
            strArr[3] = new string[] { p_objContent.m_strDirectorDt, p_objContent.m_strDirectorDtName, "" };
            strArr[4] = new string[] { p_objContent.m_strSubDirectorDt, p_objContent.m_strSubDirectorDtName, "" };
            strArr[5] = new string[] { p_objContent.m_strQCDt, p_objContent.m_strQCDtName, "" };
            strArr[6] = new string[] { p_objContent.m_strDt, p_objContent.m_strDtName, "" };
            strArr[7] = new string[] { p_objContent.m_strInHospitalDt, p_objContent.m_strInHospitalDtName, "" };
            strArr[8] = new string[] { p_objContent.m_strAttendInForAdvancesStudyDt, p_objContent.m_strAttendInForAdvancesStudyDtName, "" };
            strArr[9] = new string[] { p_objContent.m_strGraduateStudentIntern, p_objContent.m_strGraduateStudentInternName, "" };
            strArr[10] = new string[] { p_objContent.m_strIntern, p_objContent.m_strInternName, "" };
            m_mthAddSignToTextBoxByValue(txtArr, strArr,
                new bool[] { true, true, true, true, true, true, true, true, true, true, true }, true);
            m_mthAddSignToTextBoxByEmpNo(new TextBoxBase[] { m_txtSign }, new string[] { p_objMain.m_strCreateUserID }, new bool[] { true });
            #endregion

            //if(p_objContent.m_strDoctor != null && p_objContent.m_strDoctor != "")
            //{
            //    txtDoctor.Tag = p_objContent.m_strDoctor;
            //    txtDoctor.Text = new clsEmployee(p_objContent.m_strDoctor).m_StrFirstName;
            //}
            dtpConfirmDiagnosisDate.Value = DateTime.Parse(p_objContent.m_strConfirmDiagnosisDate);
            gpbCondictionWhenIn.Tag = p_objContent.m_strCondictionWhenIn;

            switch (p_objContent.m_strCondictionWhenIn)
            {
                case "0":
                    rdbDanger.Checked = true;
                    break;
                case "1":
                    rdbEmergency.Checked = true;
                    break;
                case "2":
                    rdbNormal.Checked = true;
                    break;
                default:
                    rdbDanger.Checked = true;
                    break;
            }
            txtMainDiagnosis.m_mthSetNewText(p_objContent.m_strMainDiagnosis, p_objMain.m_strMainDiagnosisXML);
            //txtMainDiagnosis.Text = p_objContent.m_strMainDiagnosis;
            //gpbMainDiagnosis.Tag = p_objContent.m_strMainConditionSeq;
            int intSIndex = -1;
            if (int.TryParse(p_objContent.m_strMainConditionSeq, out intSIndex))
            {
                m_cboMainSeq.SelectedIndex = intSIndex;
            }
            else
            {
                m_cboMainSeq.SelectedIndex = -1;
            }
            #region
            //switch(p_objContent.m_strMainConditionSeq)
            //{
            //    case "0":
            //        rdbHealOfMain.Checked = true;
            //        break;
            //    case "1":
            //        rdbOnTheMendOfMain.Checked = true;
            //        break;
            //    case "2":
            //        rdbNotCureOfMain.Checked = true;
            //        break;
            //    case "3":
            //        rdbDieOfMain.Checked = true;
            //        break;
            //    case "4":
            //        rdbNotDefineOfMain.Checked = true;
            //        break;
            //    default:
            //        break;
            //}
            //			txtICD_10OfMain.m_mthSetNewText(p_objContent.m_strICD_10OfMain,p_objMain.m_strICD_10OfMainXML);
            //			txtICD_10OfMain.Text = p_objContent.m_strICD_10OfMain;

            //			txtInfectionDiagnosis.m_mthSetNewText(p_objContent.m_strInfectionDiagnosis,p_objMain.m_strInfectionDiagnosisXML);
            //txtInfectionDiagnosis.Text = p_objContent.m_strInfectionDiagnosis;
            //gpbInfection.Tag = p_objContent.m_strInfectionCondictionSeq;
            //switch(p_objContent.m_strInfectionCondictionSeq)
            //{
            //    case "0":
            //        rdbHealOfInfection.Checked = true;
            //        break;
            //    case "1":
            //        rdbOnTheMendOfInfection.Checked = true;
            //        break;
            //    case "2":
            //        rdbNotCureOfInfection.Checked = true;
            //        break;
            //    case "3":
            //        rdbDieOfInfection.Checked = true;
            //        break;
            //    case "4":
            //        rdbNotDefineOfInfection.Checked = true;
            //        break;
            //    default:
            //        break;
            //}
            //			txtICD_10OfInfection.m_mthSetNewText(p_objContent.m_strICD_10OfInfection,p_objMain.m_strICD_10OfInfectionXML);
            #endregion
            txtPathologyDiagnosis.m_mthSetNewText(p_objContent.m_strPathologyDiagnosis, p_objMain.m_strPathologyDiagnosisXML);
            txtScacheSource.m_mthSetNewText(p_objContent.m_strScacheSource, p_objMain.m_strScacheSourceXML);
            txtSensitive.m_mthSetNewText(p_objContent.m_strSensitive, p_objMain.m_strSensitiveXML);
            txtHbsAg.m_mthSetNewText(p_objContent.m_strHbsAg, p_objMain.m_strHbsAgXML);
            txtHCV_Ab.m_mthSetNewText(p_objContent.m_strHCV_Ab, p_objMain.m_strHCV_AbXML);
            txtHIV_Ab.m_mthSetNewText(p_objContent.m_strHIV_Ab, p_objMain.m_strHIV_AbXML);
            txtAccordWithOutHospital.m_mthSetNewText(p_objContent.m_strAccordWithOutHospital, p_objMain.m_strAccordWithOutHospitalXML);
            //txtAccordInWithOut.m_mthSetNewText(p_objContent.m_strAccordInWithOut, p_objMain.m_strAccordInWithOutXML);
            //txtAccordBeforeOperationWithAfter.m_mthSetNewText(p_objContent.m_strAccordBeforeOperationWithAfter, p_objMain.m_strAccordBfOprWithAfXML);
            txtAccordClinicWithPathology.m_mthSetNewText(p_objContent.m_strAccordClinicWithPathology, p_objMain.m_strAccordClinicWithPathologyXML);
            txtAccordRadiateWithPathology.m_mthSetNewText(p_objContent.m_strAccordRadiateWithPathology, p_objMain.m_strAccordRadiateWithPathologyXML);
            txtSalveTimes.m_mthSetNewText(p_objContent.m_strSalveTimes, p_objMain.m_strSalveTimesXML);
            txtSalveSuccess.m_mthSetNewText(p_objContent.m_strSalveSuccess, p_objMain.m_strSalveSuccessXML);

            //txtICD_10OfInfection.Text = p_objContent.m_strICD_10OfInfection;
            //txtPathologyDiagnosis.Text = p_objContent.m_strPathologyDiagnosis;
            //txtScacheSource.Text = p_objContent.m_strScacheSource;
            //txtSensitive.Text = p_objContent.m_strSensitive;
            //txtHbsAg.Text = p_objContent.m_strHbsAg;
            //txtHCV_Ab.Text = p_objContent.m_strHCV_Ab;
            //txtHIV_Ab.Text = p_objContent.m_strHIV_Ab;
            //txtAccordWithOutHospital.Text = p_objContent.m_strAccordWithOutHospital;
            txtAccordInWithOut.Text = p_objContent.m_strAccordInWithOut;
            txtAccordBeforeOperationWithAfter.Text = p_objContent.m_strAccordBeforeOperationWithAfter;
            #region
            //txtAccordClinicWithPathology.Text = p_objContent.m_strAccordClinicWithPathology;
            //txtAccordRadiateWithPathology.Text = p_objContent.m_strAccordRadiateWithPathology;
            //txtSalveTimes.Text = p_objContent.m_strSalveTimes;
            //txtSalveSuccess.Text = p_objContent.m_strSalveSuccess;
            //if(p_objContent.m_strDirectorDt != null && p_objContent.m_strDirectorDt != "")
            //{
            //    txtDirectorDt.Tag = p_objContent.m_strDirectorDt;
            //    txtDirectorDt.Text = new clsEmployee(p_objContent.m_strDirectorDt).m_StrFirstName;
            //}
            //if(p_objContent.m_strSubDirectorDt != null && p_objContent.m_strSubDirectorDt != "")
            //{
            //    txtSubDirectorDt.Tag = p_objContent.m_strSubDirectorDt;
            //    txtSubDirectorDt.Text = new clsEmployee(p_objContent.m_strSubDirectorDt).m_StrFirstName;
            //}
            //if(p_objContent.m_strDt != null && p_objContent.m_strDt != "")
            //{
            //    txtDt.Tag = p_objContent.m_strDt;
            //    txtDt.Text = new clsEmployee(p_objContent.m_strDt).m_StrFirstName;
            //}
            //if(p_objContent.m_strInHospitalDt != null && p_objContent.m_strInHospitalDt != "")
            //{
            //    txtInHospitalDt.Tag = p_objContent.m_strInHospitalDt;
            //    txtInHospitalDt.Text = new clsEmployee(p_objContent.m_strInHospitalDt).m_StrFirstName;
            //}
            //if(p_objContent.m_strAttendInForAdvancesStudyDt != null && p_objContent.m_strAttendInForAdvancesStudyDt != "")
            //{
            //    txtAttendInForAdvancesStudyDt.Tag = p_objContent.m_strAttendInForAdvancesStudyDt;
            //    txtAttendInForAdvancesStudyDt.Text = new clsEmployee(p_objContent.m_strAttendInForAdvancesStudyDt).m_StrFirstName;
            //}
            //if(p_objContent.m_strGraduateStudentIntern != null && p_objContent.m_strGraduateStudentIntern != "")
            //{
            //    txtGraduateStudentIntern.Tag = p_objContent.m_strGraduateStudentIntern;
            //    txtGraduateStudentIntern.Text = new clsEmployee(p_objContent.m_strGraduateStudentIntern).m_StrFirstName;
            //}
            //			if(p_objContent.m_strIntern != null && p_objContent.m_strIntern != "")
            //			{
            //				txtIntern.Tag = p_objContent.m_strIntern;
            //				txtIntern.Text = new clsEmployee(p_objContent.m_strIntern).m_StrFirstName;
            //			}
            //实习医生自己签名
            #endregion
            //  txtIntern.Text = p_objContent.m_strIntern;

            //if(p_objContent.m_strCoder != null && p_objContent.m_strCoder != "")
            //{
            //    txtCoder.Tag = p_objContent.m_strCoder;
            //    txtCoder.Text = new clsEmployee(p_objContent.m_strCoder).m_StrFirstName;
            //}
            gpbQuality.Tag = p_objContent.m_strQuality;
            switch (p_objContent.m_strQuality)
            {
                case "0":
                    rdbQuality1.Checked = true;
                    break;
                case "1":
                    rdbQuality2.Checked = true;
                    break;
                case "2":
                    rdbQuality3.Checked = true;
                    break;
                default:
                    break;
            }
            //if(p_objContent.m_strQCDt != null && p_objContent.m_strQCDt != "")
            //{
            //    txtQCDt.Tag = p_objContent.m_strQCDt;
            //    txtQCDt.Text = new clsEmployee(p_objContent.m_strQCDt).m_StrFirstName;
            //}
            //if(p_objContent.m_strQCNurse != null && p_objContent.m_strQCNurse != "")
            //{
            //    txtQCNurse.Tag = p_objContent.m_strQCNurse;
            //    txtQCNurse.Text = new clsEmployee(p_objContent.m_strQCNurse).m_StrFirstName;
            //}
            dtpQCTime.Value = DateTime.Parse(p_objContent.m_strQCTime);
            switch (p_objContent.m_strOperation)
            {
                case "0":
                    radioButton1.Checked = true;
                    break;
                case "1":
                    radioButton2.Checked = true;
                    break;
                default:
                    break;
            }
            switch (p_objContent.m_strBaby)
            {
                case "0":
                    radioButton3.Checked = true;
                    break;
                case "1":
                    radioButton4.Checked = true;
                    break;
                default:
                    break;
            }
            gpbRTMode.Tag = p_objContent.m_strRTModeSeq;
            switch (p_objContent.m_strRTModeSeq)
            {
                case "0":
                    rdbRTCure.Checked = true;
                    break;
                case "1":
                    rdbRTAppeasement.Checked = true;
                    break;
                case "2":
                    rdbRTAssistant.Checked = true;
                    break;
                default:
                    break;
            }
            gpbRTRule.Tag = p_objContent.m_strRTRuleSeq;
            switch (p_objContent.m_strRTRuleSeq)
            {
                case "0":
                    rdbContinue.Checked = true;
                    break;
                case "1":
                    rdbRTGap.Checked = true;
                    break;
                case "2":
                    rdbRTSection.Checked = true;
                    break;
                default:
                    break;
            }
            if (p_objContent.m_strRTCo == "1")
                chkRTCo.Checked = true;
            else
                chkRTCo.Checked = false;
            if (p_objContent.m_strRTAccelerator == "1")
                chkRTAccelerator.Checked = true;
            else
                chkRTAccelerator.Checked = false;
            if (p_objContent.m_strRTX_Ray == "1")
                chkRTX_Ray.Checked = true;
            else
                chkRTX_Ray.Checked = false;
            if (p_objContent.m_strRTLacuna == "1")
                chkRTLacuna.Checked = true;
            else
                chkRTLacuna.Checked = false;
            gpbOriginalDisease.Tag = p_objContent.m_strOriginalDiseaseSeq;
            switch (p_objContent.m_strOriginalDiseaseSeq)
            {
                case "0":
                    rdbOriginalDiseaseFirst.Checked = true;
                    break;
                case "1":
                    rdbOriginalDiseaseRepeat.Checked = true;
                    break;
                default:
                    break;
            }
            //			txtOriginalDiseaseGy.m_mthSetNewText(p_objContent.m_strOriginalDiseaseGy,p_objMain.m_strOriginalDiseaseGyXML);
            //			txtOriginalDiseaseTimes.m_mthSetNewText(p_objContent.m_strOriginalDiseaseTimes,p_objMain.m_strOriginalDiseaseTimesXML);
            //			txtOriginalDiseaseDays.m_mthSetNewText(p_objContent.m_strOriginalDiseaseDays,p_objMain.m_strOriginalDiseaseDaysXML);
            txtOriginalDiseaseGy.Text = p_objContent.m_strOriginalDiseaseGy;
            txtOriginalDiseaseTimes.Text = p_objContent.m_strOriginalDiseaseTimes;
            txtOriginalDiseaseDays.Text = p_objContent.m_strOriginalDiseaseDays;
            dtpOriginalDiseaseBeginDate.Text = p_objContent.m_strOriginalDiseaseBeginDate == "1900-01-01 00:00:00" ? "" : p_objContent.m_strOriginalDiseaseBeginDate;
            dtpOriginalDiseaseEndDate.Text = p_objContent.m_strOriginalDiseaseEndDate == "1900-01-01 00:00:00" ? "" : p_objContent.m_strOriginalDiseaseEndDate;
            gpbLymph.Tag = p_objContent.m_strLymphSeq;
            switch (p_objContent.m_strLymphSeq)
            {
                case "0":
                    rdbLymphFirst.Checked = true;
                    break;
                case "1":
                    rdbLymphRepeat.Checked = true;
                    break;
                default:
                    break;
            }
            //			txtLymphGy.m_mthSetNewText(p_objContent.m_strLymphGy,p_objMain.m_strLymphGyXML);
            //			txtLymphTimes.m_mthSetNewText(p_objContent.m_strLymphTimes,p_objMain.m_strLymphTimesXML);
            //			txtLymphDays.m_mthSetNewText(p_objContent.m_strLymphDays,p_objMain.m_strLymphDaysXML);
            txtLymphGy.Text = p_objContent.m_strLymphGy;
            txtLymphTimes.Text = p_objContent.m_strLymphTimes;
            txtLymphDays.Text = p_objContent.m_strLymphDays;
            dtpLymphBeginDate.Text = p_objContent.m_strLymphBeginDate == "1900-01-01 00:00:00" ? "" : p_objContent.m_strLymphBeginDate;
            dtpLymphEndDate.Text = p_objContent.m_strLymphEndDate == "1900-01-01 00:00:00" ? "" : p_objContent.m_strLymphEndDate;
            //			txtMetastasisGy.m_mthSetNewText(p_objContent.m_strMetastasisGy,p_objMain.m_strMetastasisGyXML);
            //			txtMetastasisTimes.m_mthSetNewText(p_objContent.m_strMetastasisTimes,p_objMain.m_strMetastasisTimesXML);
            //			txtMetastasisDays.m_mthSetNewText(p_objContent.m_strMetastasisDays,p_objMain.m_strMetastasisDaysXML);
            txtMetastasisGy.Text = p_objContent.m_strMetastasisGy;
            txtMetastasisTimes.Text = p_objContent.m_strMetastasisTimes;
            txtMetastasisDays.Text = p_objContent.m_strMetastasisDays;
            dtpMetastasisBeginDate.Text = p_objContent.m_strMetastasisBeginDate == "1900-01-01 00:00:00" ? "" : p_objContent.m_strMetastasisBeginDate;
            dtpMetastasisEndDate.Text = p_objContent.m_strMetastasisEndDate == "1900-01-01 00:00:00" ? "" : p_objContent.m_strMetastasisEndDate;
            gpbChemotherapyMode.Tag = p_objContent.m_strChemotherapyModeSeq;
            switch (p_objContent.m_strChemotherapyModeSeq)
            {
                case "0":
                    rdbChemotherapyCure.Checked = true;
                    break;
                case "1":
                    rdbChemotherapyAppeasement.Checked = true;
                    break;
                case "2":
                    rdbChemotherapyAssisantNew.Checked = true;
                    break;
                case "3":
                    rdbChemotherapyAssistant.Checked = true;
                    break;
                case "4":
                    rdbChemotherapyNewMedicine.Checked = true;
                    break;
                default:
                    break;
            }
            if (p_objContent.m_strChemotherapyWholeBody == "1")
                chkChemotherapyWholeBody.Checked = true;
            else
                chkChemotherapyWholeBody.Checked = false;
            if (p_objContent.m_strChemotherapyLocal == "1")
                chkChemotherapyLocal.Checked = true;
            else
                chkChemotherapyLocal.Checked = false;
            if (p_objContent.m_strChemotherapyIntubate == "1")
                chkChemotherapyIntubate.Checked = true;
            else
                chkChemotherapyIntubate.Checked = false;
            if (p_objContent.m_strChemotherapyThorax == "1")
                chkChemotherapyThorax.Checked = true;
            else
                chkChemotherapyThorax.Checked = false;
            if (p_objContent.m_strChemotherapyAbdomen == "1")
                chkChemotherapyAbdomen.Checked = true;
            else
                chkChemotherapyAbdomen.Checked = false;
            if (p_objContent.m_strChemotherapySpinal == "1")
                chkChemotherapySpinal.Checked = true;
            else
                chkChemotherapySpinal.Checked = false;
            if (p_objContent.m_strChemotherapyOtherTry == "1")
                chkChemotherapyOtherTry.Checked = true;
            else
                chkChemotherapyOtherTry.Checked = false;
            if (p_objContent.m_strChemotherapyOther == "1")
                chkChemotherapyOther.Checked = true;
            else
                chkChemotherapyOther.Checked = false;
            switch (p_objContent.m_strChemotherapy)
            {
                case "0":
                    radioButton5.Checked = true;
                    break;
                case "1":
                    radioButton6.Checked = true;
                    break;
                default:
                    break;
            }

            //			txtTotalAmt.m_mthSetNewText(p_objContent.m_strTotalAmt,p_objMain.m_strTotalAmtXML);
            //			txtBedAmt.m_mthSetNewText(p_objContent.m_strBedAmt,p_objMain.m_strBedAmtXML);
            //			txtNurseAmt.m_mthSetNewText(p_objContent.m_strNurseAmt,p_objMain.m_strNurseAmtXML);
            //			txtWMAmt.m_mthSetNewText(p_objContent.m_strWMAmt,p_objMain.m_strWMAmtXML);
            //			txtCMFinishedAmt.m_mthSetNewText(p_objContent.m_strCMFinishedAmt,p_objMain.m_strCMFinishedAmtXML);
            //			txtCMSemiFinishedAmt.m_mthSetNewText(p_objContent.m_strCMSemiFinishedAmt,p_objMain.m_strCMSemiFinishedAmtXML);
            //			txtRadiationAmt.m_mthSetNewText(p_objContent.m_strRadiationAmt,p_objMain.m_strRadiationAmtXML);
            //			txtAssayAmt.m_mthSetNewText(p_objContent.m_strAssayAmt,p_objMain.m_strAssayAmtXML);
            //			txtO2Amt.m_mthSetNewText(p_objContent.m_strO2Amt,p_objMain.m_strO2AmtXML);
            //			txtBloodAmt.m_mthSetNewText(p_objContent.m_strBloodAmt,p_objMain.m_strBloodAmtXML);
            //			txtTreatmentAmt.m_mthSetNewText(p_objContent.m_strTreatmentAmt,p_objMain.m_strTreatmentAmtXML);
            //			txtOperationAmt.m_mthSetNewText(p_objContent.m_strOperationAmt,p_objMain.m_strOperationAmtXML);
            //			txtDeliveryChildAmt.m_mthSetNewText(p_objContent.m_strDeliveryChildAmt,p_objMain.m_strDeliveryChildAmtXML);
            //			txtCheckAmt.m_mthSetNewText(p_objContent.m_strCheckAmt,p_objMain.m_strCheckAmtXML);
            //			txtAnaethesiaAmt.m_mthSetNewText(p_objContent.m_strAnaethesiaAmt,p_objMain.m_strAnaethesiaAmtXML);
            //			txtBabyAmt.m_mthSetNewText(p_objContent.m_strBabyAmt,p_objMain.m_strBabyAmtXML);
            //			txtAccompanyAmt.m_mthSetNewText(p_objContent.m_strAccompanyAmt,p_objMain.m_strAccompanyAmtXML);
            //			txtOtherAmt1.m_mthSetNewText(p_objContent.m_strOtherAmt1,p_objMain.m_strOtherAmt1XML);
            //			txtOtherAmt2.m_mthSetNewText(p_objContent.m_strOtherAmt2,p_objMain.m_strOtherAmt2XML);
            //			txtOtherAmt3.m_mthSetNewText(p_objContent.m_strOtherAmt3,p_objMain.m_strOtherAmt3XML);
            //txtTotalAmt.Text = p_objContent.m_strTotalAmt;
            //txtBedAmt.Text = p_objContent.m_strBedAmt;
            //txtNurseAmt.Text = p_objContent.m_strNurseAmt;
            //txtWMAmt.Text = p_objContent.m_strWMAmt;
            //txtCMFinishedAmt.Text = p_objContent.m_strCMFinishedAmt;
            //txtCMSemiFinishedAmt.Text = p_objContent.m_strCMSemiFinishedAmt;
            //txtRadiationAmt.Text = p_objContent.m_strRadiationAmt;
            //txtAssayAmt.Text = p_objContent.m_strAssayAmt;
            //txtO2Amt.Text = p_objContent.m_strO2Amt;
            //txtBloodAmt.Text = p_objContent.m_strBloodAmt;
            //txtTreatmentAmt.Text = p_objContent.m_strTreatmentAmt;
            //txtOperationAmt.Text = p_objContent.m_strOperationAmt;
            //txtDeliveryChildAmt.Text = p_objContent.m_strDeliveryChildAmt;
            //txtCheckAmt.Text = p_objContent.m_strCheckAmt;
            //txtAnaethesiaAmt.Text = p_objContent.m_strAnaethesiaAmt;
            //txtBabyAmt.Text = p_objContent.m_strBabyAmt;
            //txtAccompanyAmt.Text = p_objContent.m_strAccompanyAmt;
            //txtOtherAmt1.Text = p_objContent.m_strOtherAmt1;
            //txtOtherAmt2.Text = p_objContent.m_strOtherAmt2;
            //txtOtherAmt3.Text = p_objContent.m_strOtherAmt3;

            switch (p_objContent.m_strCorpseCheck)
            {
                case "1":
                    gpbCorpseCheck.Tag = "1";
                    rdbCorpseCheckYes.Checked = true;
                    break;
                case "0":
                    gpbCorpseCheck.Tag = "0";
                    rdbCorpseCheckNO.Checked = true;
                    break;
                default:
                    break;
            }

            switch (p_objContent.m_strFirstCase)
            {
                case "1":
                    gpbFirstCase.Tag = "1";
                    rdbFirstCaseYes.Checked = true;
                    break;
                case "0":
                    gpbFirstCase.Tag = "0";
                    rdbFirstCaseNO.Checked = true;
                    break;
                default:
                    break;
            }

            switch (p_objContent.m_strFollow)
            {
                case "1":
                    gpbFollow.Tag = "1";
                    rdbFollowYes.Checked = true;
                    break;
                case "0":
                    gpbFollow.Tag = "0";
                    rdbFollowNO.Checked = true;
                    break;
                default:
                    break;
            }
            //			txtFollow_Week.m_mthSetNewText(p_objContent.m_strFollow_Week,p_objMain.m_strFollow_WeekXML);
            //			txtFollow_Month.m_mthSetNewText(p_objContent.m_strFollow_Month,p_objMain.m_strFollow_MonthXML);
            //			txtFollow_Year.m_mthSetNewText(p_objContent.m_strFollow_Year,p_objMain.m_strFollow_YearXML);
            txtFollow_Week.Text = p_objContent.m_strFollow_Week;
            txtFollow_Month.Text = p_objContent.m_strFollow_Month;
            txtFollow_Year.Text = p_objContent.m_strFollow_Year;
            switch (p_objContent.m_strModelCase)
            {
                case "1":
                    gpbModelCase.Tag = "1";
                    rdbModelCaseYes.Checked = true;
                    break;
                case "0":
                    gpbModelCase.Tag = "0";
                    rdbModelCaseNO.Checked = true;
                    break;
                default:
                    break;
            }
            //			txtBloodType.m_mthSetNewText(p_objContent.m_strBloodType,p_objMain.m_strBloodTypeXML);
            txtBloodType.Text = p_objContent.m_strBloodType;
            switch (p_objContent.m_strBloodRh)
            {
                case "1":
                    gpbBloodRh.Tag = "1";
                    rdbBloodRh_Ka.Checked = true;
                    break;
                case "2":
                    gpbBloodRh.Tag = "2";
                    rdbBloodRh_An.Checked = true;
                    break;
                case "3":
                    gpbBloodRh.Tag = "3";
                    rdbBloodRh_No.Checked = true;
                    break;
                default:
                    break;
            }

            switch (p_objContent.m_strBloodTransActoin)
            {
                case "1":
                    gpbBloodTransAction.Tag = "1";
                    rdbBloodTransActionYes.Checked = true;
                    break;
                case "2":
                    gpbBloodTransAction.Tag = "2";
                    rdbBloodTransActionNO.Checked = true;
                    break;
                case "3":
                    gpbBloodTransAction.Tag = "3";
                    rdbBloodTransNoAction.Checked = true;
                    break;
                default:
                    break;
            }

            //			txtRBC.m_mthSetNewText(p_objContent.m_strRBC,p_objMain.m_strRBCXML);
            //			txtPLT.m_mthSetNewText(p_objContent.m_strPLT,p_objMain.m_strPLTXML);
            //			txtPlasm.m_mthSetNewText(p_objContent.m_strPlasm,p_objMain.m_strPlasmXML);
            //			txtWholeBlood.m_mthSetNewText(p_objContent.m_strWholeBlood,p_objMain.m_strWholeBloodXML);
            //			txtOtherBlood.m_mthSetNewText(p_objContent.m_strOtherBlood,p_objMain.m_strOtherBloodXML);
            //			txtConsultation.m_mthSetNewText(p_objContent.m_strConsultation,p_objMain.m_strConsultationXML);
            //			txtLongDistanctConsultation.m_mthSetNewText(p_objContent.m_strLongDistanctConsultation,p_objMain.m_strLongDistanctConsultationXML);
            //			txtTOPLevel.m_mthSetNewText(p_objContent.m_strTOPLevel,p_objMain.m_strTOPLevelXML);
            //			txtNurseLevelI.m_mthSetNewText(p_objContent.m_strNurseLevelI,p_objMain.m_strNurseLevelIXML);
            //			txtNurseLevelII.m_mthSetNewText(p_objContent.m_strNurseLevelII,p_objMain.m_strNurseLevelIIXML);
            //			txtNurseLevelIII.m_mthSetNewText(p_objContent.m_strNurseLevelIII,p_objMain.m_strNurseLevelIIIXML);
            //			txtICU.m_mthSetNewText(p_objContent.m_strICU,p_objMain.m_strICUXML);
            //			txtSpecialNurse.m_mthSetNewText(p_objContent.m_strSpecialNurse,p_objMain.m_strSpecialNurseXML);
            //
            //
            //			txtInsuranceNum.m_mthSetNewText(p_objContent.m_strInsuranceNum,p_objMain.m_strInsuranceNumXML);
            //			m_cboModeOfPayment.m_mthSetNewText(p_objContent.m_strModeOfPayment,p_objMain.m_strModeOfPaymentXML);
            //			txtPatientHistoryNO.m_mthSetNewText(p_objContent.m_strPatientHistoryNO,p_objMain.m_strPatientHistoryNOXML);
            txtRBC.Text = p_objContent.m_strRBC;
            txtPLT.Text = p_objContent.m_strPLT;
            txtPlasm.Text = p_objContent.m_strPlasm;
            txtWholeBlood.Text = p_objContent.m_strWholeBlood;
            txtOtherBlood.Text = p_objContent.m_strOtherBlood;
            txtConsultation.Text = p_objContent.m_strConsultation;
            txtLongDistanctConsultation.Text = p_objContent.m_strLongDistanctConsultation;
            txtTOPLevel.Text = p_objContent.m_strTOPLevel;
            txtNurseLevelI.Text = p_objContent.m_strNurseLevelI;
            txtNurseLevelII.Text = p_objContent.m_strNurseLevelII;
            txtNurseLevelIII.Text = p_objContent.m_strNurseLevelIII;
            txtICU.Text = p_objContent.m_strICU;
            txtSpecialNurse.Text = p_objContent.m_strSpecialNurse;


            txtInsuranceNum.Text = p_objContent.m_strInsuranceNum;
            m_cboModeOfPayment.Text = p_objContent.m_strModeOfPayment;
            txtPatientHistoryNO.Text = p_objContent.m_strPatientHistoryNO;

            if (txtPathologyDiagnosis.Text == "")
            {
                txtAccordClinicWithPathology.Enabled = false;
            }
            else
            {
                txtAccordClinicWithPathology.Enabled = true;
            }
            //int m_intSessionIndex = trvTime.Nodes[0].Nodes.Count - (trvTime.SelectedNode.Index);
            //clsInBedSessionInfo m_objSession = m_objSelectedPatient.m_ObjInBedInfo.m_objGetSessionByIndex(m_intSessionIndex-1);

            //if(m_objSession.m_DtmOutDate == DateTime.Parse("1900-01-01 00:00:00") || m_objSession.m_DtmOutDate == m_objSession.m_DtmInDate)//（没有出院日期，表示未曾出院）
            //    dtpOutHospitalDate.Value = DateTime.Now;
            //else
            //    dtpOutHospitalDate.Value = m_objSession.m_DtmOutDate;
        }
        #endregion

        #region 显示该次住院的住院病案首页的其它诊断表的信息
        /// <summary>
        /// 显示该次住院的住院病案首页的其它诊断表的信息
        /// </summary>
        /// <param name="p_objOtherDiagnosisArr"></param>
        private void m_mthSetOtherDiagnosisInfo(clsInHospitalMainRecord_OtherDiagnosis[] p_objOtherDiagnosisArr)
        {
            if (p_objOtherDiagnosisArr == null || p_objOtherDiagnosisArr.Length <= 0)
                return;

            object[] m_objResArr = new object[7];
            for (int i1 = 0; i1 < p_objOtherDiagnosisArr.Length; i1++)
            {
                m_objResArr[0] = p_objOtherDiagnosisArr[i1].m_strDiagnosisDesc;
                switch (p_objOtherDiagnosisArr[i1].m_strConditionSeq)
                {
                    case "0":
                        m_objResArr[1] = true;
                        m_objResArr[2] = false;
                        m_objResArr[3] = false;
                        m_objResArr[4] = false;
                        m_objResArr[5] = false;
                        break;
                    case "1":
                        m_objResArr[1] = false;
                        m_objResArr[2] = true;
                        m_objResArr[3] = false;
                        m_objResArr[4] = false;
                        m_objResArr[5] = false;
                        break;
                    case "2":
                        m_objResArr[1] = false;
                        m_objResArr[2] = false;
                        m_objResArr[3] = true;
                        m_objResArr[4] = false;
                        m_objResArr[5] = false;
                        break;
                    case "3":
                        m_objResArr[1] = false;
                        m_objResArr[2] = false;
                        m_objResArr[3] = false;
                        m_objResArr[4] = true;
                        m_objResArr[5] = false;
                        break;
                    case "4":
                        m_objResArr[1] = false;
                        m_objResArr[2] = false;
                        m_objResArr[3] = false;
                        m_objResArr[4] = false;
                        m_objResArr[5] = true;
                        break;
                    default:
                        m_objResArr[1] = false;
                        m_objResArr[2] = false;
                        m_objResArr[3] = false;
                        m_objResArr[4] = false;
                        m_objResArr[5] = false;
                        break;
                }
                m_objResArr[6] = p_objOtherDiagnosisArr[i1].m_strICD10;
                m_dtbOtherDiagnosis.Rows.Add(m_objResArr);
            }
        }
        #endregion

        #region 显示该次住院的住院病案首页的诊断记录
        /// <summary>
        /// 转换出院情况，按病案标准
        /// 1－治愈 2－好转 3－未愈 4－死亡 5－其他
        /// </summary>
        /// <param name="pstring">需要转换的字符</param>
        /// <param name="pflag">0 汉字to数字 1 数字to汉字</param>
        /// <returns></returns>
        private string ConvertState(string pstring, int pflag, string dialogeString)
        {
            //默认出院情况为治愈
            string strState;
            if (pflag == 0)
            {
                try
                {
                    switch (pstring.Trim())
                    {
                        case "治愈":
                            strState = "1";
                            break;
                        case "好转":
                            strState = "2";
                            break;
                        case "未愈":
                            strState = "3";
                            break;
                        case "死亡":
                            strState = "4";
                            break;
                        case "其他":
                            strState = "5";
                            break;
                        default:
                            if (dialogeString.Trim() == "")
                            {
                                strState = "0";
                            }
                            else
                            {
                                strState = "1";
                            }
                            break;
                    }
                }
                catch
                {
                    if (dialogeString.Trim() == "")
                    {
                        strState = "0";
                    }
                    else
                    {
                        strState = "1";
                    }
                }
            }
            else
            {
                try
                {
                    switch (pstring.Trim())
                    {
                        case "1":
                            strState = "治愈";
                            break;
                        case "2":
                            strState = "好转";
                            break;
                        case "3":
                            strState = "未愈";
                            break;
                        case "4":
                            strState = "死亡";
                            break;
                        case "5":
                            strState = "其他";
                            break;
                        case "0":
                            strState = "";
                            break;
                        default:
                            strState = "治愈";
                            break;
                    }
                }
                catch
                {
                    strState = "治愈";
                }
            }
            return strState;
        }

        private void m_mthSetDiagnosisInfo(clsInHospitalMainRecord_Diagnosis[] p_objDiagnosisArr)
        {
            m_dtbInHospitalDiagnosis.Rows.Clear();
            m_dtbOtherDiagnosis.Rows.Clear();
            m_dtbInfectionDiagnosis.Rows.Clear();

            if (p_objDiagnosisArr == null || p_objDiagnosisArr.Length <= 0)
            {
                return;
            }

            m_dtbInHospitalDiagnosis.BeginLoadData();
            m_dtbOtherDiagnosis.BeginLoadData();
            m_dtbInfectionDiagnosis.BeginLoadData();
            try
            {
                object[] objDia = null;
                for (int i = 0; i < p_objDiagnosisArr.Length; i++)
                {
                    string strType = p_objDiagnosisArr[i].m_strDIAGNOSISTYPE;
                    if (strType == "1")
                    {
                        objDia = new object[2];
                        objDia[0] = p_objDiagnosisArr[i].m_strDIAGNOSIS;
                        objDia[1] = p_objDiagnosisArr[i].m_strICD10;
                        m_dtbInHospitalDiagnosis.LoadDataRow(objDia, true);
                    }
                    else if (strType == "2")
                    {
                        objDia = new object[3];
                        objDia[0] = p_objDiagnosisArr[i].m_strDIAGNOSIS;
                        objDia[1] = p_objDiagnosisArr[i].m_strICD10;
                        objDia[2] = ConvertState(p_objDiagnosisArr[i].m_strRESULT, 1, "0");
                        m_dtbInfectionDiagnosis.LoadDataRow(objDia, true);
                    }
                    else if (strType == "3")
                    {
                        objDia = new object[3];
                        objDia[0] = p_objDiagnosisArr[i].m_strDIAGNOSIS;
                        objDia[1] = p_objDiagnosisArr[i].m_strICD10;
                        objDia[2] = ConvertState(p_objDiagnosisArr[i].m_strRESULT, 1, "0");
                        m_dtbOtherDiagnosis.LoadDataRow(objDia, true);
                    }
                }
            }
            catch (Exception Ex)
            {
                string strEx = Ex.Message;
            }
            finally
            {
                m_dtbInHospitalDiagnosis.EndLoadData();
                m_dtbOtherDiagnosis.EndLoadData();
                m_dtbInfectionDiagnosis.EndLoadData();
            }
        }
        #endregion

        #region 显示该次住院的住院病案首页的手术情况表的信息
        /// <summary>
        /// 显示该次住院的住院病案首页的手术情况表的信息
        /// </summary>
        /// <param name="p_objOperationArr"></param>
        private void m_mthSetOperationInfo(clsInHospitalMainRecord_Operation[] p_objOperationArr)
        {
            if (p_objOperationArr == null || p_objOperationArr.Length <= 0)
                return;

            object[] m_objResArr = new object[14];
            for (int i1 = 0; i1 < p_objOperationArr.Length; i1++)
            {
                m_objResArr[0] = p_objOperationArr[i1].m_strOperationID;
                m_objResArr[1] = p_objOperationArr[i1].m_strOperationDate;
                m_objResArr[2] = p_objOperationArr[i1].m_strOperationName;
                m_objResArr[3] = p_objOperationArr[i1].m_strOperatorName;
                m_objResArr[4] = p_objOperationArr[i1].m_strAssistant1Name;
                m_objResArr[5] = p_objOperationArr[i1].m_strAssistant2Name;
                //				if(p_objOperationArr[i1].m_strAanaesthesiaModeID == null || p_objOperationArr[i1].m_strAanaesthesiaModeID == "")
                //					m_objResArr[6] = p_objOperationArr[i1].m_strAanaesthesiaModeID;
                //				else
                //					m_objResArr[6] = m_hasAanaesthesiaMode[p_objOperationArr[i1].m_strAanaesthesiaModeID];
                m_objResArr[6] = p_objOperationArr[i1].m_strAanaesthesiaModeName;
                m_objResArr[7] = p_objOperationArr[i1].m_strCutLevel;
                //				m_objResArr[8] = new clsEmployee(p_objOperationArr[i1].m_strAnaesthetist).m_StrFirstName;
                m_objResArr[8] = p_objOperationArr[i1].m_strAnaesthetistName;
                m_objResArr[9] = p_objOperationArr[i1].m_strAanaesthesiaModeID;
                m_objResArr[10] = p_objOperationArr[i1].m_strOperator;

                m_objResArr[11] = p_objOperationArr[i1].m_strAssistant1;
                m_objResArr[12] = p_objOperationArr[i1].m_strAssistant2;
                m_objResArr[13] = p_objOperationArr[i1].m_strAnaesthetist;
                m_dtbOperationDetail.Rows.Add(m_objResArr);
            }
        }
        #endregion

        #region 显示该次住院的住院病案首页的婴儿表的信息
        /// <summary>
        /// 显示该次住院的住院病案首页的婴儿表的信息
        /// </summary>
        /// <param name="p_objBabyArr"></param>
        private void m_mthSetBabyInfo(clsInHospitalMainRecord_Baby[] p_objBabyArr)
        {
            if (p_objBabyArr == null || p_objBabyArr.Length <= 0)
                return;
            object[] m_objResArr = new object[18];
            for (int i1 = 0; i1 < p_objBabyArr.Length; i1++)
            {
                m_objResArr[0] = ((int)(int.Parse(p_objBabyArr[i1].m_strSeqID) + 1)).ToString();
                if (p_objBabyArr[i1].m_strMale == "1")
                    m_objResArr[1] = true;
                else
                    m_objResArr[1] = false;
                if (p_objBabyArr[i1].m_strFemale == "1")
                    m_objResArr[2] = true;
                else
                    m_objResArr[2] = false;
                if (p_objBabyArr[i1].m_strLiveBorn == "1")
                    m_objResArr[3] = true;
                else
                    m_objResArr[3] = false;
                if (p_objBabyArr[i1].m_strDieBorn == "1")
                    m_objResArr[4] = true;
                else
                    m_objResArr[4] = false;
                if (p_objBabyArr[i1].m_strDieNotBorn == "1")
                    m_objResArr[5] = true;
                else
                    m_objResArr[5] = false;

                m_objResArr[6] = p_objBabyArr[i1].m_strWeight;

                if (p_objBabyArr[i1].m_strDie == "1")
                    m_objResArr[7] = true;
                else
                    m_objResArr[7] = false;
                if (p_objBabyArr[i1].m_strChangeDepartment == "1")
                    m_objResArr[8] = true;
                else
                    m_objResArr[8] = false;
                if (p_objBabyArr[i1].m_strOutHospital == "1")
                    m_objResArr[9] = true;
                else
                    m_objResArr[9] = false;
                if (p_objBabyArr[i1].m_strNaturalCondiction == "1")
                    m_objResArr[10] = true;
                else
                    m_objResArr[10] = false;
                if (p_objBabyArr[i1].m_strSuffocate1 == "1")
                    m_objResArr[11] = true;
                else
                    m_objResArr[11] = false;
                if (p_objBabyArr[i1].m_strSuffocate2 == "1")
                    m_objResArr[12] = true;
                else
                    m_objResArr[12] = false;

                m_objResArr[13] = p_objBabyArr[i1].m_strInfectionTimes;
                m_objResArr[14] = p_objBabyArr[i1].m_strInfectionName;
                m_objResArr[15] = p_objBabyArr[i1].m_strICD10;
                m_objResArr[16] = p_objBabyArr[i1].m_strSalveTimes;
                m_objResArr[17] = p_objBabyArr[i1].m_strSalveSuccessTimes;

                m_dtbBaby.Rows.Add(m_objResArr);
            }

        }
        #endregion

        #region 显示该次住院的住院病案首页的化疗表的信息
        /// <summary>
        /// 显示该次住院的住院病案首页的化疗表的信息
        /// </summary>
        /// <param name="p_objChemotherapyArr"></param>
        private void m_mthSetChemotherapyInfo(clsInHospitalMainRecord_Chemotherapy[] p_objChemotherapyArr)
        {
            if (p_objChemotherapyArr == null || p_objChemotherapyArr.Length <= 0)
                return;

            object[] m_objResArr = new object[9];
            for (int i1 = 0; i1 < p_objChemotherapyArr.Length; i1++)
            {
                m_objResArr[0] = p_objChemotherapyArr[i1].m_strChemotherapyDate;
                m_objResArr[1] = p_objChemotherapyArr[i1].m_strMedicineName;
                m_objResArr[2] = p_objChemotherapyArr[i1].m_strPeriod;
                if (p_objChemotherapyArr[i1].m_strField_CR == "1")
                    m_objResArr[3] = true;
                else
                    m_objResArr[3] = false;
                if (p_objChemotherapyArr[i1].m_strField_PR == "1")
                    m_objResArr[4] = true;
                else
                    m_objResArr[4] = false;
                if (p_objChemotherapyArr[i1].m_strField_MR == "1")
                    m_objResArr[5] = true;
                else
                    m_objResArr[5] = false;
                if (p_objChemotherapyArr[i1].m_strField_S == "1")
                    m_objResArr[6] = true;
                else
                    m_objResArr[6] = false;
                if (p_objChemotherapyArr[i1].m_strField_P == "1")
                    m_objResArr[7] = true;
                else
                    m_objResArr[7] = false;
                if (p_objChemotherapyArr[i1].m_strField_NA == "1")
                    m_objResArr[8] = true;
                else
                    m_objResArr[8] = false;
                m_dtbChemotherapy.Rows.Add(m_objResArr);
            }
        }
        #endregion

        protected override bool m_BlnCanTextChanged
        {
            get
            {
                return true;
            }
        }

        clsInBedSessionInfo objSessionInfo = null;
        /// <summary>
        /// 仅设置病人的基本信息
        /// </summary>
        /// <param name="p_objSelectedPatient"></param>
        protected override void m_mthOnlySetPatientInfo(clsPatient p_objSelectedPatient)
        {
            //objSessionInfo = p_objSelectedPatient.m_ObjInBedInfo.m_objGetSessionByIndex(trvTime.Nodes[0].Nodes.Count - trvTime.SelectedNode.Index - 1);
            //显式将m_ObjPeopleInfo置空，保证重新从数据库中读取最新的病人资料
            //因用户可能在本窗体(病案首页)修改病人基本资料
            //objSessionInfo.m_ObjPeopleInfo = null;
            p_objSelectedPatient.m_ObjPeopleInfo = null;
            clsPeopleInfo objPeopleInfo = p_objSelectedPatient.m_ObjPeopleInfo;
            //妇科产科不应该存在男性病人
            if (m_ObjCurrentEmrPatientSession.m_strDeptId == "0000224" && objPeopleInfo.m_StrSex.Trim() == "男")
            {
                MessageBox.Show("该病人为男性病人！");

            }

            lblSex.Text = objPeopleInfo.m_StrSex;
            lblAge.Text = objPeopleInfo.m_StrAge;

            m_dtpBirthDate.Value = objPeopleInfo.m_DtmBirth;
            m_txtMarried.Text = objPeopleInfo.m_StrMarried;
            m_txtOccupation.Text = objPeopleInfo.m_StrOccupation;
            m_txtNationality.Text = objPeopleInfo.m_StrNationality;
            m_txtNation.Text = objPeopleInfo.m_StrNation;
            m_txtIDCard.Text = objPeopleInfo.m_StrIDCard;
            //lblProvince.Text = objPeopleInfo.m_StrHomeplace;
            m_txtCountry.Text = objPeopleInfo.m_StrNativePlace;

            m_txtOfficeAddress.Text = objPeopleInfo.m_StrOfficeAddress;
            m_txtCompanyName.Text = objPeopleInfo.m_StrOffice_name;

            m_txtHomePhone.Text = objPeopleInfo.m_StrHomePhone;//改为家庭电话
            m_txtOfficePC.Text = objPeopleInfo.m_StrOfficePC;

            m_txtHomeAddress.Text = objPeopleInfo.m_StrResidencePlace;

            m_txtHomePC.Text = objPeopleInfo.m_StrHomePC;
            m_txtContactMan.Text = objPeopleInfo.m_StrLinkManFirstName;
            if (string.IsNullOrEmpty(objPeopleInfo.m_StrPatientRelation))
            {
                m_txtRelation.Text = "本人";
            }
            else
            {
                m_txtRelation.Text = objPeopleInfo.m_StrPatientRelation;
            }

            m_txtContactManAddress.Text = objPeopleInfo.m_StrLinkManAddress;
            m_txtLinkManzipcode.Text = objPeopleInfo.m_StrLinkManPC;

            m_txtContactManPhone.Text = objPeopleInfo.m_StrLinkManPhone;

            txtInsuranceNum.Text = objPeopleInfo.m_Strinsurance;

            #region 病人费用类别
            int intIndex = 5;//默认选中“其它”
            if (m_dtbPayTypeRelation != null && m_dtbPayTypeRelation.Rows.Count > 0)
            {
                DataRow[] drSelect = m_dtbPayTypeRelation.Select("paytypeid_chr = '" + m_ObjCurrentEmrPatient.m_strPayTypeID + "'");
                if (drSelect != null && drSelect.Length > 0)
                {
                    intIndex = Convert.ToInt32(drSelect[0]["ba_paytypeid_chr"]) - 1;
                }
            }
            m_cboModeOfPayment.SelectedIndex = intIndex;
            #endregion
            //m_cboModeOfPayment.Text = objPeopleInfo.m_StrPayTypeName;
        }
        protected override void m_mthSetPatientFormInfo(clsPatient p_objSelectedPatient)
        {
            m_objSelectedPatient = p_objSelectedPatient;
            //			m_mthCleanUP();
            //m_mthGetPatientDetailInfo();
        }

        #region 获得病人基本信息
        /// <summary>
        /// 获得病人基本信息
        /// </summary>
        private void m_mthGetPatientDetailInfo()
        {
            if (m_objSelectedPatient == null)
                return;

            //lblAge_Year.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_DtmBirth.ToString("yyyy");
            //lblAge_Month.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_DtmBirth.ToString("MM");
            //lblAge_Day.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_DtmBirth.ToString("dd");
            //lblMarried.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrMarried;
            //lblOccupation.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrOccupation;			
            //lblNationality.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrNationality;
            //lblNation.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrNation;
            //lblIDCard.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrIDCard;
            //lblProvince.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrHomeplace;
            //lblCountry.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrNativePlace;

            //lblOfficeAddress.Text =m_objSelectedPatient.m_ObjPeopleInfo.m_StrOffice_name+ "  "+m_objSelectedPatient.m_ObjPeopleInfo.m_StrOffice_district+
            //    m_objSelectedPatient.m_ObjPeopleInfo.m_StrOffice_street ;

            //lblOfficePhone.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrOfficePhone;
            //lblOfficePC.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrOfficePC;

            //lblHomeAddress.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrHomeAddress;

            //lblHomePC.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrHomePC;
            //lblContactMan.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrLinkManFirstName;
            //lblRelation.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrPatientRelation;

            //lblContactManAddress.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrLinkManAddress ;
            //lblLinkManzipcode.Text=m_objSelectedPatient.m_ObjPeopleInfo.m_StrLinkManPC;

            //lblContactManPhone.Text = m_objSelectedPatient.m_ObjPeopleInfo.m_StrLinkManPhone;

            trvTime.Nodes[0].Nodes.Clear();
            TreeNode m_trnNewNode;
            for (int i1 = (m_objSelectedPatient.m_ObjInBedInfo.m_intGetSessionCount() - 1); i1 >= 0; i1--)
            {
                m_trnNewNode = new TreeNode(m_objSelectedPatient.m_ObjInBedInfo.m_objGetSessionByIndex(i1).m_DtmHISInDate.ToString("yyyy-MM-dd HH:mm:ss"));
                m_trnNewNode.Tag = m_objSelectedPatient.m_ObjInBedInfo.m_objGetSessionByIndex(i1).m_DtmInDate;
                trvTime.Nodes[0].Nodes.Add(m_trnNewNode);
            }

            //选中默认节点
            for (int i = 0; i < trvTime.Nodes[0].Nodes.Count; i++)
            {
                if ((DateTime)trvTime.Nodes[0].Nodes[i].Tag == m_objSelectedPatient.m_DtmSelectedInDate)
                    trvTime.SelectedNode = trvTime.Nodes[0].Nodes[i];
            }

            trvTime.ExpandAll();
        }
        #endregion



        protected override bool m_BlnIsAddNew
        {
            get
            {
                if (m_bolIfHasSave)
                    return false;
                else
                    return true;
            }
        }

        private bool m_bolSaveCheck()
        {
            if (m_objSelectedPatient == null)
            {
                m_mthShowNoPatient();
                return false;
            }
            //if(m_objSelectedPatient != null)
            //{
            //    //2003.4.24 wingo modify m_StrPatientID --> m_StrInPatientID
            //    if(m_objSelectedPatient.m_StrHISInPatientID != txtInPatientID.Text.Trim())
            //    {
            //        m_mthShowNoPatient();
            //        return false;
            //    }
            //}
            if (m_ObjCurrentEmrPatientSession == null || m_ObjCurrentEmrPatientSession.m_dtmEMRInpatientDate == DateTime.MinValue)
            {
                clsPublicFunction.ShowInformationMessageBox("请选择入院时间！");
                return false;
            }
            this.button1.Focus();
            if (!m_blnIsDateRight)
            {
                return false;
            }
            string strTmp = m_chkForCmdCommit_Click();
            if (strTmp != "true")
            {
                return false;
            }
            //if(strTmp!="true")
            //{

            //    if(clsPublicFunction.ShowQuestionMessageBox(strTmp+"继续请确定！") == DialogResult.No)
            //    {
            //        return false;
            //    }
            //}
            //if(string.IsNullOrEmpty(txtInsuranceNum.Text.Trim()))
            //{
            //    if(clsPublicFunction.ShowQuestionMessageBox("社保号为空，是否继续？") == DialogResult.No)
            //    {
            //        return false;
            //    }
            //}
            //if(string.IsNullOrEmpty(m_cboModeOfPayment.Text.Trim()))
            //{
            //    if(clsPublicFunction.ShowQuestionMessageBox("医疗付款方式为空，是否继续？") == DialogResult.No)
            //    {
            //        return false;
            //    }
            //}
            //			if(txtPatientHistoryNO.Text.Trim() == "")
            //			{
            //				if(clsPublicFunction.ShowQuestionMessageBox("病案号为空，是否继续？") == DialogResult.No)
            //				{
            //					return false;
            //				}
            //			}
            //if(string.IsNullOrEmpty(txtDiagnosis.Text.Trim()))
            //{
            //    if(clsPublicFunction.ShowQuestionMessageBox("门诊（急）诊断为空，是否继续？") == DialogResult.No)
            //    {
            //        return false;
            //    }
            //}
            //if(txtInHospitalDiagnosis.Text.Trim() == "")
            //{
            //    if(clsPublicFunction.ShowQuestionMessageBox("入院诊断为空，是否继续？") == DialogResult.No)
            //    {
            //        return false;
            //    }
            //}
            //if(txtDoctor.Tag == null || txtDoctor.Text.Trim() == string.Empty)
            //{
            //    if(clsPublicFunction.ShowQuestionMessageBox("门诊（急）医生为空，是否继续？") == DialogResult.No)
            //    {
            //        return false;
            //    }
            //}
            //if(dtpConfirmDiagnosisDate.Value == DateTime.Parse("1900-1-1"))
            //{
            //    if(clsPublicFunction.ShowQuestionMessageBox("入院后确诊日期为空，是否继续？") == DialogResult.No)
            //    {
            //        return false;
            //    }
            //}
            //if(string.IsNullOrEmpty(txtMainDiagnosis.Text.Trim()))
            //{
            //    if(clsPublicFunction.ShowQuestionMessageBox("主要诊断为空，是否继续？") == DialogResult.No)
            //    {
            //        return false;
            //    }
            //}
            return true;
        }

        #region 添加新纪录 m_lngSubAddNew
        /// <summary>
        /// 添加新纪录 m_lngSubAddNew
        /// </summary>
        /// <returns></returns>
        protected override long m_lngSubAddNew()
        {
            if (!m_bolSaveCheck())
                return -1;
            string m_strCurrentDateTime = m_objPublicDomain.m_strGetServerTime();
            string m_strInPatientID = m_objSelectedPatient.m_StrInPatientID;
            string m_strInPatientDate = m_objSelectedPatient.m_DtmSelectedInDate.ToString("yyyy-MM-dd HH:mm:ss");
            bool m_bolIfSucceed = true;
            m_objCollection.m_objMain = m_objGetMain(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);
            m_objCollection.m_objContent = m_objGetContent(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);
            m_objCollection.m_objDiagnosisArr = m_objGetDiagnosisArr(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);

            m_objCollection.m_objOperationArr = m_objGetOperationArr(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);
            m_objCollection.m_objBabyArr = m_objGetBabyArr(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);
            m_objCollection.m_objChemotherapyArr = m_objGetChemotherapyArr(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);

            //电子签名 
            //记录ID通常为 住院号＋住院时间 || 住院号＋记录时间 来识别唯一 格式 00000056-2005-10-10 10:20:20
            clsEmrDigitalSign_VO objSign_VO = new clsEmrDigitalSign_VO();
            objSign_VO.m_strFORMID_VCHR = this.Name;
            objSign_VO.m_strFORMRECORDID_VCHR = m_strInPatientID.Trim() + "-" + m_strInPatientDate;
            objSign_VO.m_strSIGNIDID_VCHR = clsEMRLogin.LoginInfo.m_strEmpID;
            objSign_VO.m_strRegisterId = m_objBaseCurrentPatient.m_StrRegisterId;
            clsCheckSignersController objCheck = new clsCheckSignersController();
            if (objCheck.m_lngSign(m_objCollection, objSign_VO) == -1)
                return -1;

            long m_lngRes = m_objDomain.m_lngDoSave(m_objCollection, m_BlnIsAddNew);
            if (m_lngRes < 1)
            {
                m_mthShowDBError();
                m_objCollection.m_objMain = null;
                m_objCollection.m_objContent = null;
                m_objCollection.m_objBabyArr = null;
                m_objCollection.m_objChemotherapyArr = null;
                m_objCollection.m_objOperationArr = null;
                m_objCollection.m_objDiagnosisArr = null;
            }
            else
            {
                m_bolIfHasSave = true;
            }
            return m_lngRes;
        }

        #endregion


        #region 修改检查(删除，打印时也可用)
        /// <summary>
        /// 修改检查(删除，打印时也可用)
        /// </summary>
        /// <param name="p_bolMdfOrDel"></param>
        /// <returns></returns>
        private bool m_bolModifyCheck(bool p_bolMdfOrDel)
        {
            string m_strLastModifyDate = null;
            string m_strLastModifyUserID = null;
            if (m_objCollection == null || m_objCollection.m_objContent == null)
                return false;
            long m_lngRes = m_objDomain.m_lngGetLastModifyDateAndUser(m_objCollection.m_objContent.m_strInPatientID, m_objCollection.m_objContent.m_strInPatientDate, m_objCollection.m_objContent.m_strOpenDate, out m_strLastModifyDate, out m_strLastModifyUserID);
            if (m_lngRes < 1)
            {
                m_mthShowDBError();
                return false;
            }
            if (m_strLastModifyDate == null || m_strLastModifyDate == "")
            {
                string m_strDeactivedDate = null;
                string m_strDeactivedUserID = null;
                m_lngRes = m_objDomain.m_lngGetDeactivedDateAndUser(m_objCollection.m_objContent.m_strInPatientID, m_objCollection.m_objContent.m_strInPatientDate, out m_strDeactivedDate, out m_strDeactivedUserID);
                if (m_lngRes < 1)
                {
                    m_mthShowDBError();
                    return false;
                }
                else
                {
                    m_mthShowRecordDeleted(m_strDeactivedUserID, m_strDeactivedDate);
                    return false;
                }
            }

            if (DateTime.Parse(m_objCollection.m_objContent.m_strLastModifyDate) != DateTime.Parse(m_strLastModifyDate))
            {
                if (m_bolShowRecordModified(m_strLastModifyUserID, m_strLastModifyDate))
                {
                    m_mthCleanUpPatientInHospitalMainRecrodInfo();
                    m_mthCleanUpPatientDetailInfo();
                    m_mthSetPatientCurrentInHospitalDeptInfo();
                    m_mthDiaplayDetail();
                    return false;
                }
                else
                {
                    return false;
                }
            }
            else
            {
                if (p_bolMdfOrDel)//修改时
                {
                    //					if(m_bolShowIfModify())
                    //					{
                    return true;
                    //					}
                    //					else
                    //					{
                    //						return false;
                    //					}
                }
                else//删除时
                {
                    return true;
                }
            }
        }

        #endregion
        #region 修改纪录 m_lngSubModify
        /// <summary>
        /// 修改纪录 m_lngSubModify
        /// </summary>
        /// <returns></returns>
        protected override long m_lngSubModify()
        {
            if (!m_bolSaveCheck())
                return -1;
            if (!m_bolModifyCheck(true))
                return -1;
            string m_strCurrentDateTime = m_objPublicDomain.m_strGetServerTime();
            string m_strInPatientID = m_objSelectedPatient.m_StrInPatientID;
            string m_strInPatientDate = m_objSelectedPatient.m_DtmSelectedInDate.ToString("yyyy-MM-dd HH:mm:ss");
            bool m_bolIfSucceed = true;

            clsInHospitalMainRecord_Main m_objMain = m_objGetMain(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);

            clsInHospitalMainRecord_Content m_objContent = m_objGetContent(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);

            clsInHospitalMainRecord_Diagnosis[] m_objDiagnosisArr = m_objGetDiagnosisArr(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);

            clsInHospitalMainRecord_Operation[] m_objOperationArr = m_objGetOperationArr(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);

            clsInHospitalMainRecord_Baby[] m_objBabyArr = m_objGetBabyArr(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);

            clsInHospitalMainRecord_Chemotherapy[] m_objChemotherapyArr = m_objGetChemotherapyArr(m_strInPatientID, m_strInPatientDate, m_strCurrentDateTime);


            //电子签名
            clsInHospitalMainRecord_Collection m_objCollection1 = new clsInHospitalMainRecord_Collection();
            m_objCollection1.m_objMain = m_objMain;
            m_objCollection1.m_objContent = m_objContent;
            m_objCollection1.m_objDiagnosisArr = m_objDiagnosisArr;
            m_objCollection1.m_objOperationArr = m_objOperationArr;
            m_objCollection1.m_objBabyArr = m_objBabyArr;
            m_objCollection1.m_objChemotherapyArr = m_objChemotherapyArr;
            //记录ID通常为 住院号＋住院时间 || 住院号＋记录时间 来识别唯一 格式 00000056-2005-10-10 10:20:20
            clsEmrDigitalSign_VO objSign_VO = new clsEmrDigitalSign_VO();
            objSign_VO.m_strFORMID_VCHR = this.Name;
            objSign_VO.m_strFORMRECORDID_VCHR = m_strInPatientID.Trim() + "-" + m_strInPatientDate;
            objSign_VO.m_strSIGNIDID_VCHR = clsEMRLogin.LoginInfo.m_strEmpID;
            objSign_VO.m_strRegisterId = m_objBaseCurrentPatient.m_StrRegisterId;
            clsCheckSignersController objCheck = new clsCheckSignersController();
            if (objCheck.m_lngSign(m_objCollection1, objSign_VO) == -1)
                return -1;
            //			long m_lngRes = m_objDomain.m_lngDoSave(m_objCollection.m_objMain,m_objCollection.m_objContent,m_objCollection.m_objOtherDiagnosisArr,m_objCollection.m_objOperationArr,m_objCollection.m_objBabyArr,m_objCollection.m_objChemotherapyArr,m_BlnIsAddNew);
            long m_lngRes = m_objDomain.m_lngDoSave(m_objCollection1, m_BlnIsAddNew);

            if (m_lngRes < 1)
            {
                m_mthShowDBError();
            }
            else
            {
                m_objCollection.m_objMain = m_objMain;
                m_objCollection.m_objContent = m_objContent;
                m_objCollection.m_objDiagnosisArr = m_objDiagnosisArr;
                m_objCollection.m_objOperationArr = m_objOperationArr;
                m_objCollection.m_objBabyArr = m_objBabyArr;
                m_objCollection.m_objChemotherapyArr = m_objChemotherapyArr;
            }
            //			if(m_lngRes > 0)
            //			{
            //				TreeNode m_trnTempNode = trvTime.SelectedNode;
            //				trvTime.SelectedNode = trvTime.Nodes[0];
            //				trvTime.SelectedNode = m_trnTempNode;
            //			}
            return m_lngRes;
        }
        #endregion

        #region 删除记录
        /// <summary>
        /// 删除记录
        /// </summary>
        protected override long m_lngSubDelete()
        {
            if (m_objSelectedPatient == null || m_ObjCurrentEmrPatientSession == null)
            {
                m_mthShowNoPatient();
                return -1;
            }

            if (m_objCurrentContext.m_ObjControl.m_enmDeleteCheck(m_ObjCurrentEmrPatientSession.m_strAreaId, this, enmFormState.NowUser)
                == enmDBControlCheckResult.Disable)
            {
                clsPublicFunction.s_mthShowNotPermitMessage();
                return -1;
            }

            //if(m_objSelectedPatient != null)
            //{
            //    //2003.4.24 wingo modify m_StrPatientID --> m_StrInPatientID
            //    if(m_objSelectedPatient.m_StrHISInPatientID != txtInPatientID.Text.Trim())
            //    {
            //        m_mthShowNoPatient();
            //        return -1;
            //    }
            //}
            if (m_objCollection == null)
            {
                return -1;
            }
            //if(trvTime.Nodes[0].Nodes.Count <=0 || trvTime.SelectedNode == null)
            //    return -1;			

            if (!m_bolModifyCheck(false))
                return -1;

            long m_lngRes = m_objDomain.m_lngDeleteRecord(m_objCollection.m_objContent.m_strInPatientID, m_objCollection.m_objContent.m_strInPatientDate, m_objCollection.m_objContent.m_strOpenDate, MDIParent.OperatorID);
            if (m_lngRes < 1)
            {
                base.m_mthShowDBError();
                return -1;
            }
            else
            {
                //trvTime_AfterSelect(null,null);
                m_objCollection.m_objMain = null;
                m_objCollection.m_objContent = null;
                m_objCollection.m_objBabyArr = null;
                m_objCollection.m_objChemotherapyArr = null;
                m_objCollection.m_objOperationArr = null;
                m_objCollection.m_objDiagnosisArr = null;
                return 1;
            }
        }
        #endregion

        #region 获得主表的内容
        /// <summary>
        /// 获得主表的内容
        /// </summary>
        /// <param name="p_strInPatientID"></param>
        /// <param name="p_strInPatientDate"></param>
        /// <param name="p_strCurrentDateTime"></param>
        /// <returns></returns>
        private clsInHospitalMainRecord_Main m_objGetMain(string p_strInPatientID, string p_strInPatientDate, string p_strCurrentDateTime)
        {
            clsInHospitalMainRecord_Main m_objMain = new clsInHospitalMainRecord_Main();
            try
            {
                m_objMain.m_strInPatientID = p_strInPatientID;
                m_objMain.m_strInPatientDate = p_strInPatientDate;
                if (m_bolIfHasSave)
                    m_objMain.m_strOpenDate = m_objCollection.m_objMain.m_strOpenDate;
                else
                    m_objMain.m_strOpenDate = p_strCurrentDateTime;
                m_objMain.m_strCreateUserID = MDIParent.OperatorID;
                m_objMain.m_strDeActivedDate = "";
                m_objMain.m_strDeActivedOperatorID = "";
                m_objMain.m_strStatus = "1";
                m_objMain.m_strDiagnosisXML = txtDiagnosis.m_strGetXmlText();
                //m_objMain.m_strInHospitalDiagnosisXML = txtInHospitalDiagnosis.m_strGetXmlText();
                m_objMain.m_strMainDiagnosisXML = txtMainDiagnosis.m_strGetXmlText();
                m_objMain.m_strICD_10OfMainXML = txtICD_10OfMain.m_strGetXmlText();
                //m_objMain.m_strInfectionDiagnosisXML = txtInfectionDiagnosis.m_strGetXmlText();
                //m_objMain.m_strICD_10OfInfectionXML = txtICD_10OfInfection.m_strGetXmlText();
                m_objMain.m_strPathologyDiagnosisXML = txtPathologyDiagnosis.m_strGetXmlText();
                m_objMain.m_strScacheSourceXML = txtScacheSource.m_strGetXmlText();
                m_objMain.m_strSensitiveXML = txtSensitive.m_strGetXmlText();
                m_objMain.m_strHbsAgXML = txtHbsAg.m_strGetXmlText();
                m_objMain.m_strHCV_AbXML = txtHCV_Ab.m_strGetXmlText();
                m_objMain.m_strHIV_AbXML = txtHIV_Ab.m_strGetXmlText();
                m_objMain.m_strAccordWithOutHospitalXML = txtAccordWithOutHospital.m_strGetXmlText();
                m_objMain.m_strAccordInWithOutXML = txtAccordInWithOut.m_strGetXmlText();
                m_objMain.m_strAccordBeforeOperationWithAfterXML = txtAccordBeforeOperationWithAfter.m_strGetXmlText();
                m_objMain.m_strAccordClinicWithPathologyXML = txtAccordClinicWithPathology.m_strGetXmlText();
                m_objMain.m_strAccordRadiateWithPathologyXML = txtAccordRadiateWithPathology.m_strGetXmlText();
                m_objMain.m_strSalveTimesXML = txtSalveTimes.m_strGetXmlText();
                m_objMain.m_strSalveSuccessXML = txtSalveSuccess.m_strGetXmlText();
                m_objMain.m_strOriginalDiseaseGyXML = txtOriginalDiseaseGy.m_strGetXmlText();
                m_objMain.m_strOriginalDiseaseTimesXML = txtOriginalDiseaseTimes.m_strGetXmlText();
                m_objMain.m_strOriginalDiseaseDaysXML = txtOriginalDiseaseDays.m_strGetXmlText();
                m_objMain.m_strLymphGyXML = txtLymphGy.m_strGetXmlText();
                m_objMain.m_strLymphTimesXML = txtLymphTimes.m_strGetXmlText();
                m_objMain.m_strLymphDaysXML = txtLymphDays.m_strGetXmlText();
                m_objMain.m_strMetastasisGyXML = txtMetastasisGy.m_strGetXmlText();
                m_objMain.m_strMetastasisTimesXML = txtMetastasisTimes.m_strGetXmlText();
                m_objMain.m_strMetastasisDaysXML = txtMetastasisDays.m_strGetXmlText();
                m_objMain.m_strTotalAmtXML = txtTotalAmt.m_strGetXmlText();
                m_objMain.m_strBedAmtXML = txtBedAmt.m_strGetXmlText();
                m_objMain.m_strNurseAmtXML = txtNurseAmt.m_strGetXmlText();
                m_objMain.m_strWMAmtXML = txtWMAmt.m_strGetXmlText();
                m_objMain.m_strCMFinishedAmtXML = txtCMFinishedAmt.m_strGetXmlText();
                m_objMain.m_strCMSemiFinishedAmtXML = txtCMSemiFinishedAmt.m_strGetXmlText();
                m_objMain.m_strRadiationAmtXML = txtRadiationAmt.m_strGetXmlText();
                m_objMain.m_strAssayAmtXML = txtAssayAmt.m_strGetXmlText();
                m_objMain.m_strO2AmtXML = txtO2Amt.m_strGetXmlText();
                m_objMain.m_strBloodAmtXML = txtBloodAmt.m_strGetXmlText();
                m_objMain.m_strTreatmentAmtXML = txtTreatmentAmt.m_strGetXmlText();
                m_objMain.m_strOperationAmtXML = txtOperationAmt.m_strGetXmlText();
                m_objMain.m_strDeliveryChildAmtXML = txtDeliveryChildAmt.m_strGetXmlText();
                m_objMain.m_strCheckAmtXML = txtCheckAmt.m_strGetXmlText();
                m_objMain.m_strAnaethesiaAmtXML = txtAnaethesiaAmt.m_strGetXmlText();
                m_objMain.m_strBabyAmtXML = txtBabyAmt.m_strGetXmlText();
                m_objMain.m_strAccompanyAmtXML = txtAccompanyAmt.m_strGetXmlText();
                m_objMain.m_strOtherAmt1XML = txtOtherAmt1.m_strGetXmlText();
                m_objMain.m_strOtherAmt2XML = txtOtherAmt2.m_strGetXmlText();
                m_objMain.m_strOtherAmt3XML = txtOtherAmt3.m_strGetXmlText();
                m_objMain.m_strFollow_WeekXML = txtFollow_Week.m_strGetXmlText();
                m_objMain.m_strFollow_MonthXML = txtFollow_Month.m_strGetXmlText();
                m_objMain.m_strFollow_YearXML = txtFollow_Year.m_strGetXmlText();
                m_objMain.m_strBloodTypeXML = txtBloodType.m_strGetXmlText();
                m_objMain.m_strRBCXML = txtRBC.m_strGetXmlText();
                m_objMain.m_strPLTXML = txtPLT.m_strGetXmlText();
                m_objMain.m_strPlasmXML = txtPlasm.m_strGetXmlText();
                m_objMain.m_strWholeBloodXML = txtWholeBlood.m_strGetXmlText();
                m_objMain.m_strOtherBloodXML = txtOtherBlood.m_strGetXmlText();
                m_objMain.m_strConsultationXML = txtConsultation.m_strGetXmlText();
                m_objMain.m_strLongDistanctConsultationXML = txtLongDistanctConsultation.m_strGetXmlText();
                m_objMain.m_strTOPLevelXML = txtTOPLevel.m_strGetXmlText();
                m_objMain.m_strNurseLevelIXML = txtNurseLevelI.m_strGetXmlText();
                m_objMain.m_strNurseLevelIIXML = txtNurseLevelII.m_strGetXmlText();
                m_objMain.m_strNurseLevelIIIXML = txtNurseLevelIII.m_strGetXmlText();
                m_objMain.m_strICUXML = txtICU.m_strGetXmlText();
                m_objMain.m_strSpecialNurseXML = txtSpecialNurse.m_strGetXmlText();

                m_objMain.m_strInsuranceNumXML = txtInsuranceNum.m_strGetXmlText();
                m_objMain.m_strModeOfPaymentXML = string.Empty;
                m_objMain.m_strPatientHistoryNOXML = txtPatientHistoryNO.m_strGetXmlText();

                m_objMain.m_strMZICD10 = txtDiagnosisICD10.Text;
                m_objMain.m_strMAINICD10 = txtICD_10OfMain.Text;

            }
            catch (Exception err)
            {
                clsPublicFunction.ShowInformationMessageBox(err.Message + "\r\n" + err.StackTrace);
            }
            return m_objMain;
        }
        #endregion

        #region 获得子表的内容
        /// <summary>
        /// 获得子表的内容
        /// </summary>
        /// <param name="p_strInPatientID"></param>
        /// <param name="p_strInPatientDate"></param>
        /// <param name="p_strCurrentDateTime"></param>
        /// <returns></returns>
        private clsInHospitalMainRecord_Content m_objGetContent(string p_strInPatientID, string p_strInPatientDate, string p_strCurrentDateTime)
        {
            clsInHospitalMainRecord_Content m_objContent = new clsInHospitalMainRecord_Content();
            try
            {
                m_objContent.m_strInPatientID = p_strInPatientID;
                m_objContent.m_strInPatientDate = p_strInPatientDate;
                if (m_bolIfHasSave)
                    m_objContent.m_strOpenDate = m_objCollection.m_objMain.m_strOpenDate;
                else
                    m_objContent.m_strOpenDate = p_strCurrentDateTime;
                //				m_objContent.m_strOpenDate = p_strCurrentDateTime;
                m_objContent.m_strLastModifyDate = p_strCurrentDateTime;
                m_objContent.m_strLastModifyUserID = MDIParent.OperatorID;
                m_objContent.m_strDeActivedDate = "";
                m_objContent.m_strDeActivedOperatorID = "";
                m_objContent.m_strStatus = "1";
                m_objContent.m_strDiagnosis = txtDiagnosis.Text;
                //m_objContent.m_strInHospitalDiagnosis = txtInHospitalDiagnosis.Text;
                if (txtDoctor.Tag == null)
                    m_objContent.m_strDoctor = "";
                else
                    m_objContent.m_strDoctor = ((clsEmrEmployeeBase_VO)txtDoctor.Tag).m_strEMPID_CHR;
                if (Convert.ToInt32(dtpConfirmDiagnosisDate.Value.ToString("yyyyMMdd")) >= Convert.ToInt32(Convert.ToDateTime(m_objContent.m_strInPatientDate).ToString("yyyyMMdd")) && Convert.ToInt32(dtpConfirmDiagnosisDate.Value.ToString("yyyyMMdd")) <= (m_lblOutHospitalDate.Text != "" ? Convert.ToInt32(Convert.ToDateTime(m_lblOutHospitalDate.Text).ToString("yyyyMMdd")) : Convert.ToInt32(DateTime.Now.ToString("yyyyMMdd"))))
                {
                    m_objContent.m_strConfirmDiagnosisDate = dtpConfirmDiagnosisDate.Value.ToString("yyyy-MM-dd HH:mm:ss");
                }
                else
                {
                    MessageBox.Show("确诊日期应该在入院日期与出院日期之间!", "输入有误", MessageBoxButtons.OK, MessageBoxIcon.Warning);

                    dtpConfirmDiagnosisDate.Focus();

                    return null;
                }

                m_objContent.m_strCondictionWhenIn = gpbCondictionWhenIn.Tag.ToString();
                m_objContent.m_strMainDiagnosis = txtMainDiagnosis.Text;
                //m_objContent.m_strMainConditionSeq = gpbMainDiagnosis.Tag.ToString();
                if (m_cboMainSeq.SelectedIndex >= 0)
                {
                    m_objContent.m_strMainConditionSeq = m_cboMainSeq.SelectedIndex.ToString();
                }
                else
                {
                    m_objContent.m_strMainConditionSeq = "-1";
                }
                m_objContent.m_strICD_10OfMain = txtICD_10OfMain.Text;
                //m_objContent.m_strInfectionDiagnosis = txtInfectionDiagnosis.Text;
                //m_objContent.m_strInfectionCondictionSeq = gpbInfection.Tag.ToString();
                //m_objContent.m_strICD_10OfInfection = txtICD_10OfInfection.Text;
                m_objContent.m_strPathologyDiagnosis = txtPathologyDiagnosis.Text;
                m_objContent.m_strScacheSource = txtScacheSource.Text;
                m_objContent.m_strSensitive = txtSensitive.Text;
                m_objContent.m_strHbsAg = txtHbsAg.Text;
                m_objContent.m_strHCV_Ab = txtHCV_Ab.Text;
                m_objContent.m_strHIV_Ab = txtHIV_Ab.Text;
                m_objContent.m_strAccordWithOutHospital = txtAccordWithOutHospital.Text;
                m_objContent.m_strAccordInWithOut = txtAccordInWithOut.Text;
                m_objContent.m_strAccordBeforeOperationWithAfter = txtAccordBeforeOperationWithAfter.Text;
                m_objContent.m_strAccordClinicWithPathology = txtAccordClinicWithPathology.Text;

                m_objContent.m_strAccordRadiateWithPathology = txtAccordRadiateWithPathology.Text;
                m_objContent.m_strSalveTimes = txtSalveTimes.Text;
                m_objContent.m_strSalveSuccess = txtSalveSuccess.Text;
                m_objContent.m_strBirthPlace = m_cboProvince.Text + ">>" + m_cboCity.Text + ">>" + m_cboCounty.Text;
                if (txtDirectorDt.Tag == null)
                    m_objContent.m_strDirectorDt = "";
                else
                    m_objContent.m_strDirectorDt = ((clsEmrEmployeeBase_VO)txtDirectorDt.Tag).m_strEMPID_CHR;
                if (txtSubDirectorDt.Tag == null)
                    m_objContent.m_strSubDirectorDt = "";
                else
                    m_objContent.m_strSubDirectorDt = ((clsEmrEmployeeBase_VO)txtSubDirectorDt.Tag).m_strEMPID_CHR;
                if (txtDt.Tag == null)
                {
                    m_objContent.m_strDt = "";
                    //MessageBox.Show("主治医师必须签名", "签名警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    //return null;
                }
                else
                {
                    m_objContent.m_strDt = ((clsEmrEmployeeBase_VO)txtDt.Tag).m_strEMPID_CHR;
                }
                if (txtInHospitalDt.Tag == null)
                    m_objContent.m_strInHospitalDt = "";
                else
                    m_objContent.m_strInHospitalDt = ((clsEmrEmployeeBase_VO)txtInHospitalDt.Tag).m_strEMPID_CHR;
                if (txtAttendInForAdvancesStudyDt.Tag == null)
                    m_objContent.m_strAttendInForAdvancesStudyDt = "";
                else
                    m_objContent.m_strAttendInForAdvancesStudyDt = ((clsEmrEmployeeBase_VO)txtAttendInForAdvancesStudyDt.Tag).m_strEMPID_CHR;
                if (txtGraduateStudentIntern.Tag == null)
                    m_objContent.m_strGraduateStudentIntern = "";
                else
                    m_objContent.m_strGraduateStudentIntern = ((clsEmrEmployeeBase_VO)txtGraduateStudentIntern.Tag).m_strEMPID_CHR;
                //				if(txtIntern.Tag == null)
                //					m_objContent.m_strIntern = "";
                //				else
                //					m_objContent.m_strIntern = txtIntern.Tag.ToString();
                //实习医生自己签名
                //m_objContent.m_strIntern = txtIntern.Text;

                if (txtIntern.Tag == null)
                    m_objContent.m_strIntern = "";
                else
                    m_objContent.m_strIntern = ((clsEmrEmployeeBase_VO)txtIntern.Tag).m_strEMPID_CHR;

                if (txtCoder.Tag == null)
                    m_objContent.m_strCoder = "";
                else
                    m_objContent.m_strCoder = ((clsEmrEmployeeBase_VO)txtCoder.Tag).m_strEMPID_CHR;
                if (gpbQuality.Tag == null)
                {
                    m_objContent.m_strQuality = "";
                }
                else
                {
                    m_objContent.m_strQuality = gpbQuality.Tag.ToString();
                }

                if (txtQCDt.Tag == null)
                    m_objContent.m_strQCDt = "";
                else
                    m_objContent.m_strQCDt = ((clsEmrEmployeeBase_VO)txtQCDt.Tag).m_strEMPID_CHR;
                if (txtQCNurse.Tag == null)
                {
                    m_objContent.m_strQCNurse = "";
                    //MessageBox.Show("质控护士必须签名", "签名警告", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    //return null ;
                }
                else
                {
                    m_objContent.m_strQCNurse = ((clsEmrEmployeeBase_VO)txtQCNurse.Tag).m_strEMPID_CHR;
                }
                m_objContent.m_strQCTime = dtpQCTime.Value.ToString("yyyy-MM-dd HH:mm:ss");
                m_objContent.m_strRTModeSeq = gpbRTMode.Tag.ToString();
                m_objContent.m_strRTRuleSeq = gpbRTRule.Tag.ToString();
                if (radioButton1.Checked)
                    m_objContent.m_strOperation = "0";
                else
                    m_objContent.m_strOperation = "1";
                if (radioButton3.Checked)
                    m_objContent.m_strBaby = "0";
                else
                    m_objContent.m_strBaby = "1";
                if (chkRTCo.Checked)
                    m_objContent.m_strRTCo = "1";
                else
                    m_objContent.m_strRTCo = "0";
                if (chkRTAccelerator.Checked)
                    m_objContent.m_strRTAccelerator = "1";
                else
                    m_objContent.m_strRTAccelerator = "0";
                if (chkRTX_Ray.Checked)
                    m_objContent.m_strRTX_Ray = "1";
                else
                    m_objContent.m_strRTX_Ray = "0";
                if (chkRTLacuna.Checked)
                    m_objContent.m_strRTLacuna = "1";
                else
                    m_objContent.m_strRTLacuna = "0";

                m_objContent.m_strOriginalDiseaseSeq = gpbOriginalDisease.Tag.ToString();
                m_objContent.m_strOriginalDiseaseGy = txtOriginalDiseaseGy.Text;
                m_objContent.m_strOriginalDiseaseTimes = txtOriginalDiseaseTimes.Text;
                m_objContent.m_strOriginalDiseaseDays = txtOriginalDiseaseDays.Text;
                m_objContent.m_strOriginalDiseaseBeginDate = dtpOriginalDiseaseBeginDate.Text;
                m_objContent.m_strOriginalDiseaseEndDate = dtpOriginalDiseaseEndDate.Text;
                m_objContent.m_strLymphSeq = gpbLymph.Tag.ToString();
                m_objContent.m_strLymphGy = txtLymphGy.Text;
                m_objContent.m_strLymphTimes = txtLymphTimes.Text;
                m_objContent.m_strLymphDays = txtLymphDays.Text;
                m_objContent.m_strLymphBeginDate = dtpLymphBeginDate.Text;
                m_objContent.m_strLymphEndDate = dtpLymphEndDate.Text;
                m_objContent.m_strMetastasisGy = txtMetastasisGy.Text;
                m_objContent.m_strMetastasisTimes = txtMetastasisTimes.Text;
                m_objContent.m_strMetastasisDays = txtMetastasisDays.Text;
                m_objContent.m_strMetastasisBeginDate = dtpMetastasisBeginDate.Text;
                m_objContent.m_strMetastasisEndDate = dtpMetastasisEndDate.Text;
                m_objContent.m_strChemotherapyModeSeq = gpbChemotherapyMode.Tag.ToString();
                if (chkChemotherapyWholeBody.Checked)
                    m_objContent.m_strChemotherapyWholeBody = "1";
                else
                    m_objContent.m_strChemotherapyWholeBody = "0";
                if (chkChemotherapyLocal.Checked)
                    m_objContent.m_strChemotherapyLocal = "1";
                else
                    m_objContent.m_strChemotherapyLocal = "0";
                if (chkChemotherapyIntubate.Checked)
                    m_objContent.m_strChemotherapyIntubate = "1";
                else
                    m_objContent.m_strChemotherapyIntubate = "0";
                if (chkChemotherapyThorax.Checked)
                    m_objContent.m_strChemotherapyThorax = "1";
                else
                    m_objContent.m_strChemotherapyThorax = "0";
                if (chkChemotherapyAbdomen.Checked)
                    m_objContent.m_strChemotherapyAbdomen = "1";
                else
                    m_objContent.m_strChemotherapyAbdomen = "0";
                if (chkChemotherapySpinal.Checked)
                    m_objContent.m_strChemotherapySpinal = "1";
                else
                    m_objContent.m_strChemotherapySpinal = "0";
                if (chkChemotherapyOtherTry.Checked)
                    m_objContent.m_strChemotherapyOtherTry = "1";
                else
                    m_objContent.m_strChemotherapyOtherTry = "0";
                if (chkChemotherapyOther.Checked)
                    m_objContent.m_strChemotherapyOther = "1";
                else
                    m_objContent.m_strChemotherapyOther = "0";
                if (radioButton5.Checked)
                    m_objContent.m_strChemotherapy = "0";
                else
                    m_objContent.m_strChemotherapy = "1";

                m_objContent.m_strTotalAmt = txtTotalAmt.Text;
                m_objContent.m_strBedAmt = txtBedAmt.Text;
                m_objContent.m_strNurseAmt = txtNurseAmt.Text;
                m_objContent.m_strWMAmt = txtWMAmt.Text;
                m_objContent.m_strCMFinishedAmt = txtCMFinishedAmt.Text;
                m_objContent.m_strCMSemiFinishedAmt = txtCMSemiFinishedAmt.Text;
                m_objContent.m_strRadiationAmt = txtRadiationAmt.Text;
                m_objContent.m_strAssayAmt = txtAssayAmt.Text;
                m_objContent.m_strO2Amt = txtO2Amt.Text;
                m_objContent.m_strBloodAmt = txtBloodAmt.Text;
                m_objContent.m_strTreatmentAmt = txtTreatmentAmt.Text;
                m_objContent.m_strOperationAmt = txtOperationAmt.Text;
                m_objContent.m_strDeliveryChildAmt = txtDeliveryChildAmt.Text;
                m_objContent.m_strCheckAmt = txtCheckAmt.Text;
                m_objContent.m_strAnaethesiaAmt = txtAnaethesiaAmt.Text;
                m_objContent.m_strBabyAmt = txtBabyAmt.Text;
                m_objContent.m_strAccompanyAmt = txtAccompanyAmt.Text;
                m_objContent.m_strOtherAmt1 = txtOtherAmt1.Text;
                m_objContent.m_strOtherAmt2 = txtOtherAmt2.Text;
                m_objContent.m_strOtherAmt3 = txtOtherAmt3.Text;
                m_objContent.m_strCorpseCheck = gpbCorpseCheck.Tag.ToString();
                m_objContent.m_strFirstCase = gpbFirstCase.Tag.ToString();
                m_objContent.m_strFollow = gpbFollow.Tag.ToString();
                m_objContent.m_strFollow_Week = txtFollow_Week.Text;
                m_objContent.m_strFollow_Month = txtFollow_Month.Text;
                m_objContent.m_strFollow_Year = txtFollow_Year.Text;
                m_objContent.m_strModelCase = gpbModelCase.Tag.ToString();
                m_objContent.m_strBloodType = txtBloodType.Text;
                m_objContent.m_strBloodRh = gpbBloodRh.Tag.ToString();
                m_objContent.m_strBloodTransActoin = gpbBloodTransAction.Tag.ToString();
                m_objContent.m_strRBC = txtRBC.Text;
                m_objContent.m_strPLT = txtPLT.Text;
                m_objContent.m_strPlasm = txtPlasm.Text;
                m_objContent.m_strWholeBlood = txtWholeBlood.Text;
                m_objContent.m_strOtherBlood = txtOtherBlood.Text;
                m_objContent.m_strConsultation = txtConsultation.Text;
                m_objContent.m_strLongDistanctConsultation = txtLongDistanctConsultation.Text;
                m_objContent.m_strTOPLevel = txtTOPLevel.Text;
                m_objContent.m_strNurseLevelI = txtNurseLevelI.Text;
                m_objContent.m_strNurseLevelII = txtNurseLevelII.Text;
                m_objContent.m_strNurseLevelIII = txtNurseLevelIII.Text;
                m_objContent.m_strICU = txtICU.Text;
                m_objContent.m_strSpecialNurse = txtSpecialNurse.Text;

                m_objContent.m_strInsuranceNum = txtInsuranceNum.Text;
                m_objContent.m_strModeOfPayment = m_cboModeOfPayment.Text;
                m_objContent.m_strPatientHistoryNO = m_objBaseCurrentPatient.m_StrEMRInPatientID;//txtPatientHistoryNO.Text;
                m_objContent.m_strOutPatientDate = m_lblOutHospitalDate.Text;
            }
            catch (Exception err)
            {
                clsPublicFunction.ShowInformationMessageBox(err.Message + "\r\n" + err.StackTrace);
            }
            return m_objContent;
        }
        #endregion

        #region 获得界面其它诊断的内容
        /// <summary>
        /// 获得界面其它诊断的内容
        /// </summary>
        /// <param name="p_strInPatientID"></param>
        /// <param name="p_strInPatientDate"></param>
        /// <param name="p_strCurrentDateTime"></param>
        /// <returns></returns>
        private clsInHospitalMainRecord_OtherDiagnosis[] m_objGetOtherDiagnosisArr(string p_strInPatientID, string p_strInPatientDate, string p_strCurrentDateTime, out bool p_bolIfSucceed)
        {
            p_bolIfSucceed = true;
            //dtgOtherDiagnosis.UnSelect(dtgOtherDiagnosis.CurrentCell.RowNumber);
            //if (this.ActiveControl.Parent == dtgOtherDiagnosis)
            //{
            //    dtgOtherDiagnosis.CurrentCell = new DataGridCell(dtgOtherDiagnosis.CurrentCell.RowNumber + 1, 0);
            //}
            int m_intRows = m_dtbOtherDiagnosis.Rows.Count;
            if (m_intRows <= 0)
                return null;
            clsInHospitalMainRecord_OtherDiagnosis[] m_objOtherDiagnosisArr = new clsInHospitalMainRecord_OtherDiagnosis[m_intRows];
            try
            {
                for (int i1 = 0; i1 < m_intRows; i1++)
                {
                    m_objOtherDiagnosisArr[i1] = new clsInHospitalMainRecord_OtherDiagnosis();
                    m_objOtherDiagnosisArr[i1].m_strInPatientID = p_strInPatientID;
                    m_objOtherDiagnosisArr[i1].m_strInPatientDate = p_strInPatientDate;
                    if (m_bolIfHasSave)
                        m_objOtherDiagnosisArr[i1].m_strOpenDate = m_objCollection.m_objMain.m_strOpenDate;
                    else
                        m_objOtherDiagnosisArr[i1].m_strOpenDate = p_strCurrentDateTime;
                    m_objOtherDiagnosisArr[i1].m_strLastModifyDate = p_strCurrentDateTime;
                    m_objOtherDiagnosisArr[i1].m_strLastModifyUserID = MDIParent.OperatorID;
                    m_objOtherDiagnosisArr[i1].m_strDeActivedDate = "";
                    m_objOtherDiagnosisArr[i1].m_strDeActivedOperatorID = "";
                    m_objOtherDiagnosisArr[i1].m_strStatus = "1";
                    m_objOtherDiagnosisArr[i1].m_strSeqID = i1.ToString();
                    m_objOtherDiagnosisArr[i1].m_strDiagnosisDesc = m_dtbOtherDiagnosis.Rows[i1][0].ToString();

                    if (m_dtbOtherDiagnosis.Rows[i1][1].ToString() == "True")
                        m_objOtherDiagnosisArr[i1].m_strConditionSeq = "0";
                    else if (m_dtbOtherDiagnosis.Rows[i1][2].ToString() == "True")
                        m_objOtherDiagnosisArr[i1].m_strConditionSeq = "1";
                    else if (m_dtbOtherDiagnosis.Rows[i1][3].ToString() == "True")
                        m_objOtherDiagnosisArr[i1].m_strConditionSeq = "2";
                    else if (m_dtbOtherDiagnosis.Rows[i1][4].ToString() == "True")
                        m_objOtherDiagnosisArr[i1].m_strConditionSeq = "3";
                    else if (m_dtbOtherDiagnosis.Rows[i1][5].ToString() == "True")
                        m_objOtherDiagnosisArr[i1].m_strConditionSeq = "4";
                    if (m_objOtherDiagnosisArr[i1].m_strConditionSeq == null || m_objOtherDiagnosisArr[i1].m_strConditionSeq == "")
                    {
                        clsPublicFunction.ShowInformationMessageBox("其他诊断中选择项第 " + ++i1 + " 行有误，请检查！");
                        p_bolIfSucceed = false;
                        return null;
                    }
                    m_objOtherDiagnosisArr[i1].m_strICD10 = m_dtbOtherDiagnosis.Rows[i1][6].ToString();
                }
            }
            catch (Exception err)
            {
                clsPublicFunction.ShowInformationMessageBox(err.Message + "\r\n" + err.StackTrace);
            }
            return m_objOtherDiagnosisArr;
        }
        #endregion

        #region 获得界面手术情况的内容
        /// <summary>
        /// 获得界面手术情况的内容
        /// </summary>
        /// <param name="p_strInPatientID"></param>
        /// <param name="p_strInPatientDate"></param>
        /// <param name="p_strCurrentDateTime"></param>
        /// <returns></returns>
        private clsInHospitalMainRecord_Operation[] m_objGetOperationArr(string p_strInPatientID, string p_strInPatientDate, string p_strCurrentDateTime)
        {
            if (this.ActiveControl.Parent == dtgOperation)
            {
                dtgOperation.CurrentCell = new DataGridCell(dtgOperation.CurrentCell.RowNumber + 1, 0);
            }
            //dtgOperation.UnSelect(dtgOtherDiagnosis.CurrentCell.RowNumber);
            int m_intRows = m_dtbOperationDetail.Rows.Count;
            if (m_intRows <= 0)
                return null;
            clsInHospitalMainRecord_Operation[] m_objOperationArr = new clsInHospitalMainRecord_Operation[m_intRows];
            try
            {
                for (int i1 = 0; i1 < m_intRows; i1++)
                {
                    m_objOperationArr[i1] = new clsInHospitalMainRecord_Operation();
                    m_objOperationArr[i1].m_strInPatientID = p_strInPatientID;
                    m_objOperationArr[i1].m_strInPatientDate = p_strInPatientDate;
                    if (m_bolIfHasSave)
                        m_objOperationArr[i1].m_strOpenDate = m_objCollection.m_objMain.m_strOpenDate;
                    else
                        m_objOperationArr[i1].m_strOpenDate = p_strCurrentDateTime;
                    //					m_objOperationArr[i1].m_strOpenDate = p_strCurrentDateTime;
                    m_objOperationArr[i1].m_strLastModifyDate = p_strCurrentDateTime;
                    m_objOperationArr[i1].m_strLastModifyUserID = MDIParent.OperatorID;
                    m_objOperationArr[i1].m_strDeActivedDate = "";
                    m_objOperationArr[i1].m_strDeActivedOperatorID = "";
                    m_objOperationArr[i1].m_strStatus = "1";
                    m_objOperationArr[i1].m_strSeqID = i1.ToString();
                    m_objOperationArr[i1].m_strOperationID = m_dtbOperationDetail.Rows[i1][0].ToString();
                    if (m_dtbOperationDetail.Rows[i1][1].ToString() == "")
                        m_objOperationArr[i1].m_strOperationDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm");
                    else
                        m_objOperationArr[i1].m_strOperationDate = m_dtbOperationDetail.Rows[i1][1].ToString();
                    m_objOperationArr[i1].m_strOperationName = m_dtbOperationDetail.Rows[i1][2].ToString();
                    m_objOperationArr[i1].m_strOperator = m_dtbOperationDetail.Rows[i1][10].ToString();
                    m_objOperationArr[i1].m_strAssistant1 = m_dtbOperationDetail.Rows[i1][11].ToString();
                    m_objOperationArr[i1].m_strAssistant2 = m_dtbOperationDetail.Rows[i1][12].ToString();
                    m_objOperationArr[i1].m_strAanaesthesiaModeName = m_dtbOperationDetail.Rows[i1][6].ToString();
                    m_objOperationArr[i1].m_strAanaesthesiaModeID = m_dtbOperationDetail.Rows[i1][9].ToString();
                    m_objOperationArr[i1].m_strCutLevel = m_dtbOperationDetail.Rows[i1][7].ToString();
                    m_objOperationArr[i1].m_strAnaesthetistName = m_dtbOperationDetail.Rows[i1][8].ToString();
                    m_objOperationArr[i1].m_strAnaesthetist = m_dtbOperationDetail.Rows[i1][13].ToString();
                }
            }
            catch (Exception err)
            {
                clsPublicFunction.ShowInformationMessageBox(err.Message + "\r\n" + err.StackTrace);
            }
            return m_objOperationArr;
        }
        #endregion

        #region 获得界面婴儿记录的内容
        /// <summary>
        /// 获得界面婴儿记录的内容
        /// </summary>
        /// <param name="p_strInPatientID"></param>
        /// <param name="p_strInPatientDate"></param>
        /// <param name="p_strCurrentDateTime"></param>
        /// <returns></returns>
        private clsInHospitalMainRecord_Baby[] m_objGetBabyArr(string p_strInPatientID, string p_strInPatientDate, string p_strCurrentDateTime)
        {
            //dtgBaby.UnSelect(dtgOtherDiagnosis.CurrentCell.RowNumber);
            if (this.ActiveControl.Parent == dtgBaby)
            {
                dtgBaby.CurrentCell = new DataGridCell(dtgBaby.CurrentCell.RowNumber + 1, 0);
            }
            int m_intRows = m_dtbBaby.Rows.Count;
            if (m_intRows <= 0)
                return null;
            clsInHospitalMainRecord_Baby[] m_objBabyArr = new clsInHospitalMainRecord_Baby[m_intRows];
            try
            {
                for (int i1 = 0; i1 < m_intRows; i1++)
                {
                    m_objBabyArr[i1] = new clsInHospitalMainRecord_Baby();
                    m_objBabyArr[i1].m_strInPatientID = p_strInPatientID;
                    m_objBabyArr[i1].m_strInPatientDate = p_strInPatientDate;
                    if (m_bolIfHasSave)
                        m_objBabyArr[i1].m_strOpenDate = m_objCollection.m_objMain.m_strOpenDate;
                    else
                        m_objBabyArr[i1].m_strOpenDate = p_strCurrentDateTime;
                    //					m_objBabyArr[i1].m_strOpenDate = p_strCurrentDateTime;
                    m_objBabyArr[i1].m_strLastModifyDate = p_strCurrentDateTime;
                    m_objBabyArr[i1].m_strLastModifyUserID = MDIParent.OperatorID;
                    m_objBabyArr[i1].m_strDeActivedDate = "";
                    m_objBabyArr[i1].m_strDeActivedOperatorID = "";
                    m_objBabyArr[i1].m_strStatus = "1";
                    m_objBabyArr[i1].m_strSeqID = i1.ToString();

                    if (m_dtbBaby.Rows[i1][1].ToString() == "True")
                        m_objBabyArr[i1].m_strMale = "1";
                    else
                        m_objBabyArr[i1].m_strMale = "0";
                    if (m_dtbBaby.Rows[i1][2].ToString() == "True")
                        m_objBabyArr[i1].m_strFemale = "1";
                    else
                        m_objBabyArr[i1].m_strFemale = "0";
                    if (m_dtbBaby.Rows[i1][3].ToString() == "True")
                        m_objBabyArr[i1].m_strLiveBorn = "1";
                    else
                        m_objBabyArr[i1].m_strLiveBorn = "0";
                    if (m_dtbBaby.Rows[i1][4].ToString() == "True")
                        m_objBabyArr[i1].m_strDieBorn = "1";
                    else
                        m_objBabyArr[i1].m_strDieBorn = "0";
                    if (m_dtbBaby.Rows[i1][5].ToString() == "True")
                        m_objBabyArr[i1].m_strDieNotBorn = "1";
                    else
                        m_objBabyArr[i1].m_strDieNotBorn = "0";

                    m_objBabyArr[i1].m_strWeight = m_dtbBaby.Rows[i1][6].ToString();

                    if (m_dtbBaby.Rows[i1][7].ToString() == "True")
                        m_objBabyArr[i1].m_strDie = "1";
                    else
                        m_objBabyArr[i1].m_strDie = "0";
                    if (m_dtbBaby.Rows[i1][8].ToString() == "True")
                        m_objBabyArr[i1].m_strChangeDepartment = "1";
                    else
                        m_objBabyArr[i1].m_strChangeDepartment = "0";
                    if (m_dtbBaby.Rows[i1][9].ToString() == "True")
                        m_objBabyArr[i1].m_strOutHospital = "1";
                    else
                        m_objBabyArr[i1].m_strOutHospital = "0";
                    if (m_dtbBaby.Rows[i1][10].ToString() == "True")
                        m_objBabyArr[i1].m_strNaturalCondiction = "1";
                    else
                        m_objBabyArr[i1].m_strNaturalCondiction = "0";
                    if (m_dtbBaby.Rows[i1][11].ToString() == "True")
                        m_objBabyArr[i1].m_strSuffocate1 = "1";
                    else
                        m_objBabyArr[i1].m_strSuffocate1 = "0";
                    if (m_dtbBaby.Rows[i1][12].ToString() == "True")
                        m_objBabyArr[i1].m_strSuffocate2 = "1";
                    else
                        m_objBabyArr[i1].m_strSuffocate2 = "0";

                    m_objBabyArr[i1].m_strInfectionTimes = m_dtbBaby.Rows[i1][13].ToString();
                    m_objBabyArr[i1].m_strInfectionName = m_dtbBaby.Rows[i1][14].ToString();
                    m_objBabyArr[i1].m_strICD10 = m_dtbBaby.Rows[i1][15].ToString();
                    m_objBabyArr[i1].m_strSalveTimes = m_dtbBaby.Rows[i1][16].ToString();
                    m_objBabyArr[i1].m_strSalveSuccessTimes = m_dtbBaby.Rows[i1][17].ToString();
                }
            }
            catch (Exception err)
            {
                clsPublicFunction.ShowInformationMessageBox(err.Message + "\r\n" + err.StackTrace);
            }
            return m_objBabyArr;
        }
        #endregion

        #region 获得界面化疗用药及疗效的内容
        /// <summary>
        /// 获得界面化疗用药及疗效的内容
        /// </summary>
        /// <param name="p_strInPatientID"></param>
        /// <param name="p_strInPatientDate"></param>
        /// <param name="p_strCurrentDateTime"></param>
        /// <returns></returns>
        private clsInHospitalMainRecord_Chemotherapy[] m_objGetChemotherapyArr(string p_strInPatientID, string p_strInPatientDate, string p_strCurrentDateTime)
        {
            //dtgChemotherapy.UnSelect(dtgOtherDiagnosis.CurrentCell.RowNumber);
            if (this.ActiveControl.Parent == dtgChemotherapy)
            {
                dtgChemotherapy.CurrentCell = new DataGridCell(dtgChemotherapy.CurrentCell.RowNumber + 1, 0);
            }
            int m_intRows = m_dtbChemotherapy.Rows.Count;
            if (m_intRows <= 0)
                return null;
            clsInHospitalMainRecord_Chemotherapy[] m_objChemotherapyArr = new clsInHospitalMainRecord_Chemotherapy[m_intRows];
            try
            {
                for (int i1 = 0; i1 < m_intRows; i1++)
                {
                    m_objChemotherapyArr[i1] = new clsInHospitalMainRecord_Chemotherapy();
                    m_objChemotherapyArr[i1].m_strInPatientID = p_strInPatientID;
                    m_objChemotherapyArr[i1].m_strInPatientDate = p_strInPatientDate;
                    if (m_bolIfHasSave)
                        m_objChemotherapyArr[i1].m_strOpenDate = m_objCollection.m_objMain.m_strOpenDate;
                    else
                        m_objChemotherapyArr[i1].m_strOpenDate = p_strCurrentDateTime;
                    //					m_objChemotherapyArr[i1].m_strOpenDate = p_strCurrentDateTime;
                    m_objChemotherapyArr[i1].m_strLastModifyDate = p_strCurrentDateTime;
                    m_objChemotherapyArr[i1].m_strLastModifyUserID = MDIParent.OperatorID;
                    m_objChemotherapyArr[i1].m_strDeActivedDate = "";
                    m_objChemotherapyArr[i1].m_strDeActivedOperatorID = "";
                    m_objChemotherapyArr[i1].m_strStatus = "1";
                    m_objChemotherapyArr[i1].m_strSeqID = i1.ToString();

                    if (m_dtbChemotherapy.Rows[i1][0].ToString() == "")//处理用户没有做任何改动，而DataGrid里面放的是空值时的情况
                        m_objChemotherapyArr[i1].m_strChemotherapyDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm");
                    else
                        m_objChemotherapyArr[i1].m_strChemotherapyDate = m_dtbChemotherapy.Rows[i1][0].ToString();
                    m_objChemotherapyArr[i1].m_strMedicineName = m_dtbChemotherapy.Rows[i1][1].ToString();
                    m_objChemotherapyArr[i1].m_strPeriod = m_dtbChemotherapy.Rows[i1][2].ToString();

                    if (m_dtbChemotherapy.Rows[i1][3].ToString() == "True")
                        m_objChemotherapyArr[i1].m_strField_CR = "1";
                    else
                        m_objChemotherapyArr[i1].m_strField_CR = "0";

                    if (m_dtbChemotherapy.Rows[i1][4].ToString() == "True")
                        m_objChemotherapyArr[i1].m_strField_PR = "1";
                    else
                        m_objChemotherapyArr[i1].m_strField_PR = "0";

                    if (m_dtbChemotherapy.Rows[i1][5].ToString() == "True")
                        m_objChemotherapyArr[i1].m_strField_MR = "1";
                    else
                        m_objChemotherapyArr[i1].m_strField_MR = "0";

                    if (m_dtbChemotherapy.Rows[i1][6].ToString() == "True")
                        m_objChemotherapyArr[i1].m_strField_S = "1";
                    else
                        m_objChemotherapyArr[i1].m_strField_S = "0";

                    if (m_dtbChemotherapy.Rows[i1][7].ToString() == "True")
                        m_objChemotherapyArr[i1].m_strField_P = "1";
                    else
                        m_objChemotherapyArr[i1].m_strField_P = "0";

                    if (m_dtbChemotherapy.Rows[i1][8].ToString() == "True")
                        m_objChemotherapyArr[i1].m_strField_NA = "1";
                    else
                        m_objChemotherapyArr[i1].m_strField_NA = "0";

                }
            }
            catch (Exception err)
            {
                clsPublicFunction.ShowInformationMessageBox(err.Message + "\r\n" + err.StackTrace);
            }
            return m_objChemotherapyArr;
        }
        #endregion

        #region 获得界面诊断内容
        /// <summary>
        /// 获得界面诊断内容
        /// </summary>
        /// <param name="p_strInPatientID"></param>
        /// <param name="p_strInPatientDate"></param>
        /// <param name="p_strCurrentDateTime"></param>
        /// <returns></returns>
        private clsInHospitalMainRecord_Diagnosis[] m_objGetDiagnosisArr(string p_strInPatientID, string p_strInPatientDate, string p_strCurrentDateTime)
        {
            System.Collections.Generic.List<clsInHospitalMainRecord_Diagnosis> objDiagnosisArr = new System.Collections.Generic.List<clsInHospitalMainRecord_Diagnosis>();
            if (this.ActiveControl != null)
            {
                if (this.ActiveControl.Parent == dgDiagnosis1)
                {
                    dgDiagnosis1.CurrentCell = new DataGridCell(dgDiagnosis1.CurrentCell.RowNumber + 1, 0);
                }
                else if (this.ActiveControl.Parent == dgDiagnosis2)
                {
                    dgDiagnosis2.CurrentCell = new DataGridCell(dgDiagnosis2.CurrentCell.RowNumber + 1, 0);
                }
                else if (this.ActiveControl.Parent == dgDiagnosis3)
                {
                    dgDiagnosis3.CurrentCell = new DataGridCell(dgDiagnosis3.CurrentCell.RowNumber + 1, 0);
                }
            }

            try
            {
                clsInHospitalMainRecord_Diagnosis objDia = null;
                DataRow drCurrent = null;
                if (m_dtbInHospitalDiagnosis != null)
                {
                    int rowsCount = m_dtbInHospitalDiagnosis.Rows.Count;
                    if (rowsCount > 0)
                    {
                        for (int i = 0; i < rowsCount; i++)
                        {
                            drCurrent = m_dtbInHospitalDiagnosis.Rows[i];
                            if (drCurrent.RowState == DataRowState.Deleted || drCurrent.RowState == DataRowState.Detached)
                            {
                                continue;
                            }
                            objDia = new clsInHospitalMainRecord_Diagnosis();
                            objDia.m_strDIAGNOSISTYPE = "1";
                            objDia.m_strDIAGNOSIS = drCurrent[0].ToString();
                            objDia.m_strICD10 = drCurrent[1].ToString();
                            objDia.m_strSEQID = i.ToString();
                            objDia.m_strRESULT = string.Empty;
                            objDia.m_strINPATIENTID = p_strInPatientID;
                            objDia.m_strINPATIENTDATE = p_strInPatientDate;
                            objDia.m_strLASTMODIFYDATE = p_strCurrentDateTime;
                            objDia.m_strLASTMODIFYUSERID = MDIParent.OperatorID;
                            if (m_bolIfHasSave)
                                objDia.m_strOPENDATE = m_objCollection.m_objMain.m_strOpenDate;
                            else
                                objDia.m_strOPENDATE = p_strCurrentDateTime;
                            objDiagnosisArr.Add(objDia);
                        }
                    }
                }
                if (m_dtbInfectionDiagnosis != null)
                {
                    int rowsCount = m_dtbInfectionDiagnosis.Rows.Count;
                    if (rowsCount > 0)
                    {
                        for (int i = 0; i < rowsCount; i++)
                        {
                            drCurrent = m_dtbInfectionDiagnosis.Rows[i];
                            if (drCurrent.RowState == DataRowState.Deleted || drCurrent.RowState == DataRowState.Detached)
                            {
                                continue;
                            }
                            objDia = new clsInHospitalMainRecord_Diagnosis();
                            objDia.m_strDIAGNOSISTYPE = "2";
                            objDia.m_strDIAGNOSIS = drCurrent[0].ToString();
                            objDia.m_strICD10 = drCurrent[1].ToString();
                            objDia.m_strSEQID = i.ToString();
                            objDia.m_strRESULT = ConvertState(drCurrent[2].ToString(), 0, "");
                            objDia.m_strINPATIENTID = p_strInPatientID;
                            objDia.m_strINPATIENTDATE = p_strInPatientDate;
                            objDia.m_strLASTMODIFYDATE = p_strCurrentDateTime;
                            objDia.m_strLASTMODIFYUSERID = MDIParent.OperatorID;
                            if (m_bolIfHasSave)
                                objDia.m_strOPENDATE = m_objCollection.m_objMain.m_strOpenDate;
                            else
                                objDia.m_strOPENDATE = p_strCurrentDateTime;
                            objDiagnosisArr.Add(objDia);
                        }
                    }
                }
                if (m_dtbOtherDiagnosis != null)
                {
                    int rowsCount = m_dtbOtherDiagnosis.Rows.Count;
                    if (rowsCount > 0)
                    {
                        for (int i = 0; i < rowsCount; i++)
                        {
                            drCurrent = m_dtbOtherDiagnosis.Rows[i];
                            if (drCurrent.RowState == DataRowState.Deleted || drCurrent.RowState == DataRowState.Detached)
                            {
                                continue;
                            }
                            objDia = new clsInHospitalMainRecord_Diagnosis();
                            objDia.m_strDIAGNOSISTYPE = "3";
                            objDia.m_strDIAGNOSIS = drCurrent[0].ToString();
                            objDia.m_strICD10 = drCurrent[1].ToString();
                            objDia.m_strSEQID = i.ToString();
                            objDia.m_strRESULT = ConvertState(drCurrent[2].ToString(), 0, "");
                            objDia.m_strINPATIENTID = p_strInPatientID;
                            objDia.m_strINPATIENTDATE = p_strInPatientDate;
                            objDia.m_strLASTMODIFYDATE = p_strCurrentDateTime;
                            objDia.m_strLASTMODIFYUSERID = MDIParent.OperatorID;
                            if (m_bolIfHasSave)
                                objDia.m_strOPENDATE = m_objCollection.m_objMain.m_strOpenDate;
                            else
                                objDia.m_strOPENDATE = p_strCurrentDateTime;
                            objDiagnosisArr.Add(objDia);
                        }
                    }
                }
            }
            catch (Exception err)
            {
                clsPublicFunction.ShowInformationMessageBox(err.Message + "\r\n" + err.StackTrace);
            }
            return objDiagnosisArr.ToArray();
        }
        #endregion

        private void lsvEmployee_DoubleClick(object sender, System.EventArgs e)
        {
            //if(sender==null)
            //{
            //    clsPublicFunction.ShowInformationMessageBox("参数错误!");						
            //    return;
            //}

            ///*
            // * 选择了医生后，在相应的输入框显示姓名，在输入框的Tag保存医生信息
            // */
            //if(lsvEmployee.SelectedItems.Count <= 0)
            //    return;

            //clsEmployee objEmp = (clsEmployee)lsvEmployee.SelectedItems[0].Tag;

            //if(objEmp == null)
            //    return;	

            ////			if(!m_blnCheckEmployeeSign(objEmp.m_StrEmployeeID,objEmp.m_StrLastName))
            ////				return;

            //lsvEmployee.Visible = false;

            //if( ( ((Control)sender).Top==txtDoctor.Bottom && ((Control)sender).Left==txtDoctor.Left) || ((Control)sender).Name=="txtDoctor")
            //{
            //    txtDoctor.Text=objEmp.m_StrLastName;
            //    txtDoctor.Tag= objEmp.m_StrEmployeeID;
            //    txtDoctor.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtDirectorDt.Bottom && ((Control)sender).Left==txtDirectorDt.Left) || ((Control)sender).Name=="txtDirectorDt")
            //{
            //    txtDirectorDt.Text=objEmp.m_StrLastName;
            //    txtDirectorDt.Tag= objEmp.m_StrEmployeeID;
            //    txtDirectorDt.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtSubDirectorDt.Bottom && ((Control)sender).Left==txtSubDirectorDt.Left) || ((Control)sender).Name=="txtSubDirectorDt")
            //{
            //    txtSubDirectorDt.Text=objEmp.m_StrLastName;
            //    txtSubDirectorDt.Tag= objEmp.m_StrEmployeeID;
            //    txtSubDirectorDt.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtDt.Bottom && ((Control)sender).Left==txtDt.Left) || ((Control)sender).Name=="txtDt")
            //{
            //    txtDt.Text=objEmp.m_StrLastName;
            //    txtDt.Tag= objEmp.m_StrEmployeeID;
            //    txtDt.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtInHospitalDt.Bottom && ((Control)sender).Left==txtInHospitalDt.Left) || ((Control)sender).Name=="txtInHospitalDt")
            //{
            //    txtInHospitalDt.Text=objEmp.m_StrLastName;
            //    txtInHospitalDt.Tag= objEmp.m_StrEmployeeID;
            //    txtInHospitalDt.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtAttendInForAdvancesStudyDt.Bottom && ((Control)sender).Left==txtAttendInForAdvancesStudyDt.Left) || ((Control)sender).Name=="txtAttendInForAdvancesStudyDt")
            //{
            //    txtAttendInForAdvancesStudyDt.Text=objEmp.m_StrLastName;
            //    txtAttendInForAdvancesStudyDt.Tag= objEmp.m_StrEmployeeID;
            //    txtAttendInForAdvancesStudyDt.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtGraduateStudentIntern.Bottom && ((Control)sender).Left==txtGraduateStudentIntern.Left) || ((Control)sender).Name=="txtGraduateStudentIntern")
            //{
            //    txtGraduateStudentIntern.Text=objEmp.m_StrLastName;
            //    txtGraduateStudentIntern.Tag= objEmp.m_StrEmployeeID;
            //    txtGraduateStudentIntern.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtIntern.Bottom && ((Control)sender).Left==txtIntern.Left) || ((Control)sender).Name=="txtIntern")
            //{
            //    txtIntern.Text=objEmp.m_StrLastName;
            //    txtIntern.Tag= objEmp.m_StrEmployeeID;
            //    txtIntern.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtCoder.Bottom && ((Control)sender).Left==txtCoder.Left) || ((Control)sender).Name=="txtCoder")
            //{
            //    txtCoder.Text=objEmp.m_StrLastName;
            //    txtCoder.Tag= objEmp.m_StrEmployeeID;
            //    txtCoder.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtQCDt.Bottom && ((Control)sender).Left==txtQCDt.Left) || ((Control)sender).Name=="txtQCDt")
            //{
            //    txtQCDt.Text=objEmp.m_StrLastName;
            //    txtQCDt.Tag= objEmp.m_StrEmployeeID;
            //    txtQCDt.Focus();
            //}
            //else if( ( ((Control)sender).Top==txtQCNurse.Bottom && ((Control)sender).Left==txtQCNurse.Left) || ((Control)sender).Name=="txtQCNurse")
            //{
            //    txtQCNurse.Text=objEmp.m_StrLastName;
            //    txtQCNurse.Tag= objEmp.m_StrEmployeeID;
            //    txtQCNurse.Focus();
            //}	

        }

        #region old
        //		private void lsvEmployee_DoubleClick(object sender, System.EventArgs e)
        //		{
        //			if(lsvEmployee.SelectedItems.Count <= 0)
        //				return;
        //
        //			string m_strEmplayeeID = lsvEmployee.SelectedItems[0].SubItems[0].Text;
        //			string m_strEmplayeeName = lsvEmployee.SelectedItems[0].SubItems[1].Text;
        //
        //			if(!m_blnCheckEmployeeSign(m_strEmplayeeID,m_strEmplayeeName))
        //				return;
        //
        //			m_RtbCurrentTextBox.Tag = m_strEmplayeeID;
        //			m_bolIfChange = false;
        //			m_RtbCurrentTextBox.Text = m_strEmplayeeName;
        //			m_bolIfChange = true;
        //			
        //			lsvEmployee.Visible = false;
        //			
        //			/*
        //			 * 用于防止模糊查询的ListView位置随意变动
        //			 * */
        //			if(m_RtbCurrentTextBox.Name == "txtDoctor")
        //				lblMasterDiagnose.Focus();
        //			else
        //				lblTumourPatientRecordTitle.Focus();
        //			m_RtbCurrentTextBox.Focus();
        //		}
        #endregion old



        #region 给所有CheckBox的GroupBox容器的Tag付初值为"1"
        /// <summary>
        /// 给所有CheckBox的GroupBox容器的Tag付初值为"1",表示默认选择第一个。
        /// 写入数据库时直接从GroupBox的Tag中获得CheckBox的值
        /// </summary>
        private void m_mthInitGroupBoxTagValue()
        {
            gpbCondictionWhenIn.Tag = "2";
            //gpbMainDiagnosis.Tag = "0";
            //gpbInfection.Tag = "0";
            gpbQuality.Tag = "-1";
            gpbRTMode.Tag = "-1";
            gpbRTRule.Tag = "-1";
            gpbOriginalDisease.Tag = "-1";
            gpbLymph.Tag = "-1";
            gpbChemotherapyMode.Tag = "-1";
            gpbCorpseCheck.Tag = "0";
            gpbFirstCase.Tag = "0";
            gpbModelCase.Tag = "0";
            gpbFollow.Tag = "0";
            gpbBloodRh.Tag = "3";
            gpbBloodTransAction.Tag = "3";
        }
        #endregion

        #region CheckedChange
        //private void MainDiagnosis_CheckedChanged(object sender, System.EventArgs e)
        //{
        //    if(rdbHealOfMain.Checked)
        //        gpbMainDiagnosis.Tag = "0";
        //    else if(rdbOnTheMendOfMain.Checked)
        //        gpbMainDiagnosis.Tag = "1";
        //    else if(rdbNotCureOfMain.Checked)
        //        gpbMainDiagnosis.Tag = "2";
        //    else if(rdbDieOfMain.Checked)
        //        gpbMainDiagnosis.Tag = "3";
        //    else if(rdbNotDefineOfMain.Checked)
        //        gpbMainDiagnosis.Tag = "4";
        //}

        private void CondictionWhenIn_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbDanger.Checked)
                gpbCondictionWhenIn.Tag = "0";
            else if (rdbEmergency.Checked)
                gpbCondictionWhenIn.Tag = "1";
            else if (rdbNormal.Checked)
                gpbCondictionWhenIn.Tag = "2";
        }

        //private void Infection_CheckedChanged(object sender, System.EventArgs e)
        //{
        //    if(rdbHealOfInfection.Checked)
        //        gpbInfection.Tag = "0";
        //    else if(rdbOnTheMendOfInfection.Checked)
        //        gpbInfection.Tag = "1";
        //    else if(rdbNotCureOfInfection.Checked)
        //        gpbInfection.Tag = "2";
        //    else if(rdbDieOfInfection.Checked)
        //        gpbInfection.Tag = "3";
        //    else if(rdbNotDefineOfInfection.Checked)
        //        gpbInfection.Tag = "4";
        //}

        private void Quality_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbQuality1.Checked)
                gpbQuality.Tag = "0";
            else if (rdbQuality2.Checked)
                gpbQuality.Tag = "1";
            else if (rdbQuality3.Checked)
                gpbQuality.Tag = "2";
        }

        private void RTMode_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbRTCure.Checked)
                gpbRTMode.Tag = "0";
            else if (rdbRTAppeasement.Checked)
                gpbRTMode.Tag = "1";
            else if (rdbRTAssistant.Checked)
                gpbRTMode.Tag = "2";
        }

        private void RTRule_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbContinue.Checked)
                gpbRTRule.Tag = "0";
            else if (rdbRTGap.Checked)
                gpbRTRule.Tag = "1";
            else if (rdbRTSection.Checked)
                gpbRTRule.Tag = "2";
        }

        private void OriginalDisease_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbOriginalDiseaseFirst.Checked)
                gpbOriginalDisease.Tag = "0";
            else if (rdbOriginalDiseaseRepeat.Checked)
                gpbOriginalDisease.Tag = "1";
        }

        private void Lymph_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbLymphFirst.Checked)
                gpbLymph.Tag = "0";
            else if (rdbLymphRepeat.Checked)
                gpbLymph.Tag = "1";

        }

        private void ChemotherapyMode_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbChemotherapyCure.Checked)
                gpbChemotherapyMode.Tag = "0";
            else if (rdbChemotherapyAppeasement.Checked)
                gpbChemotherapyMode.Tag = "1";
            else if (rdbChemotherapyAssisantNew.Checked)
                gpbChemotherapyMode.Tag = "2";
            else if (rdbChemotherapyAssistant.Checked)
                gpbChemotherapyMode.Tag = "3";
            else if (rdbChemotherapyNewMedicine.Checked)
                gpbChemotherapyMode.Tag = "4";
        }

        private void CorpseCheck_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbCorpseCheckYes.Checked)
                gpbCorpseCheck.Tag = "1";
            else if (rdbCorpseCheckNO.Checked)
                gpbCorpseCheck.Tag = "0";
        }

        private void FirstCase_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbFirstCaseYes.Checked)
                gpbFirstCase.Tag = "1";
            else if (rdbFirstCaseNO.Checked)
                gpbFirstCase.Tag = "0";
        }

        private void ModelCase_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbModelCaseYes.Checked)
                gpbModelCase.Tag = "1";
            else if (rdbModelCaseNO.Checked)
                gpbModelCase.Tag = "0";
        }

        private void Follow_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbFollowYes.Checked)
            {
                gpbFollow.Tag = "1";
                txtFollow_Week.Enabled = true;
                txtFollow_Month.Enabled = true;
                txtFollow_Year.Enabled = true;
                txtFollow_Week.Text = "";
                txtFollow_Month.Text = "";
                txtFollow_Year.Text = "";
            }
            else if (rdbFollowNO.Checked)
            {
                gpbFollow.Tag = "0";
                txtFollow_Week.Text = "/";
                txtFollow_Month.Text = "/";
                txtFollow_Year.Text = "/";
                txtFollow_Week.Enabled = false;
                txtFollow_Month.Enabled = false;
                txtFollow_Year.Enabled = false;
            }
        }

        private void BloodRh_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbBloodRh_Ka.Checked)
                gpbBloodRh.Tag = "1";
            else if (rdbBloodRh_An.Checked)
                gpbBloodRh.Tag = "2";
            else if (rdbBloodRh_No.Checked)
                gpbBloodRh.Tag = "3";
        }

        private void BloodTransAction_CheckedChanged(object sender, System.EventArgs e)
        {
            if (rdbBloodTransActionYes.Checked)
                gpbBloodTransAction.Tag = "1";
            else if (rdbBloodTransActionNO.Checked)
                gpbBloodTransAction.Tag = "2";
            else if (rdbBloodTransNoAction.Checked)
                gpbBloodTransAction.Tag = "3";
        }
        #endregion


        /// <summary>
        /// 在手术DataGrid中，当前所使用的DataGridTextBox
        /// </summary>
        private DataGridTextBox m_dgtCurrentBox;

        #region 把模糊查询的结果放在lsvOperationEmplayee中
        /// <summary>
        /// 把模糊查询的结果放在lsvOperationEmplayee中
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void m_objAddGridListViewItemArr(object sender, EventArgs e)
        {
            clsOperationEqipmentQtyDomain m_objOEQDomain = new clsOperationEqipmentQtyDomain();
            DataGridTextBox m_dgtTemp = ((DataGridTextBox)sender);
            if (m_dgtTemp.Text.Trim() == "")
                return;
            m_dgtCurrentBox = m_dgtTemp;

            try
            {
                lsvOperationEmployee.Items.Clear();
                bool blnSuccess = false;

                ListViewItem[] lsvItemArr = null;

                if (m_dgtTemp == null || m_dgtTemp.Text == null || m_dgtTemp.Text == "")
                    return;
                lsvItemArr = m_objOEQDomain.m_lviGetEmployee(m_dgtTemp.Text, ref blnSuccess);

                if (blnSuccess == false)
                    return;
                for (int i1 = 0; i1 < lsvItemArr.Length; i1++)
                {
                    lsvOperationEmployee.Items.AddRange(new ListViewItem[] { lsvItemArr[i1] });
                }

                m_mthChangeListViewLastColumnWidth(lsvOperationEmployee);
            }
            catch { }
        }
        #endregion


        private void lsvOperationEmployee_DoubleClick(object sender, System.EventArgs e)
        {
            if (lsvOperationEmployee.SelectedItems.Count <= 0)
                return;

            string m_strEmplayeeName = lsvOperationEmployee.SelectedItems[0].SubItems[1].Text;
            string m_strEmplayeeID = lsvOperationEmployee.SelectedItems[0].SubItems[0].Text;

            //			if(!m_blnCheckEmployeeSign(m_strEmplayeeID,m_strEmplayeeName))
            //				return;

            int m_intCurrentColumnNumber = dtgOperation.CurrentCell.ColumnNumber;
            int m_intCurrentRowNumber = this.dtgOperation.CurrentRowIndex;
            DataRow m_dtrOperation = this.m_dtbOperationDetail.Rows[m_intCurrentRowNumber];
            object[] m_objRes = m_dtrOperation.ItemArray;
            if (m_intCurrentColumnNumber == 3)
            {
                m_objRes[3] = lsvOperationEmployee.SelectedItems[0].SubItems[1].Text;
                m_objRes[10] = lsvOperationEmployee.SelectedItems[0].SubItems[0].Text;
            }
            if (m_intCurrentColumnNumber == 4)
            {
                m_objRes[4] = lsvOperationEmployee.SelectedItems[0].SubItems[1].Text;
                m_objRes[11] = lsvOperationEmployee.SelectedItems[0].SubItems[0].Text;
            }
            if (m_intCurrentColumnNumber == 5)
            {
                m_objRes[5] = lsvOperationEmployee.SelectedItems[0].SubItems[1].Text;
                m_objRes[12] = lsvOperationEmployee.SelectedItems[0].SubItems[0].Text;
            }
            if (m_intCurrentColumnNumber == 8)
            {
                m_objRes[8] = lsvOperationEmployee.SelectedItems[0].SubItems[1].Text;
                m_objRes[13] = lsvOperationEmployee.SelectedItems[0].SubItems[0].Text;
            }
            this.m_dtbOperationDetail.Rows[m_intCurrentRowNumber].ItemArray = m_objRes;
            lsvOperationEmployee.Visible = false;
            //lblTumourPatientRecordTitle.Focus();
        }


        #region 把模糊查询的结果放在lsvAanaesthesiaMode中
        /// <summary>
        /// 把模糊查询的结果放在lsvAanaesthesiaMode中
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void m_objAddGridAanaesthesiaModeListViewItemArr(object sender, EventArgs e)
        {
            string m_strInput = m_objGridListView4.strGetCurrentText().Trim();
            if (m_strInput == null || m_strInput == "")
                return;

            clsAnaesthesiaModeInOperation[] m_objAnaesthesiaModeArr = null;
            long m_lngRes = m_objDomain.m_lngGetAnaesthesiaModeLikeID(m_strInput, out m_objAnaesthesiaModeArr);
            if (m_lngRes < 1)
            {
                m_mthShowDBError();
                return;
            }
            try
            {
                lsvAanaesthesiaMode.Items.Clear();

                if (m_objAnaesthesiaModeArr == null || m_objAnaesthesiaModeArr.Length <= 0)
                    return;

                ListViewItem m_lviNewItem;
                for (int i1 = 0; i1 < m_objAnaesthesiaModeArr.Length; i1++)
                {
                    m_lviNewItem = new ListViewItem(m_objAnaesthesiaModeArr[i1].strAnaesthesiaModeID);
                    m_lviNewItem.SubItems.Add(m_objAnaesthesiaModeArr[i1].strAnaesthesiaModeName);
                    lsvAanaesthesiaMode.Items.Add(m_lviNewItem);
                }

                m_mthChangeListViewLastColumnWidth(lsvAanaesthesiaMode);
            }
            catch { }
        }
        #endregion

        private void lsvAanaesthesiaMode_DoubleClick(object sender, System.EventArgs e)
        {
            if (lsvAanaesthesiaMode.Items.Count <= 0)
                return;
            if (lsvAanaesthesiaMode.SelectedItems.Count <= 0)
                return;
            int m_intCurrentColumnNumber = dtgOperation.CurrentCell.ColumnNumber;
            int m_intCurrentRowNumber = this.dtgOperation.CurrentRowIndex;
            DataRow m_dtrOperation = this.m_dtbOperationDetail.Rows[m_intCurrentRowNumber];
            object[] m_objRes = m_dtrOperation.ItemArray;
            m_objRes[6] = lsvAanaesthesiaMode.SelectedItems[0].SubItems[1].Text;
            m_objRes[9] = lsvAanaesthesiaMode.SelectedItems[0].SubItems[0].Text;
            m_dtbOperationDetail.Rows[m_intCurrentRowNumber].ItemArray = m_objRes;
            lsvAanaesthesiaMode.Visible = false;
            //lblTumourPatientRecordTitle.Focus();
        }

        private void dtgOperation_CurrentCellChanged(object sender, System.EventArgs e)
        {
            //dtgOperationCurrentCellChanged();
            //int m_intCurrentGridColumnNumber = dtgOperation.CurrentCell.ColumnNumber;
            //int m_intCurrentGridRowNumber = this.dtgOperation.CurrentRowIndex;

            //int m_intCurrentTableRowNumber = this.m_dtbOperationDetail.Rows.Count;

            //DataRow m_dtrOperation = this.m_dtbOperationDetail.Rows[m_intCurrentGridRowNumber];
            //object[] m_objRes = new object[13];
            //if (m_intCurrentGridRowNumber == m_intCurrentTableRowNumber)
            //{

            //}
            //if (m_intCurrentRowNumber == 0)
            //{
            //    if (m_dtbOperationDetail.Rows.Count < 0)
            //        m_objRes[1] = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
            //    m_dtbOperationDetail.Rows.Add(m_objRes);
            //}
            //if (m_intCurrentRowNumber > 0 && m_dtbOperationDetail.Rows.Count < m_intCurrentRowNumber)
            //{
            //    m_objRes[1] = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
            //    m_dtbOperationDetail.Rows.Add(m_objRes);
            //}
            //if (m_dtbOperationDetail.Rows.Count < m_intCurrentRowNumber)
            //{
            //    m_objRes[1] = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
            //    m_dtbOperationDetail.Rows.Add(m_objRes);
            //}
            //if (m_intCurrentColumnNumber == 1 && m_objRes[1].ToString() != "")
            //{
            //    m_objRes[1] = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
            //}
            //this.m_dtbOperationDetail.Rows[m_intCurrentRowNumber].ItemArray = m_objRes;
            //lsvAanaesthesiaMode.Visible = false;
            //lblTumourPatientRecordTitle.Focus();
        }

        #region PublicFunction
        public void Copy()
        {
            m_lngCopy();
        }

        public void Cut()
        {
            m_lngCut();
        }

        public void Delete()
        {
            if (m_ObjCurrentEmrPatientSession == null || m_ObjCurrentEmrPatientSession.m_dtmEMRInpatientDate == DateTime.MinValue)
            {
                clsPublicFunction.ShowInformationMessageBox("请选择入院时间！");
                return;
            }

            long m_lngRe = m_lngDelete();
            if (m_lngRe > 0)
            {
                m_mthPerformSessionChanged(m_ObjCurrentEmrPatientSession, 0);
                clsPublicFunction.ShowInformationMessageBox("删除成功！");
            }
        }

        public void Display()
        {

        }

        public void Display(string cardno, string sendcheckdate)
        {

        }

        public void Paste()
        {
            m_lngPaste();
        }

        public void Print()
        {
            m_lngPrint();
        }

        public void Redo()
        {

        }

        /// <summary>
        ///是否按提交按钮保存
        /// </summary>
        private bool m_blnIsCommit = false;
        public void Save()
        {

            long m_lngRe = m_lngSave();
            if (m_lngRe > 0)
            {
                if (!m_blnIsCommit)
                {
                    m_mthPerformSessionChanged(m_ObjCurrentEmrPatientSession, 0);
                    clsPublicFunction.ShowInformationMessageBox("保存成功！");
                }
            }
            else if (m_lngRe == -40)
                clsPublicFunction.ShowInformationMessageBox("对不起，您没有权限修改！");
            else
                clsPublicFunction.ShowInformationMessageBox("保存失败！");

        }

        public void Undo()
        {

        }
        public void Verify()
        {

            try
            {
                //检查当前病人变量是否为null 
                if (m_objCollection == null)
                {
                    clsPublicFunction.ShowInformationMessageBox("未选定病人,无法验证!");
                }
                string strInPatientID = m_objCollection.m_objContent.m_strInPatientID;
                string strInPatientDate = DateTime.Parse(m_objCollection.m_objContent.m_strInPatientDate).ToString("yyyy-MM-dd HH:mm:ss");
                string strRecordID = strInPatientID.Trim() + "-" + strInPatientDate;
                long lngRes = m_lngSignVerify(this.Name.Trim(), strRecordID);
            }
            catch (Exception exp)
            {
                MessageBox.Show("签名验证出现异常：" + exp.Message, "Message", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        protected override iCare.enmFormState m_EnmCurrentFormState
        {
            get
            {
                return enmFormState.NowUser;
            }
        }
        #endregion

        private void m_mthCleanUP()
        {
            m_mthCleanUpPatientBaseInfo();
            m_mthCleanUpPatientDetailInfo();
            m_mthCleanUpPatientInHospitalMainRecrodInfo();
            m_objCollection.m_objMain = null;
            m_objCollection.m_objContent = null;
            m_objCollection.m_objDiagnosisArr = null;
            m_objCollection.m_objOperationArr = null;
            m_objCollection.m_objBabyArr = null;
            m_objCollection.m_objChemotherapyArr = null;
            m_mthSetControlReadOnly(this, true);
        }

        #region 清空病人基本信息内容
        /// <summary>
        /// 清空病人基本信息内容
        /// </summary>
        private void m_mthCleanUpPatientBaseInfo()
        {
            base.m_mthClearPatientBaseInfo();
            //			m_txtPatientName.Text = "";
            //			lblSex.Text = "";
            m_dtpBirthDate.Value = DateTime.Now;
            //			lblAge.Text = "";
            m_txtMarried.Text = "";
            m_txtOccupation.Text = "";
            m_txtNationality.Text = "";
            m_txtNation.Text = "";
            m_txtIDCard.Text = "";
            //m_txtProvince.Text = "";
            m_txtCountry.Text = "";
            m_txtOfficeAddress.Text = "";
            m_txtHomePhone.Text = "";
            m_txtOfficePC.Text = "";
            m_txtHomeAddress.Text = "";
            m_txtHomePC.Text = "";
            m_txtContactMan.Text = "";
            m_txtRelation.Text = "";
            m_txtContactManAddress.Text = "";
            m_txtContactManPhone.Text = "";
        }
        #endregion

        #region 清空病人基本住院信息内容
        /// <summary>
        /// 清空病人基本住院信息内容
        /// </summary>
        private void m_mthCleanUpPatientDetailInfo()
        {
            //默认签名
            MDIParent.m_mthSetDefaulEmployee(m_txtSign);

            //dtgChangeDept.CurrentRowIndex = 0;
            //m_dtbChangeDept.Rows.Clear();
            lblInHosptialSetion.Text = "";
            lblInSickRoom.Text = "";
            lblOutHospitalSetion.Text = "";
            lblOutSickRoom.Text = "";
            lblInHospitalDays.Text = "";
            //dtpOutHospitalDate.Value = DateTime.Now;
            m_lblOutHospitalDate.Text = "";
            m_lsvTransDept.Items.Clear();
        }
        #endregion

        #region 清空病人住院病案首页内容
        /// <summary>
        /// 清空病人住院病案首页内容
        /// </summary>
        private void m_mthCleanUpPatientInHospitalMainRecrodInfo()
        {
            m_strCurrentOpenDate = "";

            txtInsuranceNum.m_mthClearText();
            //m_cboModeOfPayment.m_mthClearText();
            txtPatientHistoryNO.m_mthClearText();
            //dtpOutHospitalDate.Value = DateTime.Now;
            m_lblOutHospitalDate.Text = "";
            m_lsvTransDept.Items.Clear();

            txtDiagnosis.m_mthClearText();
            //txtInHospitalDiagnosis.m_mthClearText();
            txtDoctor.Tag = null;
            txtDoctor.Text = string.Empty;
            dtpConfirmDiagnosisDate.Value = DateTime.Now;
            gpbCondictionWhenIn.Tag = "2";
            rdbDanger.Checked = false;
            rdbEmergency.Checked = false;
            rdbNormal.Checked = true;

            txtMainDiagnosis.m_mthClearText();

            //gpbMainDiagnosis.Tag = "0";
            //rdbHealOfMain.Checked = true;
            //rdbOnTheMendOfMain.Checked = false;
            //rdbNotCureOfMain.Checked = false;
            //rdbDieOfMain.Checked = false;
            //rdbNotDefineOfMain.Checked = false;

            txtICD_10OfMain.m_mthClearText();
            //txtInfectionDiagnosis.m_mthClearText();

            //gpbInfection.Tag = "0";
            //rdbHealOfInfection.Checked = true;
            //rdbOnTheMendOfInfection.Checked = false;
            //rdbNotCureOfInfection.Checked = false;
            //rdbDieOfInfection.Checked = false;
            //rdbNotDefineOfInfection.Checked = false;

            //txtICD_10OfInfection.m_mthClearText();
            txtPathologyDiagnosis.Text = "无";
            //			txtScacheSource.Text = clsDefaultValue.c_strScacheSource;
            txtSensitive.Text = "未发现";
            txtHbsAg.m_mthClearText();
            txtHCV_Ab.m_mthClearText();
            txtHIV_Ab.m_mthClearText();
            txtAccordWithOutHospital.m_mthClearText();
            txtAccordInWithOut.m_mthClearText();
            txtAccordBeforeOperationWithAfter.m_mthClearText();
            txtAccordClinicWithPathology.m_mthClearText();
            txtAccordRadiateWithPathology.m_mthClearText();
            txtSalveTimes.m_mthClearText();
            txtSalveSuccess.m_mthClearText();
            txtDirectorDt.Tag = null;
            txtDirectorDt.Text = string.Empty;
            txtSubDirectorDt.Tag = null;
            txtSubDirectorDt.Text = string.Empty;
            txtDt.Tag = null;
            txtDt.Text = string.Empty;
            txtInHospitalDt.Tag = null;
            txtInHospitalDt.Text = string.Empty;
            txtAttendInForAdvancesStudyDt.Tag = null;
            txtAttendInForAdvancesStudyDt.Text = string.Empty;

            txtGraduateStudentIntern.Tag = null;
            txtGraduateStudentIntern.Text = string.Empty;
            txtIntern.Tag = null;
            txtIntern.Text = string.Empty;
            txtCoder.Tag = null;
            txtCoder.Text = string.Empty;

            gpbQuality.Tag = "-1";
            rdbQuality1.Checked = false;
            rdbQuality2.Checked = false;
            rdbQuality3.Checked = false;

            txtQCDt.Tag = null;
            txtQCDt.Text = string.Empty;
            txtQCNurse.Tag = null;
            txtQCNurse.Text = string.Empty;
            //			dtpQCTime.Value = DateTime.Parse("1900年01月01日");
            dtpQCTime.Value = DateTime.Now;

            gpbRTMode.Tag = "-1";
            rdbRTCure.Checked = false;
            rdbRTAppeasement.Checked = false;
            rdbRTAssistant.Checked = false;

            gpbRTRule.Tag = "-1";
            rdbContinue.Checked = false;
            rdbRTGap.Checked = false;
            rdbRTSection.Checked = false;

            chkRTCo.Checked = false;
            chkRTAccelerator.Checked = false;
            chkRTX_Ray.Checked = false;
            chkRTLacuna.Checked = false;

            gpbOriginalDisease.Tag = "-1";
            rdbOriginalDiseaseFirst.Checked = false;
            rdbOriginalDiseaseRepeat.Checked = false;
            txtOriginalDiseaseGy.m_mthClearText();
            txtOriginalDiseaseTimes.m_mthClearText();
            txtOriginalDiseaseDays.m_mthClearText();
            //dtpOriginalDiseaseBeginDate.Text = DateTime.Now.ToString("yyyyMMdd"); 
            //dtpOriginalDiseaseEndDate.Text = DateTime.Now.ToString("yyyyMMdd");

            gpbLymph.Tag = "-1";
            rdbLymphFirst.Checked = false;
            rdbLymphRepeat.Checked = false;

            txtLymphGy.m_mthClearText();
            txtLymphTimes.m_mthClearText();
            txtLymphDays.m_mthClearText();
            //dtpLymphBeginDate.Text = DateTime.Now.ToString("yyyyMMdd");
            //dtpLymphEndDate.Text = DateTime.Now.ToString("yyyyMMdd");
            txtMetastasisGy.m_mthClearText();
            txtMetastasisTimes.m_mthClearText();
            txtMetastasisDays.m_mthClearText();
            //dtpMetastasisBeginDate.Text = DateTime.Now.ToString("yyyyMMdd");
            //dtpMetastasisEndDate.Text = DateTime.Now.ToString("yyyyMMdd");

            dtpOriginalDiseaseBeginDate.m_mthClearValue();
            dtpOriginalDiseaseEndDate.m_mthClearValue();
            dtpLymphBeginDate.m_mthClearValue();
            dtpLymphEndDate.m_mthClearValue();
            dtpMetastasisBeginDate.m_mthClearValue();
            dtpMetastasisEndDate.m_mthClearValue();

            gpbChemotherapyMode.Tag = "-1";
            rdbChemotherapyCure.Checked = false;
            rdbChemotherapyAppeasement.Checked = false;
            rdbChemotherapyAssisantNew.Checked = false;
            rdbChemotherapyAssistant.Checked = false;
            rdbChemotherapyNewMedicine.Checked = false;

            chkChemotherapyWholeBody.Checked = false;
            chkChemotherapyLocal.Checked = false;
            chkChemotherapyIntubate.Checked = false;
            chkChemotherapyThorax.Checked = false;
            chkChemotherapyAbdomen.Checked = false;
            chkChemotherapySpinal.Checked = false;
            chkChemotherapyOtherTry.Checked = false;
            chkChemotherapyOther.Checked = false;

            txtTotalAmt.m_mthClearText();
            txtBedAmt.m_mthClearText();
            txtNurseAmt.m_mthClearText();
            txtWMAmt.m_mthClearText();
            txtCMFinishedAmt.m_mthClearText();
            txtCMSemiFinishedAmt.m_mthClearText();
            txtRadiationAmt.m_mthClearText();
            txtAssayAmt.m_mthClearText();
            txtO2Amt.m_mthClearText();
            txtBloodAmt.m_mthClearText();
            txtTreatmentAmt.m_mthClearText();
            txtOperationAmt.m_mthClearText();
            txtDeliveryChildAmt.m_mthClearText();
            txtCheckAmt.m_mthClearText();
            txtAnaethesiaAmt.m_mthClearText();
            txtBabyAmt.m_mthClearText();
            txtAccompanyAmt.m_mthClearText();
            txtOtherAmt1.m_mthClearText();
            txtOtherAmt2.m_mthClearText();
            txtOtherAmt3.m_mthClearText();

            gpbCorpseCheck.Tag = "0";
            rdbCorpseCheckYes.Checked = false;
            rdbCorpseCheckNO.Checked = true;

            gpbFirstCase.Tag = "0";
            rdbFirstCaseYes.Checked = false;
            rdbFirstCaseNO.Checked = true;

            gpbFollow.Tag = "0";
            rdbFollowYes.Checked = false;
            rdbFollowNO.Checked = true;

            txtFollow_Week.m_mthClearText();
            txtFollow_Month.m_mthClearText();
            txtFollow_Year.m_mthClearText();

            gpbModelCase.Tag = "0";
            rdbModelCaseYes.Checked = false;
            rdbModelCaseNO.Checked = true;
            txtBloodType.m_mthClearText();

            gpbBloodRh.Tag = "3";
            rdbBloodRh_Ka.Checked = false;
            rdbBloodRh_An.Checked = false;
            rdbBloodRh_No.Checked = true;

            gpbBloodTransAction.Tag = "3";
            rdbBloodTransActionYes.Checked = false;
            rdbBloodTransActionNO.Checked = false;
            rdbBloodTransNoAction.Checked = true;

            txtRBC.m_mthClearText();
            txtPLT.m_mthClearText();
            txtPlasm.m_mthClearText();
            txtWholeBlood.m_mthClearText();
            txtOtherBlood.m_mthClearText();
            txtConsultation.m_mthClearText();
            txtLongDistanctConsultation.m_mthClearText();
            txtTOPLevel.m_mthClearText();
            txtNurseLevelI.m_mthClearText();
            txtNurseLevelII.m_mthClearText();
            txtNurseLevelIII.m_mthClearText();
            txtICU.m_mthClearText();
            txtSpecialNurse.m_mthClearText();

            //dtgOtherDiagnosis.CurrentRowIndex = 0;
            m_dtbOtherDiagnosis.Rows.Clear();

            dtgOperation.CurrentRowIndex = 0;
            m_dtbOperationDetail.Rows.Clear();

            dtgBaby.CurrentRowIndex = 0;
            m_dtbBaby.Rows.Clear();

            dtgChemotherapy.CurrentRowIndex = 0;
            m_dtbChemotherapy.Rows.Clear();

            txtInsuranceNum.Text = "";
            lblTimes.Text = "";
            m_cboModeOfPayment.SelectedIndex = 2;
            txtPatientHistoryNO.Text = "";

            m_dtbInfectionDiagnosis.Rows.Clear();
            DataRow drTemp = m_dtbInfectionDiagnosis.NewRow();
            drTemp[0] = "无";
            drTemp[1] = string.Empty;
            m_dtbInfectionDiagnosis.Rows.Add(drTemp);

            m_dtbInHospitalDiagnosis.Rows.Clear();

            txtDiagnosisICD10.Clear();
        }
        #endregion

        #region 婴儿DataGrid控制

        //bool blnIsChange = false;
        /// <summary>
        /// 婴儿DataGrid控制
        /// </summary>
        /// <param name="p_objSender"></param>
        /// <param name="p_objArg"></param>
        private void m_mthRowChanged(object p_objSender, DataRowChangeEventArgs e)
        {
            if (e.Action == DataRowAction.Add)
            {
                //blnIsChange = true;
                object[] objNewValue = e.Row.ItemArray;
                objNewValue[0] = m_dtbBaby.Rows.Count;// + 1;
                e.Row.ItemArray = objNewValue;
                //blnIsChange = false;
            }
            else if (e.Action == DataRowAction.Delete)
            {
                //blnIsChange = true;
                for (int i = 0; i < m_dtbBaby.Rows.Count; i++)
                {
                    object[] objValue = m_dtbBaby.Rows[i].ItemArray;
                    objValue[0] = i + 1;
                    m_dtbBaby.Rows[i].ItemArray = objValue;
                }
                //blnIsChange = false;
            }
            //else if (e.Action == DataRowAction.Change && !blnIsChange)
            //{
            //    blnIsChange = true;
            //    object[] objNewValue = new object[e.Row.ItemArray.Length];
            //    e.Row.ItemArray.CopyTo(objNewValue,0);
            //    e.Row.CancelEdit();
            //    object[] objOldValues = e.Row.ItemArray;
            //    if (!objNewValue[1].Equals(objOldValues[1]) && objNewValue[1].ToString() == "True")
            //        objNewValue[2] = false;
            //    else if (!objNewValue[2].Equals(objOldValues[2]) && objNewValue[2].ToString() == "True")
            //        objNewValue[1] = false;
            //    e.Row.ItemArray = objNewValue;
            //    e.Row.AcceptChanges();
            //    blnIsChange = false;
            //}
        }
        private void dtcWeight_KeyDown(object p_objSender, System.Windows.Forms.KeyPressEventArgs e)
        {
            if (e.KeyChar != '\b' && !Char.IsDigit(e.KeyChar) && e.KeyChar != '.')
            {
                e.Handled = true;
            }
        }
        #endregion


        #region 添加键盘快捷键
        private void m_mthSetQuickKeys()
        {
            m_mthSetControlEvent(this);
        }

        private void m_mthSetControlEvent(Control p_ctlControl)
        {
            #region 利用递归调用，读取并设置所有界面事件,Jacky-2003-2-21
            string strTypeName = p_ctlControl.GetType().Name;
            if (strTypeName != "Lable" && strTypeName != "Button")
            {
                p_ctlControl.KeyDown += new System.Windows.Forms.KeyEventHandler(this.m_mthEvent_KeyDown);
                if (p_ctlControl.HasChildren && strTypeName != "DataGrid" && strTypeName != "DateTimePicker" && strTypeName != "ctlComboBox" && strTypeName != "ctlTimePicker")
                {
                    foreach (Control subcontrol in p_ctlControl.Controls)
                    {
                        string strSubTypeName = subcontrol.GetType().Name;
                        if (strSubTypeName != "Lable" && strSubTypeName != "Button" && strSubTypeName != "ctlTimePicker")
                            m_mthSetControlEvent(subcontrol);
                    }
                }
            }
            #endregion
        }

        private void m_mthEvent_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            switch (e.KeyCode)
            {//F1 112  帮助, F2 113 Save，F3  114 Del，F4 115 Print，F5 116 Refresh，F6 117 Search

                #region No uesed
                //case Keys.Enter:// enter				

                //    if(((Control)sender).Name=="txtDoctor" || ((Control)sender).Name=="txtDirectorDt"  || ((Control)sender).Name=="txtSubDirectorDt" || ((Control)sender).Name=="txtDt" || ((Control)sender).Name=="txtInHospitalDt"|| ((Control)sender).Name=="txtAttendInForAdvancesStudyDt"|| ((Control)sender).Name=="txtGraduateStudentIntern"|| ((Control)sender).Name=="txtIntern"|| ((Control)sender).Name=="txtCoder"|| ((Control)sender).Name=="txtQCDt"|| ((Control)sender).Name=="txtQCNurse")
                //    {	
                //        lsvEmployee.Left=((Control)sender).Left;
                //        lsvEmployee.Top=((Control)sender).Bottom;	
                //        m_mthGetDoctorList(((Control)sender).Text);

                //        if(lsvEmployee.Items.Count==1 && (((Control)sender).Text==lsvEmployee.Items[0].SubItems[0].Text|| ((Control)sender).Text==lsvEmployee.Items[0].SubItems[1].Text))
                //        {
                //            lsvEmployee.Items[0].Selected=true;
                //            lsvEmployee_DoubleClick(sender,null);
                //            break;
                //        }
                //    }		
                //    else if(((Control)sender).Name=="lsvEmployee")
                //    {
                //        lsvEmployee_DoubleClick(sender,null);						
                //    }
                //    break;


                //case Keys.Down:
                //    if(sender.GetType().Name=="ctlRichTextBox")
                //    {
                //        if(lsvEmployee.Visible && lsvEmployee.Items.Count >0)
                //        {
                //            lsvEmployee.Items[0].Selected = true;
                //            lsvEmployee.Focus();
                //        }
                //        if(lsvAanaesthesiaMode.Visible && lsvAanaesthesiaMode.Items.Count >0)
                //        {
                //            lsvAanaesthesiaMode.Items[0].Selected = true;
                //            lsvAanaesthesiaMode.Focus();
                //        }
                //        if(lsvOperationEmployee.Visible && lsvAanaesthesiaMode.Items.Count > 0)
                //        {
                //            lsvOperationEmployee.Items[0].Selected = true;
                //            lsvOperationEmployee.Focus();
                //        }
                //        if(((Control)sender).Name=="txtDoctor" || ((Control)sender).Name=="txtDirectorDt"  || ((Control)sender).Name=="txtSubDirectorDt" || ((Control)sender).Name=="txtDt" || ((Control)sender).Name=="txtInHospitalDt"|| ((Control)sender).Name=="txtAttendInForAdvancesStudyDt"|| ((Control)sender).Name=="txtGraduateStudentIntern"|| ((Control)sender).Name=="txtIntern"|| ((Control)sender).Name=="txtCoder"|| ((Control)sender).Name=="txtQCDt"|| ((Control)sender).Name=="txtQCNurse")
                //        {	
                //            if(((Control)sender).Text.Length>0)
                //            {	
                //                if(lsvEmployee.Visible==false || lsvEmployee.Items.Count==0)
                //                {		
                //                    lsvEmployee.Left=((Control)sender).Left;
                //                    lsvEmployee.Top=((Control)sender).Bottom;	
                //                    m_mthGetDoctorList(((Control)sender).Text);
                //                }
                //                lsvEmployee.BringToFront();
                //                lsvEmployee.Visible=true;
                //                lsvEmployee.Focus();
                //                if( lsvEmployee.Items.Count>0)
                //                {
                //                    lsvEmployee.Items[0].Selected=true;
                //                    lsvEmployee.Items[0].Focused=true;
                //                }	
                //            }
                //        }	
                //    }
                //    break;


                //				case Keys.Up:
                //					if(lsvEmployee.Items.Count > 0 && lsvEmployee.Items[0].Selected)
                //						m_RtbCurrentTextBox.Focus();
                //					break;		
                #endregion no uesed

                case Keys.F2://save
                    this.Save();
                    break;
                case Keys.F3://del
                    this.Delete();
                    break;
                case Keys.F4://print
                    this.Print();
                    break;
                case Keys.F5://refresh
                    this.txtInPatientID.Text = "";
                    m_mthCleanUP();
                    this.trvTime.Nodes[0].Nodes.Clear();
                    txtInPatientID.Focus();
                    break;
                case Keys.F6://Search					
                    break;
                case Keys.F9:
                    m_mthQueryDictDate(sender);//查询字典
                    break;
            }
        }
        #endregion

        #region datagrid双击行删除记录
        private void m_dtgRecord_DoubleClick(object sender, EventArgs e)
        {
            if (MDIParent.m_objCurrentPatient == null)
                return;
            DataGrid dg = (DataGrid)((DataGridTextBox)sender).Parent;
            switch (dg.Name)
            {
                case "dgDiagnosis3"://其他诊断
                    if (dg.CurrentRowIndex < m_dtbOtherDiagnosis.Rows.Count)
                    {
                        if (clsPublicFunction.ShowInformationMessageBox("确认删除此行记录？", MessageBoxButtons.OKCancel) == DialogResult.OK)
                        {
                            m_dtbOtherDiagnosis.Rows[dg.CurrentRowIndex].Delete();
                            m_dtbOtherDiagnosis.AcceptChanges();
                        }
                    }
                    break;
                case "dgDiagnosis1"://入院诊断
                    if (dg.CurrentRowIndex < m_dtbInHospitalDiagnosis.Rows.Count)
                    {
                        if (clsPublicFunction.ShowInformationMessageBox("确认删除此行记录？", MessageBoxButtons.OKCancel) == DialogResult.OK)
                        {
                            m_dtbInHospitalDiagnosis.Rows[dg.CurrentRowIndex].Delete();
                            m_dtbInHospitalDiagnosis.AcceptChanges();
                        }
                    }
                    break;
                case "dgDiagnosis2"://医院感染名称
                    if (dg.CurrentRowIndex < m_dtbInfectionDiagnosis.Rows.Count)
                    {
                        if (clsPublicFunction.ShowInformationMessageBox("确认删除此行记录？", MessageBoxButtons.OKCancel) == DialogResult.OK)
                        {
                            m_dtbInfectionDiagnosis.Rows[dg.CurrentRowIndex].Delete();
                            m_dtbInfectionDiagnosis.AcceptChanges();
                        }
                    }
                    break;
                case "dtgOperation"://手术情况
                    if (dg.CurrentRowIndex < m_dtbOperationDetail.Rows.Count)
                    {
                        if (clsPublicFunction.ShowInformationMessageBox("确认删除此行记录？", MessageBoxButtons.OKCancel) == DialogResult.OK)
                        {
                            m_dtbOperationDetail.Rows[dg.CurrentRowIndex].Delete();
                            m_dtbOperationDetail.AcceptChanges();
                        }
                    }
                    break;
                case "dtgBaby"://产科分娩婴儿记录表
                    if (dg.CurrentRowIndex < m_dtbBaby.Rows.Count)
                    {
                        if (clsPublicFunction.ShowInformationMessageBox("确认删除此行记录？", MessageBoxButtons.OKCancel) == DialogResult.OK)
                        {
                            m_dtbBaby.Rows[dg.CurrentRowIndex].Delete();
                            m_dtbBaby.AcceptChanges();
                        }
                    }
                    break;
                case "dtgChemotherapy"://化疗用药及疗效
                    if (dg.CurrentRowIndex < m_dtbChemotherapy.Rows.Count)
                    {
                        if (clsPublicFunction.ShowInformationMessageBox("确认删除此行记录？", MessageBoxButtons.OKCancel) == DialogResult.OK)
                        {
                            m_dtbChemotherapy.Rows[dg.CurrentRowIndex].Delete();
                            m_dtbChemotherapy.AcceptChanges();
                        }
                    }
                    break;
                default:
                    break;
            }
        }
        #endregion

        #region 手术情况、化疗用药日期判断
        private void m_mthDate_Change(object sender, System.EventArgs e)
        {
            DataGridTextBox dg = (DataGridTextBox)sender;
            DateTime dtmTemp;
            DateTime.TryParse(dg.Text, out dtmTemp);
            if (dtmTemp == DateTime.MinValue)
            {
                dg.Text = "";
            }
            else
            {
                int intOperationDate = Convert.ToInt32(Convert.ToDateTime(dg.Text).ToString("yyyyMMdd"));
                int intInpatientDate = Convert.ToInt32(m_objSelectedPatient.m_DtmSelectedInDate.ToString("yyyyMMdd"));
                int intOutPatientDate = m_lblOutHospitalDate.Text == "" ? Convert.ToInt32(DateTime.Now.ToString("yyyyMMdd")) : Convert.ToInt32(Convert.ToDateTime(m_lblOutHospitalDate.Text).ToString("yyyyMMdd"));
                if (intOperationDate < intInpatientDate || intOperationDate > intOutPatientDate)
                {
                    clsPublicFunction.ShowInformationMessageBox("时间应介于入院日期和出院日期之间！");
                    dg.Focus();
                }
            }
        }
        #endregion

        /// <summary>
        /// 显示医生列表
        /// </summary>
        /// <param name="p_strDoctorNameLike">医生号</param>
        private void m_mthGetDoctorList(string p_strDoctorNameLike)
        {

            /*
             * 获取所有医生号和姓名，根据输入医生号的控件标志（m_bytListOnDoctor）,
             * 在相应的位置显示ListView。
             */

            //if(p_strDoctorNameLike.Length == 0)
            //{
            //    lsvEmployee.Visible = false;
            //    return;
            //}							

            //clsEmployee [] objDoctorArr = m_objCurrentContext.m_ObjEmployeeManager.m_objGetEmployeeIDLikeArr(p_strDoctorNameLike,m_objCurrentContext.m_ObjDepartment);

            //if(objDoctorArr == null)
            //{
            //    lsvEmployee.Visible = false;
            //    return;
            //}

            //lsvEmployee.Items.Clear();

            //for(int i=0;i<objDoctorArr.Length;i++)
            //{
            //    ListViewItem lviDoctor = new ListViewItem(
            //        new string[]{
            //                        objDoctorArr[i].m_StrEmployeeID,
            //                        objDoctorArr[i].m_StrFirstName
            //                    });
            //    lviDoctor.Tag = objDoctorArr[i];

            //    lsvEmployee.Items.Add(lviDoctor);
            //}

            //m_mthChangeListViewLastColumnWidth(lsvEmployee);
            //lsvEmployee.BringToFront();
            //lsvEmployee.Visible = true;

            //if(lsvEmployee.Items.Count > 0)
            //{
            //    lsvEmployee.Focus();
            //    lsvEmployee.Items[0].Selected = true;
            //}
        }

        //private void dtpOutHospitalDate_evtValueChanged(object sender, System.EventArgs e)
        //{
        //    if(trvTime.SelectedNode == null)
        //        return;
        //    if(trvTime.SelectedNode.Tag == null)
        //        return;

        //    /*计算实际住院天数
        //     * */
        //    System.TimeSpan diff=dtpOutHospitalDate.Value.Subtract(((DateTime)trvTime.SelectedNode.Tag));
        //    lblInHospitalDays.Text = ((int)diff.TotalDays).ToString();
        //}

        #region	打印

        #region 有关打印的声明
        private DateTime m_dtmCurrentPrintTime;
        private clsPublicControlPaint m_objCPaint;
        private clsPrintContext m_objPrintContext;
        private clsPrintDateInfo m_objPrintDateInfo;
        private System.Drawing.Printing.PrintDocument pdcOperation;
        /// <summary>
        /// 标题的字体
        /// </summary>
        private Font m_fotTitleFont;

        /// <summary>
        /// 画正方形的字体
        /// </summary>
        private Font m_fotRetangleFont;
        /// <summary>
        /// 表头的字体
        /// </summary>
        private Font m_fotHeaderFont;
        /// <summary>
        /// 表内容的字体
        /// </summary>
        private Font m_fotSmallFont;
        /// <summary>
        /// 边框画笔
        /// </summary>
        private Pen m_GridPen;
        /// <summary>
        /// 刷子
        /// </summary>
        private SolidBrush m_slbBrush;
        /// <summary>
        /// 获取坐标的类
        /// </summary>
        private clsPrintPageSettingForRecord m_objPageSetting;
        /// <summary>
        /// 打印的病人基本信息类
        /// </summary>
        //		private int m_intYPos = (int)enmRectangleInfo.TopY + 12;
        private int m_intYPos = (int)enmRectangleInfo.TopY1;
        //		private int m_intPreY = (int)enmRectangleInfo.TopY;
        //		private int m_intEndIndex = 0;
        //		private int m_intPages=1;

        private class clsEveryRecordPageInfo
        {
            public string m_strModeOfPayment;
            public string m_strInsuranceNum;
            public string m_strTimes;
            public string m_strPatientHistoryNO;
        }

        /// <summary>
        /// 格子的信息
        /// </summary>
        public enum enmRectangleInfo
        {
            /// <summary>
            /// 格子的顶端
            /// </summary>
            TopY = 140,
            TopY1 = 36,

            ///<summary>
            /// 格子的左端
            /// </summary>
            //			LeftX = 78,
            LeftX = 18,
            LeftX1 = 2,
            /// <summary>
            /// 格子的右端
            /// </summary>
            //			RightX = 827-30,
            RightX = 180 + 17,
            RightX1 = 185,
            /// <summary>
            /// 格子每行的步长
            /// </summary>
            //			RowStep = 25,
            RowStep = 7,
            RowStep1 = 6,
            SmallRowStep = 20,
            /// <summary>
            /// 格子的行数
            /// </summary>
            RowLinesNum = 32,

            ColumnsMark1 = 35,

            /// <summary>
            /// CheckBox偏移右边文本的距离
            /// </summary>
            CheckShift = 15,

            /// <summary>
            /// 底划线偏移文本顶点的距离
            /// </summary>
            BottomLineShift = 15,

            BottomY = 1024

        }
        #region 打印行定义
        private clsPrintLine1 m_objLine1;
        private clsPrintLine2 m_objLine2;
        private clsPrintLine3 m_objLine3;
        private clsPrintLine4 m_objLine4;
        private clsPrintLine5 m_objLine5;
        private clsPrintLine6 m_objLine6;
        private clsPrintLine7 m_objLine7;
        private clsPrintLine8 m_objLine8;
        private clsPrintLine9 m_objLine9;
        private clsPrintLine10 m_objLine10;
        private clsPrintLine11 m_objLine11;
        private clsPrintLine12 m_objLine12;
        private clsPrintLine13 m_objLine13;
        private clsPrintLine14 m_objLine14;
        private clsPrintLine15 m_objLine15;
        private clsPrintLine16 m_objLine16;
        private clsPrintLine17 m_objLine17;
        private clsPrintLine18 m_objLine18;
        private clsPrintLine19 m_objLine19;
        private clsPrintLine20 m_objLine20;
        private clsPrintLine21 m_objLine21;
        //		private clsPrintLine22 m_objLine22;
        //		private clsPrintLine23 m_objLine23;
        //		private clsPrintLine24 m_objLine24;
        //		private clsPrintLine25 m_objLine25;
        //		private clsPrintLine26 m_objLine26;
        //		private clsPrintLine27 m_objLine27;
        private clsPrintLine100 m_objLine100;
        private clsPrintLine101 m_objLine101;
        private clsPrintLine102 m_objLine102;
        private clsPrintLine103 m_objLine103;
        private clsPrintLine104 m_objLine104;
        private clsPrintLine105 m_objLine105;
        private clsPrintLine106 m_objLine106;
        private clsPrintLine107 m_objLine107;
        private clsPrintLine108 m_objLine108;
        private clsPrintLine109 m_objLine109;
        private clsPrintLine110 m_objLine110;
        private clsPrintLine111 m_objLine111;
        private clsPrintLine112 m_objLine112;
        private clsPrintLine113 m_objLine113;
        private clsPrintLine114 m_objLine114;
        private clsPrintLine115 m_objLine115;
        private clsPrintLine116 m_objLine116;
        private clsPrintLine117 m_objLine117;
        private clsPrintLine118 m_objLine118;
        private clsPrintLine119 m_objLine119;
        private clsPrintLine120 m_objLine120;
        private clsPrintLine121 m_objLine121;
        private clsPrintLine122 m_objLine122;
        private clsPrintLine123 m_objLine123;
        private clsPrintLine124 m_objLine124;
        private clsPrintLine125 m_objLine125;
        private clsPrintLine126 m_objLine126;
        private clsPrintLine127 m_objLine127;
        private clsPrintLine128 m_objLine128;
        private clsPrintLine129 m_objLine129;
        #endregion

        /// <summary>
        /// 打印元素
        /// </summary>
        private enum enmItemDefination
        {
            //基本元素
            InPatientID_Title,
            InPatientID,
            Name_Title,
            Name,
            Sex_Title,
            Sex,
            Age_Title,
            Age,
            Dept_Name_Title,
            Dept_Name,
            BedNo_Title,
            BedNo,

            Page_HospitalName,
            Page_Name_Title,
            Page_Title,
            Page_Num,
            Page_Of,
            Page_Count,

            Print_Date_Title,
            Print_Date,

        }


        #region 定义打印各元素的坐标点
        protected class clsPrintPageSettingForRecord
        {
            public clsPrintPageSettingForRecord() { }

            /// <summary>
            /// 获得坐标点
            /// </summary>
            /// <param name="p_intItemName">项目名称</param>
            /// <returns></returns>
            public PointF m_getCoordinatePoint(int p_intItemName)
            {
                PointF m_fReturnPoint;
                switch (p_intItemName)
                {

                    case (int)enmItemDefination.Page_HospitalName:
                        m_fReturnPoint = new PointF(71f, 13f);
                        break;
                    case (int)enmItemDefination.Page_Name_Title:
                        m_fReturnPoint = new PointF(83f, 22f);
                        break;
                    case (int)enmItemDefination.Name_Title:
                        m_fReturnPoint = new PointF(18f, 29f);
                        break;
                    case (int)enmItemDefination.Name:
                        m_fReturnPoint = new PointF(42f, 20f);
                        break;

                    case (int)enmItemDefination.Sex_Title:
                        m_fReturnPoint = new PointF(150f, 120f);
                        break;
                    case (int)enmItemDefination.Sex:
                        m_fReturnPoint = new PointF(200f, 120f);
                        break;

                    case (int)enmItemDefination.Age_Title:
                        m_fReturnPoint = new PointF(250f, 120f);
                        break;
                    case (int)enmItemDefination.Age:
                        m_fReturnPoint = new PointF(300f, 120f);
                        break;

                    case (int)enmItemDefination.Dept_Name_Title:
                        m_fReturnPoint = new PointF(330f, 120f);
                        break;
                    case (int)enmItemDefination.Dept_Name:
                        m_fReturnPoint = new PointF(370f, 120f);
                        break;

                    case (int)enmItemDefination.BedNo_Title:
                        m_fReturnPoint = new PointF(450f, 120f);
                        break;
                    case (int)enmItemDefination.BedNo:
                        m_fReturnPoint = new PointF(500f, 120f);
                        break;

                    case (int)enmItemDefination.InPatientID_Title:
                        m_fReturnPoint = new PointF(49f, 30f);
                        break;
                    case (int)enmItemDefination.InPatientID:
                        m_fReturnPoint = new PointF(68f, 30f);
                        break;
                    //					case (int)enmItemDefination.BasePointOne:
                    //						m_fReturnPoint = new PointF(20f,150f);
                    //						break;
                    //					case (int)enmItemDefination.BasePointTwo:
                    //						m_fReturnPoint = new PointF(50f,150f);
                    //						break;
                    //					case (int)enmItemDefination.BasePointThree:
                    //						m_fReturnPoint = new PointF(20f,250f);
                    //						break;
                    //					case (int)enmItemDefination.BasePointFour:
                    //						m_fReturnPoint = new PointF(20f,280f);
                    //						break;
                    //					case (int)enmItemDefination.BasePointFive:
                    //						m_fReturnPoint = new PointF(50f,280f);
                    //						break;
                    //					case (int)enmItemDefination.BasePointSix:
                    //						m_fReturnPoint = new PointF(20f,600f);
                    //						break;
                    //					case (int)enmItemDefination.BasePointSeven:
                    //						m_fReturnPoint = new PointF(50f,600f);
                    //						break;
                    default:
                        m_fReturnPoint = new PointF(400f, 400f);
                        break;

                }
                return m_fReturnPoint;
            }
        }

        #endregion
        #endregion

        #region 外部打印.

        System.Drawing.Printing.PrintDocument m_pdcPrintDocument;
        private void m_mthfrmLoad()
        {
            this.m_pdcPrintDocument = new System.Drawing.Printing.PrintDocument();
            this.m_pdcPrintDocument.BeginPrint += new System.Drawing.Printing.PrintEventHandler(this.m_pdcPrintDocument_BeginPrint);
            this.m_pdcPrintDocument.EndPrint += new System.Drawing.Printing.PrintEventHandler(this.m_pdcPrintDocument_EndPrint);
            this.m_pdcPrintDocument.PrintPage += new System.Drawing.Printing.PrintPageEventHandler(this.m_pdcPrintDocument_PrintPage);
        }
        private void m_pdcPrintDocument_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e)
        {
            if (com.digitalwave.Emr.StaticObject.clsEMR_StaticObject.s_StrCurrentHospitalNO == "441900001")
            {
                objPrintToolCS.m_mthPrintPage(e);

                if (ppdPrintPreview != null)
                    while (!ppdPrintPreview.m_blnHandlePrint(e))
                        objPrintToolCS.m_mthPrintPage(e);
            }
            else
            {
                objPrintTool.m_mthPrintPage(e);

                if (ppdPrintPreview != null)
                    while (!ppdPrintPreview.m_blnHandlePrint(e))
                        objPrintTool.m_mthPrintPage(e);
            }
        }

        private void m_pdcPrintDocument_BeginPrint(object sender, System.Drawing.Printing.PrintEventArgs e)
        {
            if (com.digitalwave.Emr.StaticObject.clsEMR_StaticObject.s_StrCurrentHospitalNO == "441900001")
                objPrintToolCS.m_mthBeginPrint(e);
            else objPrintTool.m_mthBeginPrint(e);
        }

        private void m_pdcPrintDocument_EndPrint(object sender, System.Drawing.Printing.PrintEventArgs e)
        {
            if (com.digitalwave.Emr.StaticObject.clsEMR_StaticObject.s_StrCurrentHospitalNO == "441900001")
                objPrintToolCS.m_mthEndPrint(e);
            else objPrintTool.m_mthEndPrint(e);
        }
        private clsInHospitalMainRecordCSPrintTool objPrintToolCS;
        private clsInHospitalMainRecordPrintTool objPrintTool;
        private void m_mthDemoPrint_FromDataSource()
        {
            if (com.digitalwave.Emr.StaticObject.clsEMR_StaticObject.s_StrCurrentHospitalNO == "441900001")
            {
                objPrintToolCS = new clsInHospitalMainRecordCSPrintTool(!m_blnDirectPrint);
                objPrintToolCS.m_mthInitPrintTool(null);
                if (m_objBaseCurrentPatient == null || m_ObjCurrentEmrPatientSession == null)
                    objPrintToolCS.m_mthSetPrintInfo(m_objBaseCurrentPatient, DateTime.MinValue, DateTime.MinValue);
                else
                    objPrintToolCS.m_mthSetPrintInfo(m_objBaseCurrentPatient, m_ObjCurrentEmrPatientSession.m_dtmEMRInpatientDate, DateTime.MinValue);

                objPrintToolCS.m_mthInitPrintContent();
            }
            else
            {
                objPrintTool = new clsInHospitalMainRecordPrintTool(true);
                objPrintTool.m_mthInitPrintTool(null);
                if (m_objBaseCurrentPatient == null || m_ObjCurrentEmrPatientSession == null)
                    objPrintTool.m_mthSetPrintInfo(m_objBaseCurrentPatient, DateTime.MinValue, DateTime.MinValue);
                else
                    objPrintTool.m_mthSetPrintInfo(m_objBaseCurrentPatient, m_ObjCurrentEmrPatientSession.m_dtmEMRInpatientDate, DateTime.MinValue);

                objPrintTool.m_mthInitPrintContent();
            }
            m_mthStartPrint();
        }

        private PrintTool.frmPrintPreviewDialog ppdPrintPreview = new PrintTool.frmPrintPreviewDialog();

        private void m_mthStartPrint()
        {
            if (m_blnDirectPrint)
            {
                if (com.digitalwave.Emr.StaticObject.clsEMR_StaticObject.s_StrCurrentHospitalNO == "441900001")
                {
                    objPrintToolCS.m_BlnPreview = false;
                    objPrintToolCS.m_BlnIsDummy = false;
                    m_pdcPrintDocument.Print();
                    if (clsPublicFunction.ShowInformationMessageBox(clsHRPMessage.c_strPromptForPrint, MessageBoxButtons.OKCancel) == DialogResult.OK)
                    {
                        objPrintToolCS.m_BlnIsDummy = true;
                        m_pdcPrintDocument.Print();
                    }
                }
                else
                {
                    objPrintTool.m_BlnPreview = false;
                    objPrintTool.m_BlnIsDummy = false;
                    m_pdcPrintDocument.Print();
                    //if (clsPublicFunction.ShowInformationMessageBox(clsHRPMessage.c_strPromptForPrint, MessageBoxButtons.OKCancel) == DialogResult.OK)
                    //{
                    //    objPrintTool.m_BlnIsDummy = true;
                    //    m_pdcPrintDocument.Print();
                    //}
                }
                // m_pdcPrintDocument.Print();
            }
            else
            {
                ppdPrintPreview.Document = m_pdcPrintDocument;
                ppdPrintPreview.ShowDialog();
            }
        }

        protected override long m_lngSubPrint()//代替原窗体中的同名打印函数
        {
            m_mthDemoPrint_FromDataSource();
            return 1;
        }
        #endregion 外部打印

        protected long m_lngSubPrint1()//作废
        {
            if (m_objSelectedPatient != null && m_objCollection.m_objContent != null)//当有资料的时候，要检查，否则，打印空表
            {
                if (!m_bolModifyCheck(false))
                {
                    return -1;
                }
            }
            //			if(m_objSelectedPatient == null || txtInPatientID.Text == "")
            //			{
            //				clsPublicFunction.ShowInformationMessageBox("请正确输入住院号！");
            //				return -1;
            //			}
            //			if(trvTime.SelectedNode == null)
            //			{
            //				clsPublicFunction.ShowInformationMessageBox("请正确输入住院号！");
            //				return -1;
            //			}
            //			if(trvTime.SelectedNode.Tag == null)
            //			{
            //				clsPublicFunction.ShowInformationMessageBox("请选择住院日期！");
            //				return -1;
            //			}
            #region 有关打印初始化
            pdcOperation = new System.Drawing.Printing.PrintDocument();

            this.pdcOperation.PrintPage += new System.Drawing.Printing.PrintPageEventHandler(this.pdcOperation_PrintPage);
            m_fotTitleFont = new Font("SimSun", 20, FontStyle.Bold);
            m_fotHeaderFont = new Font("SimSun", 12, FontStyle.Bold);
            m_fotRetangleFont = new Font("SimSun", 16);
            m_fotSmallFont = new Font("SimSun", 10.5f);
            m_GridPen = new Pen(Color.Black, 0.2f);
            m_slbBrush = new SolidBrush(Color.Black);
            m_objPageSetting = new clsPrintPageSettingForRecord();
            m_objCPaint = new clsPublicControlPaint();
            m_objPrintDateInfo = new clsPrintDateInfo();
            m_bolIfFirst = true;
            #region 打印行初始化
            m_objLine1 = new clsPrintLine1();
            m_objLine2 = new clsPrintLine2();
            m_objLine3 = new clsPrintLine3();
            m_objLine4 = new clsPrintLine4();
            m_objLine5 = new clsPrintLine5();
            m_objLine6 = new clsPrintLine6();
            m_objLine7 = new clsPrintLine7();
            m_objLine8 = new clsPrintLine8();
            m_objLine9 = new clsPrintLine9();
            m_objLine10 = new clsPrintLine10();
            m_objLine11 = new clsPrintLine11();
            m_objLine12 = new clsPrintLine12();
            m_objLine13 = new clsPrintLine13();
            m_objLine14 = new clsPrintLine14();
            m_objLine15 = new clsPrintLine15();
            m_objLine16 = new clsPrintLine16();
            m_objLine17 = new clsPrintLine17();
            m_objLine18 = new clsPrintLine18();
            m_objLine19 = new clsPrintLine19();
            m_objLine20 = new clsPrintLine20();
            m_objLine21 = new clsPrintLine21();
            m_objLine100 = new clsPrintLine100();
            m_objLine101 = new clsPrintLine101();
            m_objLine102 = new clsPrintLine102();
            m_objLine103 = new clsPrintLine103();
            m_objLine104 = new clsPrintLine104();
            m_objLine105 = new clsPrintLine105();
            m_objLine106 = new clsPrintLine106();
            m_objLine107 = new clsPrintLine107();
            m_objLine108 = new clsPrintLine108();
            m_objLine109 = new clsPrintLine109();
            m_objLine110 = new clsPrintLine110();
            m_objLine111 = new clsPrintLine111();
            m_objLine112 = new clsPrintLine112();
            m_objLine113 = new clsPrintLine113();
            m_objLine114 = new clsPrintLine114();
            m_objLine115 = new clsPrintLine115();
            m_objLine116 = new clsPrintLine116();
            m_objLine117 = new clsPrintLine117();
            m_objLine118 = new clsPrintLine118();
            m_objLine119 = new clsPrintLine119();
            m_objLine120 = new clsPrintLine120();
            m_objLine121 = new clsPrintLine121();
            m_objLine122 = new clsPrintLine122();
            m_objLine123 = new clsPrintLine123();
            m_objLine124 = new clsPrintLine124();
            m_objLine125 = new clsPrintLine125();
            m_objLine126 = new clsPrintLine126();
            m_objLine127 = new clsPrintLine127();
            m_objLine128 = new clsPrintLine128();
            m_objLine129 = new clsPrintLine129();
            m_objPrintContext = new clsPrintContext(
                new clsPrintLineBase[]{
										  m_objLine1,
										  m_objLine2,
										  m_objLine3,
										  m_objLine4,
										  m_objLine5,
										  m_objLine6,
										  m_objLine7,
										  m_objLine8,
										  m_objLine9,
										  m_objLine10,
										  m_objLine11,
										  m_objLine12,
										  m_objLine13,
										  m_objLine14,
										  m_objLine15,
										  m_objLine16,
										  m_objLine17,
										  m_objLine18,
										  m_objLine19,
										  m_objLine20,
										  m_objLine21,
										  m_objLine100,
										  m_objLine101,
										  m_objLine102,
										  m_objLine103,
										  m_objLine104,
										  m_objLine105,
										  m_objLine106,
										  m_objLine107,
										  m_objLine108,
										  m_objLine109,
										  m_objLine110,
										  m_objLine111,
										  m_objLine112,
										  m_objLine113,
										  m_objLine114,
										  m_objLine115,
										  m_objLine116,
										  m_objLine117,
										  m_objLine118,
										  m_objLine119,
										  m_objLine120,
										  m_objLine121,
										  m_objLine122,
										  m_objLine123,
										  m_objLine124,
										  m_objLine125,
										  m_objLine126,
										  m_objLine127,
										  m_objLine128,
										  m_objLine129
									  });
            #endregion

            m_dtmCurrentPrintTime = DateTime.Parse(m_objPublicDomain.m_strGetServerTime());
            m_objPrintContext.m_DtmFirstPrintTime = this.m_dtmCurrentPrintTime;
            #endregion
            m_mthSetPrintValue();
            try
            {
                //				PageSetupDialog pageSetupDialog = new PageSetupDialog();
                //
                //				pageSetupDialog.Document = pdcOperation;
                //				pageSetupDialog.ShowDialog();				

                printpreviewdialog.Document = pdcOperation;
                printpreviewdialog.ShowDialog();
            }
            catch (Exception ex) { MessageBox.Show(ex.Message); }
            return 1;
        }
        private PrintTool.frmPrintPreviewDialog printpreviewdialog = new PrintTool.frmPrintPreviewDialog();

        private bool m_bolIfFirst = true;
        private void pdcOperation_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e)
        {
            //			e.PageSettings.

            e.HasMorePages = false;

            GraphicsUnit enmOld = e.Graphics.PageUnit;
            e.Graphics.PageUnit = GraphicsUnit.Millimeter;

            if (m_bolIfFirst && frmInHospitalMainRecord_2009.s_blnPrintTitle)
            {
                m_mthPrintTitleInfo(e);
                e.Graphics.DrawLine(m_GridPen, (int)enmRectangleInfo.LeftX - 2, (int)enmRectangleInfo.TopY1 - 2, (int)enmRectangleInfo.RightX, (int)enmRectangleInfo.TopY1 - 2);

            }

            Font fntNormal = new Font("SimSun", 10.5f);
            //			e.Graphics.DrawLine(m_GridPen,(int)enmRectangleInfo.LeftX-2,(int)enmRectangleInfo.TopY1-2,(int)enmRectangleInfo.RightX,(int)enmRectangleInfo.TopY1-2);
            #region old code
            //			if(m_intPages!=1)
            //				m_intYPos=m_intYPos+5;
            //			while(m_objPrintContext.m_BlnHaveMoreLine)
            //			{
            //				m_objPrintContext.m_mthPrintNextLine(ref m_intYPos,e.Graphics,fntNormal);
            //				#region 处理换页
            ////				if(m_intYPos >(int)enmRectangleInfo.BottomY 
            ////					&& m_objPrintContext.m_BlnHaveMoreLine)
            ////				{
            ////					e.HasMorePages = true;
            ////					switch(m_intEndIndex)
            ////					{
            ////											
            ////						case 0:
            ////							m_mthHandleOneEnd(m_intYPos,e.Graphics,fntNormal);
            ////							m_intPreY=(int)enmRectangleInfo.TopY;
            ////							m_intEndIndex--;
            ////							break;
            ////						case 1:
            ////							m_mthHandleTwoEnd(m_intYPos,e.Graphics,fntNormal);
            ////							m_intPreY=(int)enmRectangleInfo.TopY;
            ////							m_intEndIndex--;
            ////							break;
            ////						case 2:
            ////							m_mthHandleThreeEnd(m_intYPos,e.Graphics,fntNormal);
            ////							m_intPreY=(int)enmRectangleInfo.TopY;
            ////							m_intEndIndex--;
            ////							break;
            ////						
            ////					}
            ////					
            ////				
            ////					e.Graphics.DrawLine(m_GridPen,(int)enmRectangleInfo.LeftX,(int)enmRectangleInfo.TopY,(int)enmRectangleInfo.LeftX,m_intYPos-5);
            ////					e.Graphics.DrawLine(m_GridPen,(int)enmRectangleInfo.RightX,(int)enmRectangleInfo.TopY,(int)enmRectangleInfo.RightX,m_intYPos-5);
            ////					
            ////					m_intPages++;
            ////					m_intYPos=(int)enmRectangleInfo.TopY+5;
            ////					
            ////					return;
            ////				}
            //				#endregion
            //				
            //				m_mthPrintHeader(e);
            //
            //				Font fntNormal = new Font("",12);
            //				while(m_objPrintLineContext.m_BlnHaveMoreLine)
            //				{
            //					m_objPrintLineContext.m_mthPrintNextLine(ref m_intYPos,e.Graphics,fntNormal);
            //
            //					if(m_intYPos > 969+130
            //						&& m_objPrintLineContext.m_BlnHaveMoreLine)
            //					{
            //						m_mthPrintFoot(e);
            //
            //						e.HasMorePages = true;
            //
            //						m_intYPos = 90;
            //
            //						m_intCurrentPage++;
            //
            //						return;
            //					}				
            //				}
            //
            //				//全部打完
            //				m_mthPrintFoot(e);
            //
            //				m_objPrintLineContext.m_mthReset();
            //
            //				m_intYPos = 90;
            //			}
            ////			m_intYPos=m_intYPos-5;
            ////			e.Graphics.DrawLine(m_GridPen,(int)enmRectangleInfo.LeftX,m_intYPos ,(int)enmRectangleInfo.RightX,m_intYPos);
            ////			e.Graphics.DrawLine(m_GridPen,(int)enmRectangleInfo.LeftX,(int)enmRectangleInfo.TopY,(int)enmRectangleInfo.LeftX,m_intYPos);
            ////			e.Graphics.DrawLine(m_GridPen,(int)enmRectangleInfo.RightX,(int)enmRectangleInfo.TopY,(int)enmRectangleInfo.RightX,m_intYPos);
            ////			
            ////			//全部打完
            //			m_objPrintContext.m_mthReset();
            ////			m_intPages=1;
            ////			m_intEndIndex=0;
            //			m_intYPos = (int)enmRectangleInfo.TopY;
            ////			m_intPreY=(int)enmRectangleInfo.TopY;
            #endregion
            while (m_objPrintContext.m_BlnHaveMoreLine)
            {
                m_objPrintContext.m_mthPrintNextLine(ref m_intYPos, e.Graphics, fntNormal);
                if (m_intYPos > 235 && m_objPrintContext.m_BlnHaveMoreLine)
                {
                    e.HasMorePages = true;
                    m_bolIfFirst = false;
                    //					e.Graphics.DrawLine(m_GridPen,(int)enmRectangleInfo.LeftX,m_intYPos,(int)enmRectangleInfo.RightX,m_intYPos);
                    //					m_objPrintContext.m_mthReset();
                    //					m_intYPos = (int)enmRectangleInfo.TopY+5;
                    m_intYPos = 12;
                    return;
                }
            }
            //全部打完
            m_objPrintContext.m_mthReset();

            //			m_intYPos = (int)enmRectangleInfo.TopY+5;
            m_intYPos = 36;

            e.Graphics.PageUnit = enmOld;

            m_bolIfFirst = true;

            //			frmInHospitalMainRecord_2009.s_blnPrintTitle = false;
        }

        #region 标题文字部分
        /// <summary>
        /// 标题文字部分
        /// </summary>
        /// <param name="e"></param>
        private void m_mthPrintTitleInfo(System.Drawing.Printing.PrintPageEventArgs e)
        {
            clsEveryRecordPageInfo objEveryRecordPageInfo = new clsEveryRecordPageInfo();
            //************************************************
            objEveryRecordPageInfo.m_strInsuranceNum = txtInsuranceNum.Text;
            objEveryRecordPageInfo.m_strTimes = lblTimes.Text;
            objEveryRecordPageInfo.m_strModeOfPayment = m_cboModeOfPayment.Text;
            objEveryRecordPageInfo.m_strPatientHistoryNO = txtPatientHistoryNO.Text;
            //			
            GraphicsUnit enmOld = e.Graphics.PageUnit;
            e.Graphics.PageUnit = GraphicsUnit.Millimeter;


            e.Graphics.DrawString(clsSystemContext.s_ObjCurrentContext.m_ObjHospitalInfo.m_StrHospitalTitle, m_fotTitleFont, m_slbBrush, m_objPageSetting.m_getCoordinatePoint((int)enmItemDefination.Page_HospitalName));

            e.Graphics.DrawString("住 院 病 案 首 页 ※", m_fotHeaderFont, m_slbBrush, m_objPageSetting.m_getCoordinatePoint((int)enmItemDefination.Page_Name_Title));


            e.Graphics.DrawString("医疗付款方式:", m_fotSmallFont, m_slbBrush, m_objPageSetting.m_getCoordinatePoint((int)enmItemDefination.Name_Title));
            //			System.Windows.Forms.ControlPaint.DrawCheckBox(e.Graphics,120,115,25,25,PinkieControls.ButtonXPState.Flat);
            e.Graphics.DrawRectangle(new Pen(m_slbBrush, 0.1f), 44, 29, 3, 3);

            e.Graphics.DrawString(objEveryRecordPageInfo.m_strModeOfPayment, m_fotSmallFont, m_slbBrush, 44f, 29f);
            e.Graphics.DrawString("医保号:", m_fotSmallFont, m_slbBrush, 55f, 29f);
            e.Graphics.DrawString(objEveryRecordPageInfo.m_strInsuranceNum, m_fotSmallFont, m_slbBrush, 69f, 29f);
            e.Graphics.DrawString("第     次住院", m_fotSmallFont, m_slbBrush, 96f, 29f);
            e.Graphics.DrawString(objEveryRecordPageInfo.m_strTimes, m_fotSmallFont, m_slbBrush, 103f, 29f);
            e.Graphics.DrawString("病案号:___________ ", m_fotSmallFont, m_slbBrush, 153f, 29f);
            e.Graphics.DrawString(objEveryRecordPageInfo.m_strPatientHistoryNO, m_fotSmallFont, m_slbBrush, 169f, 29f);
            e.Graphics.PageUnit = enmOld;
        }

        #endregion

        private void m_mthSetPrintValue()
        {
            bool m_bolIfCheck = false;
            if (m_objSelectedPatient != null && m_objCollection.m_objContent != null)//当有资料的时候，要检查，否则，打印空表
            {
                m_bolIfCheck = true;
            }

            object[] m_objDataArr = null;//row
            object[] m_objSubDataArr = null;//column
            string m_strTemp = "";
            if (m_bolIfCheck)
            {
                clsPeopleInfo m_objPeople = m_objSelectedPatient.m_ObjPeopleInfo;
                m_objLine1.m_ObjPrintLineInfo = m_objPeople;
                m_objLine2.m_ObjPrintLineInfo = m_objPeople;
                m_objLine3.m_ObjPrintLineInfo = m_objPeople;
                m_objLine4.m_ObjPrintLineInfo = m_objPeople;
                m_objLine5.m_ObjPrintLineInfo = m_objPeople;
            }
            else
            {
                m_objLine1.m_ObjPrintLineInfo = null;
                m_objLine2.m_ObjPrintLineInfo = null;
                m_objLine3.m_ObjPrintLineInfo = null;
                m_objLine4.m_ObjPrintLineInfo = null;
                m_objLine5.m_ObjPrintLineInfo = null;
            }

            m_objDataArr = new Object[4];
            if (m_bolIfCheck)
            {
                //			m_objDataArr[0] = ((DateTime)trvTime.SelectedNode.Tag);
                m_objDataArr[0] = DateTime.Parse(m_objCollection.m_objContent.m_strInPatientDate).ToString("yyyy    MM    dd   HH");
                m_objDataArr[1] = lblInHosptialSetion.Text;
                m_objDataArr[2] = lblInSickRoom.Text;
                //for(int i1=0;i1<m_dtbChangeDept.Rows.Count;i1++)
                //{
                //    m_strTemp += m_dtbChangeDept.Rows[i1][0].ToString() + ";";
                //}
                m_objDataArr[3] = m_strTemp;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
            }
            m_objLine6.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[4];
            if (m_bolIfCheck)
            {
                //			m_objDataArr[0] = dtpOutHospitalDate.Value;
                m_objDataArr[0] = DateTime.Parse(m_objCollection.m_objContent.m_strOutPatientDate).ToString("yyyy    MM    dd   HH");
                m_objDataArr[1] = lblOutHospitalSetion.Text;
                m_objDataArr[2] = lblOutSickRoom.Text;
                m_objDataArr[3] = lblInHospitalDays.Text;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
            }
            m_objLine7.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[3];
            //			m_objDataArr[0] = txtDiagnosis.Text;
            //			m_objDataArr[1] = txtDoctor.Text;
            //			m_objDataArr[2] = ((int)(int.Parse(gpbCondictionWhenIn.Tag.ToString()) + 1)).ToString();
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strDiagnosis;
                if (m_objCollection.m_objContent.m_strDoctor == null || m_objCollection.m_objContent.m_strDoctor == "")
                    m_objDataArr[1] = "";
                else
                {
                    m_objDataArr[1] = new clsEmployee(m_objCollection.m_objContent.m_strDoctor).m_StrFirstName;
                }


                m_objDataArr[2] = int.Parse(m_objCollection.m_objContent.m_strCondictionWhenIn) + 1;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
            }
            m_objLine8.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[2];
            //			m_objDataArr[0] = txtInHospitalDiagnosis.Text;
            //			m_objDataArr[1] = dtpConfirmDiagnosisDate.Value;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strInHospitalDiagnosis;
                m_objDataArr[1] = DateTime.Parse(m_objCollection.m_objContent.m_strConfirmDiagnosisDate).ToString("yyyy    MM    dd  ");
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
            }
            m_objLine9.m_ObjPrintLineInfo = m_objDataArr;


            m_objLine10.m_ObjPrintLineInfo = null;

            m_objDataArr = new Object[3];
            //			m_objDataArr[0] = txtMainDiagnosis.Text;
            //			m_objDataArr[1] = gpbCondictionWhenIn.Tag.ToString();
            //			m_objDataArr[2] = txtICD_10OfMain.Text;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strMainDiagnosis;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strMainConditionSeq;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strICD_10OfMain;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
            }
            m_objLine11.m_ObjPrintLineInfo = m_objDataArr;

            //if(m_objCollection.m_objOtherDiagnosisArr == null || m_objCollection.m_objOtherDiagnosisArr.Length <= 0)
            //{
            //    m_objLine12.m_ObjPrintLineInfo = null;
            //}
            //else
            //{
            //    if(m_objCollection.m_objOtherDiagnosisArr.Length > 0)
            //    {
            //        m_objDataArr = new Object[m_objCollection.m_objOtherDiagnosisArr.Length];

            //        for(int i1=0;i1<m_objCollection.m_objOtherDiagnosisArr.Length;i1++)
            //        {
            //            m_objSubDataArr = new object[3];
            //            m_objSubDataArr[0] = m_objCollection.m_objOtherDiagnosisArr[i1].m_strDiagnosisDesc;
            //            m_objSubDataArr[1] = m_objCollection.m_objOtherDiagnosisArr[i1].m_strConditionSeq;
            //            m_objSubDataArr[2] = m_objCollection.m_objOtherDiagnosisArr[i1].m_strICD10;
            //            m_objDataArr[i1] = m_objSubDataArr;
            //        }
            //        m_objLine12.m_ObjPrintLineInfo = m_objDataArr;
            //    }
            //}

            m_objDataArr = new Object[3];
            //			m_objDataArr[0] = txtInfectionDiagnosis.Text;
            //			m_objDataArr[1] = gpbInfection.Tag.ToString();
            //			m_objDataArr[2] = txtICD_10OfInfection.Text;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strInfectionDiagnosis;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strInfectionCondictionSeq;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strICD_10OfInfection;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
            }

            m_objLine13.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[1];
            if (m_bolIfCheck)
            {
                //			m_objDataArr[0] = txtPathologyDiagnosis.Text;
                m_objDataArr[0] = m_objCollection.m_objContent.m_strPathologyDiagnosis;
            }
            else
            {
                m_objDataArr[0] = "";
            }
            m_objLine14.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[1];
            if (m_bolIfCheck)
            {
                //				m_objDataArr[0] = txtScacheSource.Text;
                m_objDataArr[0] = m_objCollection.m_objContent.m_strScacheSource;
            }
            else
            {
                m_objDataArr[0] = "";
            }
            m_objLine15.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[4];
            //			m_objDataArr[0] = txtSensitive.Text;
            //			m_objDataArr[1] = txtHbsAg.Text;
            //			m_objDataArr[2] = txtHCV_Ab.Text;
            //			m_objDataArr[3] = txtHIV_Ab.Text;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strSensitive;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strHbsAg;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strHCV_Ab;
                m_objDataArr[3] = m_objCollection.m_objContent.m_strHIV_Ab;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
            }
            m_objLine16.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[4];
            //			m_objDataArr[0] = txtAccordWithOutHospital.Text;
            //			m_objDataArr[1] = txtAccordInWithOut.Text;
            //			m_objDataArr[2] = txtAccordBeforeOperationWithAfter.Text;
            //			m_objDataArr[3] = txtAccordClinicWithPathology.Text;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strAccordWithOutHospital;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strAccordInWithOut;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strAccordBeforeOperationWithAfter;
                m_objDataArr[3] = m_objCollection.m_objContent.m_strAccordClinicWithPathology;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
            }
            m_objLine17.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[3];
            //			m_objDataArr[0] = txtAccordRadiateWithPathology.Text;
            //			m_objDataArr[1] = txtSalveTimes.Text;
            //			m_objDataArr[2] = txtSalveSuccess.Text;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strAccordRadiateWithPathology;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strSalveTimes;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strSalveSuccess;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
            }
            m_objLine18.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[4];
            //			m_objDataArr[0] = txtDirectorDt.Text;
            //			m_objDataArr[1] = txtSubDirectorDt.Text;
            //			m_objDataArr[2] = txtDt.Text;
            //			m_objDataArr[3] = txtInHospitalDt.Text;
            if (m_bolIfCheck)
            {
                if (m_objCollection.m_objContent.m_strDirectorDt == null || m_objCollection.m_objContent.m_strDirectorDt == "")
                    m_objDataArr[0] = "";
                else
                    m_objDataArr[0] = new clsEmployee(m_objCollection.m_objContent.m_strDirectorDt).m_StrFirstName;
                if (m_objCollection.m_objContent.m_strSubDirectorDt == null || m_objCollection.m_objContent.m_strSubDirectorDt == "")
                    m_objDataArr[1] = "";
                else
                    m_objDataArr[1] = new clsEmployee(m_objCollection.m_objContent.m_strSubDirectorDt).m_StrFirstName;
                if (m_objCollection.m_objContent.m_strDt == null || m_objCollection.m_objContent.m_strDt == "")
                    m_objDataArr[2] = "";
                else
                    m_objDataArr[2] = new clsEmployee(m_objCollection.m_objContent.m_strDt).m_StrFirstName;
                if (m_objCollection.m_objContent.m_strInHospitalDt == null || m_objCollection.m_objContent.m_strInHospitalDt == "")
                    m_objDataArr[3] = "";
                else
                    m_objDataArr[3] = new clsEmployee(m_objCollection.m_objContent.m_strInHospitalDt).m_StrFirstName;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
            }
            m_objLine19.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[4];
            //			m_objDataArr[0] = txtAttendInForAdvancesStudyDt.Text;
            //			m_objDataArr[1] = txtGraduateStudentIntern.Text;
            //			m_objDataArr[2] = txtIntern.Text;
            //			m_objDataArr[3] = txtCoder.Text;
            if (m_bolIfCheck)
            {
                if (m_objCollection.m_objContent.m_strAttendInForAdvancesStudyDt == null || m_objCollection.m_objContent.m_strAttendInForAdvancesStudyDt == "")
                    m_objDataArr[0] = "";
                else
                    m_objDataArr[0] = new clsEmployee(m_objCollection.m_objContent.m_strAttendInForAdvancesStudyDt).m_StrFirstName;
                if (m_objCollection.m_objContent.m_strGraduateStudentIntern == null || m_objCollection.m_objContent.m_strGraduateStudentIntern == "")
                    m_objDataArr[1] = "";
                else
                    m_objDataArr[1] = new clsEmployee(m_objCollection.m_objContent.m_strGraduateStudentIntern).m_StrFirstName;
                if (m_objCollection.m_objContent.m_strIntern == null || m_objCollection.m_objContent.m_strIntern == "")
                    m_objDataArr[2] = "";
                else
                    m_objDataArr[2] = new clsEmployee(m_objCollection.m_objContent.m_strIntern).m_StrFirstName;
                if (m_objCollection.m_objContent.m_strCoder == null || m_objCollection.m_objContent.m_strCoder == "")
                    m_objDataArr[3] = "";
                else
                    m_objDataArr[3] = new clsEmployee(m_objCollection.m_objContent.m_strCoder).m_StrFirstName;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
            }
            m_objLine20.m_ObjPrintLineInfo = m_objDataArr;

            m_objDataArr = new Object[4];
            //			m_objDataArr[0] = ((int)(int.Parse(gpbQuality.Tag.ToString()) + 1)).ToString();
            //			m_objDataArr[1] = txtQCDt.Text;
            //			m_objDataArr[2] = txtQCNurse.Text;
            //			m_objDataArr[3] = dtpQCTime.Value;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = int.Parse(m_objCollection.m_objContent.m_strQuality) + 1;
                if (m_objCollection.m_objContent.m_strQCDt == null || m_objCollection.m_objContent.m_strQCDt == "")
                    m_objDataArr[1] = "";
                else
                    m_objDataArr[1] = new clsEmployee(m_objCollection.m_objContent.m_strQCDt).m_StrFirstName;
                if (m_objCollection.m_objContent.m_strQCNurse == null || m_objCollection.m_objContent.m_strQCNurse == "")
                    m_objDataArr[2] = "";
                else
                    m_objDataArr[2] = new clsEmployee(m_objCollection.m_objContent.m_strQCNurse).m_StrFirstName;
                m_objDataArr[3] = DateTime.Parse(m_objCollection.m_objContent.m_strQCTime).ToString("yyyy    MM    dd  ");
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
            }
            m_objLine21.m_ObjPrintLineInfo = m_objDataArr;

            //*******************************

            //第二页
            if (m_objCollection.m_objOperationArr == null || m_objCollection.m_objOperationArr.Length <= 0)
            {
                m_objLine102.m_ObjPrintLineInfo = null;
            }
            else
            {
                m_objDataArr = new Object[m_objCollection.m_objOperationArr.Length];

                for (int i1 = 0; i1 < m_objCollection.m_objOperationArr.Length; i1++)
                {
                    m_objSubDataArr = new object[9];
                    m_objSubDataArr[0] = m_objCollection.m_objOperationArr[i1].m_strOperationID;
                    m_objSubDataArr[1] = DateTime.Parse(m_objCollection.m_objOperationArr[i1].m_strOperationDate).ToString("yyyy-MM-dd HH:mm");
                    m_objSubDataArr[2] = m_objCollection.m_objOperationArr[i1].m_strOperationName;
                    m_objSubDataArr[3] = new clsEmployee(m_objCollection.m_objOperationArr[i1].m_strOperator).m_StrFirstName;
                    m_objSubDataArr[4] = new clsEmployee(m_objCollection.m_objOperationArr[i1].m_strAssistant1).m_StrFirstName;
                    m_objSubDataArr[5] = new clsEmployee(m_objCollection.m_objOperationArr[i1].m_strAssistant2).m_StrFirstName;
                    if (m_objCollection.m_objOperationArr[i1].m_strAanaesthesiaModeID == null || m_objCollection.m_objOperationArr[i1].m_strAanaesthesiaModeID == "")
                        m_objSubDataArr[6] = "";
                    else
                        m_objSubDataArr[6] = m_hasAanaesthesiaMode[m_objCollection.m_objOperationArr[i1].m_strAanaesthesiaModeID];
                    m_objSubDataArr[7] = m_objCollection.m_objOperationArr[i1].m_strCutLevel;
                    m_objSubDataArr[8] = new clsEmployee(m_objCollection.m_objOperationArr[i1].m_strAnaesthetist).m_StrFirstName;
                    for (int j2 = 0; j2 < 9; j2++)
                    {
                        if (m_objSubDataArr[j2] == null)
                            m_objSubDataArr[j2] = "";
                    }

                    m_objDataArr[i1] = m_objSubDataArr;
                }
                m_objLine102.m_ObjPrintLineInfo = m_objDataArr;
            }


            if (m_objCollection.m_objBabyArr == null || m_objCollection.m_objBabyArr.Length <= 0)
            {
                m_objLine109.m_ObjPrintLineInfo = null;
            }
            else
            {
                m_objDataArr = new Object[m_objCollection.m_objBabyArr.Length];

                for (int i1 = 0; i1 < m_objCollection.m_objBabyArr.Length; i1++)
                {
                    m_objSubDataArr = new object[18];
                    m_objSubDataArr[0] = m_objCollection.m_objBabyArr[i1].m_strSeqID;
                    if (m_objCollection.m_objBabyArr[i1].m_strMale == "True" || m_objCollection.m_objBabyArr[i1].m_strMale == "1")
                        m_objSubDataArr[1] = "√";
                    else
                        m_objSubDataArr[1] = "";
                    if (m_objCollection.m_objBabyArr[i1].m_strFemale == "True" || m_objCollection.m_objBabyArr[i1].m_strFemale == "1")
                        m_objSubDataArr[2] = "√";
                    else
                        m_objSubDataArr[2] = "";
                    if (m_objCollection.m_objBabyArr[i1].m_strLiveBorn == "True" || m_objCollection.m_objBabyArr[i1].m_strLiveBorn == "1")
                        m_objSubDataArr[3] = "√";
                    else
                        m_objSubDataArr[3] = "";
                    if (m_objCollection.m_objBabyArr[i1].m_strDieBorn == "True" || m_objCollection.m_objBabyArr[i1].m_strDieBorn == "1")
                        m_objSubDataArr[4] = "√";
                    else
                        m_objSubDataArr[4] = "";
                    if (m_objCollection.m_objBabyArr[i1].m_strDieNotBorn == "True" || m_objCollection.m_objBabyArr[i1].m_strDieNotBorn == "1")
                        m_objSubDataArr[5] = "√";
                    else
                        m_objSubDataArr[5] = "";
                    m_objSubDataArr[6] = m_objCollection.m_objBabyArr[i1].m_strWeight;
                    if (m_objCollection.m_objBabyArr[i1].m_strDie == "True" || m_objCollection.m_objBabyArr[i1].m_strDie == "1")
                        m_objSubDataArr[7] = "√";
                    else
                        m_objSubDataArr[7] = "";
                    if (m_objCollection.m_objBabyArr[i1].m_strChangeDepartment == "True" || m_objCollection.m_objBabyArr[i1].m_strChangeDepartment == "1")
                        m_objSubDataArr[8] = "√";
                    else
                        m_objSubDataArr[8] = "";
                    if (m_objCollection.m_objBabyArr[i1].m_strOutHospital == "True" || m_objCollection.m_objBabyArr[i1].m_strOutHospital == "1")
                        m_objSubDataArr[9] = "√";
                    else
                        m_objSubDataArr[9] = "";
                    if (m_objCollection.m_objBabyArr[i1].m_strNaturalCondiction == "True" || m_objCollection.m_objBabyArr[i1].m_strNaturalCondiction == "1")
                        m_objSubDataArr[10] = "√";
                    else
                        m_objSubDataArr[10] = "";
                    if (m_objCollection.m_objBabyArr[i1].m_strSuffocate1 == "True" || m_objCollection.m_objBabyArr[i1].m_strSuffocate1 == "1")
                        m_objSubDataArr[11] = "√";
                    else
                        m_objSubDataArr[11] = "";
                    if (m_objCollection.m_objBabyArr[i1].m_strSuffocate2 == "True" || m_objCollection.m_objBabyArr[i1].m_strSuffocate1 == "2")
                        m_objSubDataArr[12] = "√";
                    else
                        m_objSubDataArr[12] = "";
                    m_objSubDataArr[13] = m_objCollection.m_objBabyArr[i1].m_strInfectionTimes;
                    m_objSubDataArr[14] = m_objCollection.m_objBabyArr[i1].m_strInfectionName;
                    m_objSubDataArr[15] = m_objCollection.m_objBabyArr[i1].m_strICD10;
                    m_objSubDataArr[16] = m_objCollection.m_objBabyArr[i1].m_strSalveTimes;
                    m_objSubDataArr[17] = m_objCollection.m_objBabyArr[i1].m_strSalveSuccessTimes;
                    m_objDataArr[i1] = m_objSubDataArr;
                }
                m_objLine109.m_ObjPrintLineInfo = m_objDataArr;
            }


            m_objDataArr = new Object[6];
            //			m_objDataArr[0]=gpbRTMode.Tag.ToString();
            //			m_objDataArr[1]=gpbRTRule.Tag.ToString();
            //			m_objDataArr[2]=this.chkRTCo.Checked==true? "√":"";
            //			m_objDataArr[3]=this.chkRTAccelerator.Checked==true?"√":"";
            //			m_objDataArr[4]=this.chkRTX_Ray.Checked==true? "√":"";
            //			m_objDataArr[5]=this.chkRTLacuna.Checked==true? "√":"";
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strRTModeSeq;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strRTRuleSeq;
                if (m_objCollection.m_objContent.m_strRTCo == "True" || m_objCollection.m_objContent.m_strRTCo == "1")
                    m_objDataArr[2] = "√";
                else
                    m_objDataArr[2] = "";
                if (m_objCollection.m_objContent.m_strRTAccelerator == "True" || m_objCollection.m_objContent.m_strRTAccelerator == "1")
                    m_objDataArr[3] = "√";
                else
                    m_objDataArr[3] = "";
                if (m_objCollection.m_objContent.m_strRTX_Ray == "True" || m_objCollection.m_objContent.m_strRTX_Ray == "1")
                    m_objDataArr[4] = "√";
                else
                    m_objDataArr[4] = "";
                if (m_objCollection.m_objContent.m_strRTLacuna == "True" || m_objCollection.m_objContent.m_strRTLacuna == "1")
                    m_objDataArr[5] = "√";
                else
                    m_objDataArr[5] = "";
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
                m_objDataArr[4] = "";
                m_objDataArr[5] = "";
            }
            m_objLine111.m_ObjPrintLineInfo = m_objDataArr;
            //112
            m_objDataArr = new Object[5];
            //			m_objDataArr[0]=gpbOriginalDisease.Tag.ToString();
            //			m_objDataArr[1]=txtOriginalDiseaseGy.Text;
            //			m_objDataArr[2]=txtOriginalDiseaseTimes.Text ;
            //			m_objDataArr[3]=txtOriginalDiseaseDays.Text ;
            //			m_objDataArr[4]=dtpOriginalDiseaseBeginDate.Value.ToString("yyyy年MM月dd日")+"至" +dtpOriginalDiseaseEndDate.Value.ToString("yyyy年MM月dd日");
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strOriginalDiseaseSeq;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strOriginalDiseaseGy;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strOriginalDiseaseTimes;
                m_objDataArr[3] = m_objCollection.m_objContent.m_strOriginalDiseaseDays;
                m_objDataArr[4] = DateTime.Parse(m_objCollection.m_objContent.m_strOriginalDiseaseBeginDate).ToString("yy   MM   dd  ") + "   " + DateTime.Parse(m_objCollection.m_objContent.m_strOriginalDiseaseEndDate).ToString("yy   MM   dd   ");
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
                m_objDataArr[4] = "";
            }
            m_objLine112.m_ObjPrintLineInfo = m_objDataArr;

            //113

            m_objDataArr = new Object[5];
            //			m_objDataArr[0]=gpbLymph.Tag.ToString();
            //			m_objDataArr[1]=txtLymphGy.Text;
            //			m_objDataArr[2]=txtLymphTimes.Text ;
            //			m_objDataArr[3]=txtLymphDays.Text ;
            //			m_objDataArr[4]=dtpLymphBeginDate.Value.ToString("yyyy年MM月dd日")+"至" +dtpLymphEndDate.Value.ToString("yyyy年MM月dd日");
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strLymphSeq;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strLymphGy;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strLymphTimes;
                m_objDataArr[3] = m_objCollection.m_objContent.m_strLymphDays;
                m_objDataArr[4] = DateTime.Parse(m_objCollection.m_objContent.m_strLymphBeginDate).ToString("yy   MM   dd  ") + "   " + DateTime.Parse(m_objCollection.m_objContent.m_strLymphEndDate).ToString("yy   MM   dd   ");
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
                m_objDataArr[4] = "";
            }
            m_objLine113.m_ObjPrintLineInfo = m_objDataArr;

            //114           
            m_objDataArr = new Object[4];
            //			m_objDataArr[0]=txtMetastasisGy.Text ;
            //			m_objDataArr[1]=txtMetastasisTimes.Text;
            //			m_objDataArr[2]=txtMetastasisDays.Text ;
            //			m_objDataArr[3]=dtpMetastasisBeginDate.Value.ToString("yyyy年MM月dd日") + "至" +dtpMetastasisEndDate.Value.ToString("yyyy年MM月dd日");
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strMetastasisGy;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strMetastasisTimes;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strMetastasisDays;
                m_objDataArr[3] = DateTime.Parse(m_objCollection.m_objContent.m_strMetastasisBeginDate).ToString("yy   MM   dd  ") + "   " + DateTime.Parse(m_objCollection.m_objContent.m_strMetastasisEndDate).ToString("yy   MM   dd   ");
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
            }
            m_objLine114.m_ObjPrintLineInfo = m_objDataArr;

            //115
            m_objDataArr = new Object[5];
            //			m_objDataArr[0]=gpbChemotherapyMode.Tag.ToString();
            //			m_objDataArr[1]=chkChemotherapyWholeBody.Checked==true? "√":"";
            //			m_objDataArr[2]=this.chkChemotherapyLocal.Checked==true?"√":"";
            //			m_objDataArr[3]=this.chkChemotherapyIntubate.Checked==true? "√":"";
            //			m_objDataArr[4]=this.chkChemotherapyThorax.Checked==true? "√":"";
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strChemotherapyModeSeq;
                if (m_objCollection.m_objContent.m_strChemotherapyWholeBody == "True" || m_objCollection.m_objContent.m_strChemotherapyWholeBody == "1")
                    m_objDataArr[1] = "√";
                else
                    m_objDataArr[1] = "";
                if (m_objCollection.m_objContent.m_strChemotherapyLocal == "True" || m_objCollection.m_objContent.m_strChemotherapyLocal == "1")
                    m_objDataArr[2] = "√";
                else
                    m_objDataArr[2] = "";
                if (m_objCollection.m_objContent.m_strChemotherapyIntubate == "True" || m_objCollection.m_objContent.m_strChemotherapyIntubate == "1")
                    m_objDataArr[3] = "√";
                else
                    m_objDataArr[3] = "";
                if (m_objCollection.m_objContent.m_strChemotherapyThorax == "True" || m_objCollection.m_objContent.m_strChemotherapyThorax == "1")
                    m_objDataArr[4] = "√";
                else
                    m_objDataArr[4] = "";
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
                m_objDataArr[4] = "";
            }
            m_objLine115.m_ObjPrintLineInfo = m_objDataArr;
            //116
            m_objDataArr = new Object[4];
            if (m_bolIfCheck)
            {
                if (m_objCollection.m_objContent.m_strChemotherapyAbdomen == "True" || m_objCollection.m_objContent.m_strChemotherapyAbdomen == "1")
                    m_objDataArr[0] = "√";
                else
                    m_objDataArr[0] = "";
                if (m_objCollection.m_objContent.m_strChemotherapySpinal == "True" || m_objCollection.m_objContent.m_strChemotherapySpinal == "1")
                    m_objDataArr[1] = "√";
                else
                    m_objDataArr[1] = "";
                if (m_objCollection.m_objContent.m_strChemotherapyOtherTry == "True" || m_objCollection.m_objContent.m_strChemotherapyOtherTry == "1")
                    m_objDataArr[2] = "√";
                else
                    m_objDataArr[2] = "";
                if (m_objCollection.m_objContent.m_strChemotherapyOther == "True" || m_objCollection.m_objContent.m_strChemotherapyOther == "1")
                    m_objDataArr[3] = "√";
                else
                    m_objDataArr[3] = "";
                //			m_objDataArr[0]=chkChemotherapyAbdomen.Checked==true? "√":"";
                //			m_objDataArr[1]=chkChemotherapySpinal.Checked==true?"√":"";
                //			m_objDataArr[2]=chkChemotherapyOtherTry.Checked==true? "√":"";
                //			m_objDataArr[3]=chkChemotherapyOther.Checked==true? "√":"";
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
            }
            m_objLine116.m_ObjPrintLineInfo = m_objDataArr;
            //118
            if (m_objCollection.m_objChemotherapyArr == null || m_objCollection.m_objChemotherapyArr.Length <= 0)
            {
                m_objLine118.m_ObjPrintLineInfo = null;
            }
            else
            {
                if (m_objCollection.m_objChemotherapyArr.Length > 0)
                {
                    m_objDataArr = new Object[m_objCollection.m_objChemotherapyArr.Length];

                    for (int i1 = 0; i1 < m_objCollection.m_objChemotherapyArr.Length; i1++)
                    {
                        m_objSubDataArr = new object[4];
                        m_objSubDataArr[0] = DateTime.Parse(m_objCollection.m_objChemotherapyArr[i1].m_strChemotherapyDate).ToString("yyyy-MM-dd HH:mm");
                        m_objSubDataArr[1] = m_objCollection.m_objChemotherapyArr[i1].m_strMedicineName;
                        m_objSubDataArr[2] = m_objCollection.m_objChemotherapyArr[i1].m_strPeriod;
                        if (m_objCollection.m_objChemotherapyArr[i1].m_strField_CR == "True" || m_objCollection.m_objChemotherapyArr[i1].m_strField_CR == "1")
                            m_objSubDataArr[3] = "3";
                        else if (m_objCollection.m_objChemotherapyArr[i1].m_strField_PR == "True" || m_objCollection.m_objChemotherapyArr[i1].m_strField_PR == "1")
                            m_objSubDataArr[3] = "4";
                        else if (m_objCollection.m_objChemotherapyArr[i1].m_strField_MR == "True" || m_objCollection.m_objChemotherapyArr[i1].m_strField_MR == "1")
                            m_objSubDataArr[3] = "5";
                        else if (m_objCollection.m_objChemotherapyArr[i1].m_strField_S == "True" || m_objCollection.m_objChemotherapyArr[i1].m_strField_S == "1")
                            m_objSubDataArr[3] = "6";
                        else if (m_objCollection.m_objChemotherapyArr[i1].m_strField_P == "True" || m_objCollection.m_objChemotherapyArr[i1].m_strField_P == "1")
                            m_objSubDataArr[3] = "7";
                        else if (m_objCollection.m_objChemotherapyArr[i1].m_strField_NA == "True" || m_objCollection.m_objChemotherapyArr[i1].m_strField_NA == "1")
                            m_objSubDataArr[3] = "8";

                        m_objDataArr[i1] = m_objSubDataArr;
                    }
                    m_objLine118.m_ObjPrintLineInfo = m_objDataArr;
                }
            }

            //119
            m_objDataArr = new Object[6];
            //			m_objDataArr[0]=txtTotalAmt.Text ;
            //			m_objDataArr[1]=txtBedAmt.Text;
            //			m_objDataArr[2]=txtNurseAmt.Text ;
            //			m_objDataArr[3]=txtWMAmt.Text ;
            //			m_objDataArr[4]=txtCMFinishedAmt.Text ;
            //			m_objDataArr[5]=txtCMSemiFinishedAmt.Text ;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strTotalAmt;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strBedAmt;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strNurseAmt;
                m_objDataArr[3] = m_objCollection.m_objContent.m_strWMAmt;
                m_objDataArr[4] = m_objCollection.m_objContent.m_strCMFinishedAmt;
                m_objDataArr[5] = m_objCollection.m_objContent.m_strCMSemiFinishedAmt;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
                m_objDataArr[4] = "";
                m_objDataArr[5] = "";
            }
            m_objLine119.m_ObjPrintLineInfo = m_objDataArr;
            //120 

            m_objDataArr = new Object[7];
            //			m_objDataArr[0]=txtRadiationAmt.Text ;
            //			m_objDataArr[1]=txtAssayAmt.Text;
            //			m_objDataArr[2]=txtO2Amt.Text ;
            //			m_objDataArr[3]=txtBloodAmt.Text ;
            //			m_objDataArr[4]=txtTreatmentAmt.Text ;
            //			m_objDataArr[5]=txtOperationAmt.Text ;
            //			m_objDataArr[6]=txtDeliveryChildAmt.Text ;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strRadiationAmt;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strAssayAmt;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strO2Amt;
                m_objDataArr[3] = m_objCollection.m_objContent.m_strBloodAmt;
                m_objDataArr[4] = m_objCollection.m_objContent.m_strTreatmentAmt;
                m_objDataArr[5] = m_objCollection.m_objContent.m_strOperationAmt;
                m_objDataArr[6] = m_objCollection.m_objContent.m_strDeliveryChildAmt;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
                m_objDataArr[4] = "";
                m_objDataArr[5] = "";
                m_objDataArr[6] = "";
            }
            m_objLine120.m_ObjPrintLineInfo = m_objDataArr;
            //121

            m_objDataArr = new Object[7];
            //			m_objDataArr[0]=txtCheckAmt.Text ;
            //			m_objDataArr[1]=txtAnaethesiaAmt.Text;
            //			m_objDataArr[2]=txtBabyAmt.Text ;
            //			m_objDataArr[3]=txtAccompanyAmt.Text ;
            //			m_objDataArr[4]=txtOtherAmt1.Text ;
            //			m_objDataArr[5]=txtOtherAmt2.Text ;
            //			m_objDataArr[6]=txtOtherAmt3.Text ;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strCheckAmt;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strAnaethesiaAmt;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strBabyAmt;
                m_objDataArr[3] = m_objCollection.m_objContent.m_strAccompanyAmt;
                m_objDataArr[4] = m_objCollection.m_objContent.m_strOtherAmt1;
                m_objDataArr[5] = m_objCollection.m_objContent.m_strOtherAmt2;
                m_objDataArr[6] = m_objCollection.m_objContent.m_strOtherAmt3;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
                m_objDataArr[4] = "";
                m_objDataArr[5] = "";
                m_objDataArr[6] = "";
            }
            m_objLine121.m_ObjPrintLineInfo = m_objDataArr;

            //122

            m_objDataArr = new Object[2];
            //			if(gpbCorpseCheck.Tag == null)
            //				m_objDataArr[0]="";
            //			m_objDataArr[0]=((int)(int.Parse(gpbCorpseCheck.Tag.ToString()) + 1)).ToString();
            //			if(gpbFirstCase.Tag == null)
            //				m_objDataArr[1] = "";
            //			m_objDataArr[1]=((int)(int.Parse(gpbFirstCase.Tag.ToString()) + 1)).ToString();
            if (m_bolIfCheck)
            {
                if (m_objCollection.m_objContent.m_strCorpseCheck == "True" || m_objCollection.m_objContent.m_strCorpseCheck == "1")
                    m_objDataArr[0] = "1";
                else
                    m_objDataArr[0] = "2";
                if (m_objCollection.m_objContent.m_strFirstCase == "True" || m_objCollection.m_objContent.m_strFirstCase == "1")
                    m_objDataArr[1] = "1";
                else
                    m_objDataArr[1] = "2";
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
            }
            m_objLine122.m_ObjPrintLineInfo = m_objDataArr;

            //123
            m_objDataArr = new Object[3];
            //			m_objDataArr[0]=((int)(int.Parse(gpbFollow.Tag.ToString()) + 1)).ToString();
            //			m_objDataArr[1]=txtFollow_Week.Text.Trim().ToString()+"周"+txtFollow_Month.Text.Trim().ToString()+"月"+txtFollow_Year.Text.Trim().ToString()+"年";
            //			m_objDataArr[2]=((int)(int.Parse(gpbModelCase.Tag.ToString()) + 1)).ToString();
            if (m_bolIfCheck)
            {
                if (m_objCollection.m_objContent.m_strFollow == "True" || m_objCollection.m_objContent.m_strFollow == "1")
                    m_objDataArr[0] = "1";
                else
                    m_objDataArr[0] = "2";
                m_objDataArr[1] = m_objCollection.m_objContent.m_strFollow_Week + "     " + m_objCollection.m_objContent.m_strFollow_Month + "     " + m_objCollection.m_objContent.m_strFollow_Year;
                if (m_objCollection.m_objContent.m_strModelCase == "True" || m_objCollection.m_objContent.m_strFollow == "1")
                    m_objDataArr[2] = "1";
                else
                    m_objDataArr[2] = "2";
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
            }
            m_objLine123.m_ObjPrintLineInfo = m_objDataArr;

            //124
            m_objDataArr = new Object[3];
            //			m_objDataArr[0]=txtBloodType.Text;
            //			m_objDataArr[1]=((int)(int.Parse(gpbBloodRh.Tag.ToString()) + 1)).ToString();
            //			m_objDataArr[2]=((int)(int.Parse(gpbBloodTransAction.Tag.ToString()) + 1)).ToString();
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strBloodType;
                if (m_objCollection.m_objContent.m_strBloodRh == "True" || m_objCollection.m_objContent.m_strBloodRh == "1")
                    m_objDataArr[1] = "1";
                else
                    m_objDataArr[1] = "2";
                if (m_objCollection.m_objContent.m_strBloodTransActoin == "True" || m_objCollection.m_objContent.m_strBloodTransActoin == "1")
                    m_objDataArr[2] = "1";
                else
                    m_objDataArr[2] = "2";
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
            }
            m_objLine124.m_ObjPrintLineInfo = m_objDataArr;

            //125
            m_objDataArr = new Object[5];
            //			m_objDataArr[0]=txtRBC.Text;
            //			m_objDataArr[1]=txtPLT.Text;
            //			m_objDataArr[2]=txtPlasm.Text;
            //			m_objDataArr[3]=txtWholeBlood.Text;
            //			m_objDataArr[4]=txtOtherBlood.Text;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strRBC;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strPLT;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strPlasm;
                m_objDataArr[3] = m_objCollection.m_objContent.m_strWholeBlood;
                m_objDataArr[4] = m_objCollection.m_objContent.m_strOtherBlood;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
                m_objDataArr[4] = "";
            }
            m_objLine125.m_ObjPrintLineInfo = m_objDataArr;

            //126
            m_objDataArr = new Object[6];
            //			m_objDataArr[0]=txtConsultation.Text;
            //			m_objDataArr[1]=txtLongDistanctConsultation.Text;
            //			m_objDataArr[2]=txtTOPLevel.Text;
            //			m_objDataArr[3]=txtNurseLevelI.Text;
            //			m_objDataArr[4]=txtNurseLevelII.Text;
            //			m_objDataArr[5]=txtNurseLevelIII.Text;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strConsultation;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strLongDistanctConsultation;
                m_objDataArr[2] = m_objCollection.m_objContent.m_strTOPLevel;
                m_objDataArr[3] = m_objCollection.m_objContent.m_strNurseLevelI;
                m_objDataArr[4] = m_objCollection.m_objContent.m_strNurseLevelII;
                m_objDataArr[5] = m_objCollection.m_objContent.m_strNurseLevelIII;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
                m_objDataArr[2] = "";
                m_objDataArr[3] = "";
                m_objDataArr[4] = "";
                m_objDataArr[5] = "";
            }
            m_objLine126.m_ObjPrintLineInfo = m_objDataArr;


            //127
            m_objDataArr = new Object[2];
            //			m_objDataArr[0]=txtICU.Text;
            //			m_objDataArr[1]=txtSpecialNurse.Text;
            if (m_bolIfCheck)
            {
                m_objDataArr[0] = m_objCollection.m_objContent.m_strICU;
                m_objDataArr[1] = m_objCollection.m_objContent.m_strSpecialNurse;
            }
            else
            {
                m_objDataArr[0] = "";
                m_objDataArr[1] = "";
            }
            m_objLine127.m_ObjPrintLineInfo = m_objDataArr;
        }

        private class clsPrintLine1 : clsPrintLineBase
        {

            Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private clsPeopleInfo m_objPeople;
            public clsPrintLine1()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                //				GraphicsUnit enmOld = p_objGrp.PageUnit;
                //				p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                if (m_objPeople == null)
                {
                    //#if PrintTitle

                    //					float fltOld = p_objGrp.PageScale;
                    //					p_objGrp.PageScale = 0.93f;

                    //					Pen pen = new Pen(Color.Black,0.1f);
                    if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                    {
                        p_objGrp.DrawString("姓名___________性别    1.男 2.女   出生_____年___月____日  年龄___婚姻    1.未  2.已  3.离  4.丧", new Font("SimSun", 10.5f), Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);

                        p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 37, p_intPosY, 3, 3);

                        //					p_objGrp.PageScale = fltOld;					
                        //					p_objGrp.PageUnit = GraphicsUnit.Pixel;
                        p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 132, p_intPosY, 3, 3);
                    }

                    //#endif
                }
                else
                {
                    if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                    {
                        p_objGrp.DrawString("姓名___________性别    1.男 2.女   出生_____年___月____日  年龄___婚姻    1.未  2.已  3.离  4.丧", new Font("SimSun", 10.5f), Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                        p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 37, p_intPosY, 3, 3);
                        p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 132, p_intPosY, 3, 3);
                    }

                    p_objGrp.DrawString(m_objPeople.m_StrFirstName, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 10, p_intPosY);
                    if (m_objPeople.m_StrSex == "男")
                        p_objGrp.DrawString("1", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 37, p_intPosY);
                    else
                        p_objGrp.DrawString("2", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 37, p_intPosY);

                    p_objGrp.DrawString(m_objPeople.m_DtmBirth.Year.ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 73, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_DtmBirth.Month.ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 87, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_DtmBirth.Day.ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 97, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_IntAge.ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 118, p_intPosY);


                    if (m_objPeople.m_StrMarried == "未婚")
                        p_objGrp.DrawString("1", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 132, p_intPosY);
                    else
                        p_objGrp.DrawString("2", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 132, p_intPosY);
                }

                p_intPosY += (int)enmRectangleInfo.RowStep;
                //				Top += Step;
                m_blnHaveMoreLine = false;
                //				p_objGrp.PageUnit = enmOld;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objPeople = (clsPeopleInfo)value;
                    }
                }
            }
        }


        private class clsPrintLine2 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private clsPeopleInfo m_objPeople;
            public clsPrintLine2()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;

                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("职业___________出生地_______省(市)_____县 民族__________国籍______身份证号______________________", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                if (m_objPeople != null)
                {
                    p_objGrp.DrawString(m_objPeople.m_StrOccupation, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 11, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrNativePlace, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 41, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrNativePlace, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 63, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrNation, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 91, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrNationality, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 112, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrIDCard, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 140, p_intPosY);
                }

                p_intPosY += (int)enmRectangleInfo.RowStep1;
                m_blnHaveMoreLine = false;
                p_objGrp.PageUnit = enmOld;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objPeople = (clsPeopleInfo)value;
                    }
                }
            }
        }


        private class clsPrintLine3 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private clsPeopleInfo m_objPeople;
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            public clsPrintLine3()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("工作单位及地址________________________________________电话_____________邮政编码________________", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                if (m_objPeople != null)
                {
                    p_objGrp.DrawString(m_objPeople.m_StrOfficePhone, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 110, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrOfficePC, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 150, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrOfficeAddress, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 29, p_intPosY);


                    //						m_objText1.m_mthSetContextWithCorrectBefore(m_objPeople.m_StrOfficeAddress,"",m_dtmFirstPrintTime);
                }
                p_intPosY += (int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;
                //					m_blnFirstPrint = false;
                //				}
                //				m_objText1.m_mthPrintLine(360,(int)enmRectangleInfo.LeftX+130,p_intPosY,p_objGrp);
                //				p_objGrp.DrawString("_________________________________________________",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+130,p_intPosY);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					m_intTimes++;
                //				}
                //				else
                //				{
                //					m_blnHaveMoreLine = false;
                //					p_intPosY += (int)enmRectangleInfo.RowStep;
                //				}
                p_objGrp.PageUnit = enmOld;

            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                //				m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objPeople = (clsPeopleInfo)value;
                    }
                }
            }
        }


        private class clsPrintLine4 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private clsPeopleInfo m_objPeople;
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            public clsPrintLine4()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("户口地址_____________________________________________________________邮政编码________________", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                if (m_objPeople != null)
                {
                    p_objGrp.DrawString(m_objPeople.m_StrHomePC, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 150, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrHomeAddress, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 20, p_intPosY);
                    //						m_objText1.m_mthSetContextWithCorrectBefore(m_objPeople.m_StrHomeAddress,"",m_dtmFirstPrintTime);
                }
                p_intPosY += (int)enmRectangleInfo.RowStep1;
                m_blnHaveMoreLine = false;
                //					m_blnFirstPrint = false;
                //				}

                //				m_objText1.m_mthPrintLine(550,(int)enmRectangleInfo.LeftX+100,p_intPosY,p_objGrp);
                //				p_objGrp.DrawString("________________________________________________________________________",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+90,p_intPosY);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					m_intTimes++;
                //				}
                //				else
                //				{
                //					m_blnHaveMoreLine = false;
                //					p_intPosY += (int)enmRectangleInfo.RowStep;
                //				}
                p_objGrp.PageUnit = enmOld;

            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                //				m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objPeople = (clsPeopleInfo)value;
                    }
                }
            }
        }


        private class clsPrintLine5 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private clsPeopleInfo m_objPeople;
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            public clsPrintLine5()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{

                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("联系人姓名_______________ 关系________ 地址________________________________电话______________", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                if (m_objPeople != null)
                {
                    p_objGrp.DrawString(m_objPeople.m_StrLinkManFirstName, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 20, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrPatientRelation, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 60, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrLinkManPhone, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 150, p_intPosY);
                    p_objGrp.DrawString(m_objPeople.m_StrLinkManAddress, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 85, p_intPosY);
                    //						m_objText1.m_mthSetContextWithCorrectBefore(m_objPeople.m_StrLinkManAddress,"",m_dtmFirstPrintTime);
                }
                p_intPosY += (int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;
                //					m_blnFirstPrint = false;
                //				}

                //				m_objText1.m_mthPrintLine(300,(int)enmRectangleInfo.LeftX+340,p_intPosY,p_objGrp);
                //				p_objGrp.DrawString("_________________________________________",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+330,p_intPosY);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					m_intTimes++;
                //				}
                //				else
                //				{
                //					m_blnHaveMoreLine = false;
                //					p_intPosY += (int)enmRectangleInfo.RowStep;
                //				}
                p_objGrp.PageUnit = enmOld;

                //
            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                //				m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objPeople = (clsPeopleInfo)value;
                    }
                }
            }
        }


        private class clsPrintLine6 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr;
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            public clsPrintLine6()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 11));

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("入院日期______年____月____日____时 入院科别________________病床_________转科科别______________", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 18, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 85, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 122, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 153, p_intPosY);
                //					m_blnFirstPrint = false;
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objDataArr[3].ToString(),"",m_dtmFirstPrintTime);
                //				}

                //				m_objText1.m_mthPrintLine(100,(int)enmRectangleInfo.LeftX+650,p_intPosY,p_objGrp);
                //				p_objGrp.DrawString("______________",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+650,p_intPosY);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					m_intTimes++;
                //				}
                //				else
                //				{
                m_blnHaveMoreLine = false;
                p_intPosY += (int)enmRectangleInfo.RowStep1;
                //				}
                p_objGrp.PageUnit = enmOld;

            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine7 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr;
            public clsPrintLine7()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("出院日期______年____月____日____时 出院科别________________病室_________实际住院_____________天", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 18, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 85, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 122, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 153, p_intPosY);
                p_intPosY += (int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;
                p_objGrp.PageUnit = enmOld;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine8 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine8()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("门(急)诊诊断______________________________门(急)诊医生___________入院时情况:  1.危 2.急 3.一般", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                    //					m_blnFirstPrint = false;
                }

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 104, p_intPosY);
                p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 143, p_intPosY, 3, 3);
                if (m_objDataArr[2] != null)
                    p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 143, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 27, p_intPosY);
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objDataArr[0].ToString(),"",m_dtmFirstPrintTime);
                //				}

                //				m_objText1.m_mthPrintLine(260,(int)enmRectangleInfo.LeftX+100,p_intPosY,p_objGrp);
                //				p_objGrp.DrawString("__________________________________",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+100,p_intPosY);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					m_intTimes++;
                //				}
                //				else
                //				{
                m_blnHaveMoreLine = false;
                p_intPosY += (int)enmRectangleInfo.RowStep1;
                //				}
                p_objGrp.PageUnit = enmOld;


            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine9 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            public clsPrintLine9()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("入院诊断_______________________________________________________入院后确诊日期_____年____月____日", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 146, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 18, p_intPosY);
                //					m_blnFirstPrint = false;
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objDataArr[0].ToString(),"",m_dtmFirstPrintTime);
                //				}

                //				m_objText1.m_mthPrintLine(400,(int)enmRectangleInfo.LeftX+100,p_intPosY,p_objGrp);
                //				p_objGrp.DrawString("____________________________________________________",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+100,p_intPosY);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                m_blnHaveMoreLine = false;
                p_intPosY += (int)enmRectangleInfo.RowStep;
                //					m_intTimes++;
                //				}
                //				else
                //				{
                //					m_blnHaveMoreLine = false;
                //					p_intPosY += (int)enmRectangleInfo.RowStep;
                //				}
                p_objGrp.PageUnit = enmOld;


            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine10 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine10()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX - 2, p_intPosY, (int)enmRectangleInfo.RightX, p_intPosY);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX - 2, 37 - 25, (int)enmRectangleInfo.LeftX - 2, 37 + 210);//p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX + 74, p_intPosY, (int)enmRectangleInfo.LeftX + 74, p_intPosY + 86);//(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX + 74, p_intPosY + 8, (int)enmRectangleInfo.LeftX + 157, p_intPosY + 8);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX + 89, p_intPosY + 8, (int)enmRectangleInfo.LeftX + 89, p_intPosY + 86);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX + 108, p_intPosY + 8, (int)enmRectangleInfo.LeftX + 108, p_intPosY + 86);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX + 124, p_intPosY + 8, (int)enmRectangleInfo.LeftX + 124, p_intPosY + 86);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX + 141, p_intPosY + 8, (int)enmRectangleInfo.LeftX + 141, p_intPosY + 86);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX + 157, p_intPosY, (int)enmRectangleInfo.LeftX + 157, p_intPosY + 86);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+72,p_intPosY,(int)enmRectangleInfo.LeftX+72,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("出院情况", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 107, p_intPosY + 2);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+153,p_intPosY,(int)enmRectangleInfo.LeftX+153,p_intPosY+(int)enmRectangleInfo.RowStep);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                    p_objGrp.DrawString("出院诊断", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 29, p_intPosY + 6);
                    p_objGrp.DrawString("ICD-10", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 161, p_intPosY + 6);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.RowStep);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+153,p_intPosY,(int)enmRectangleInfo.LeftX+153,p_intPosY);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+72,p_intPosY,(int)enmRectangleInfo.LeftX+72,p_intPosY+(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawString("1治愈", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 76, p_intPosY + 10);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+90,p_intPosY,(int)enmRectangleInfo.LeftX+90,p_intPosY+(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawString("2好转", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 93, p_intPosY + 10);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+106,p_intPosY,(int)enmRectangleInfo.LeftX+106,p_intPosY+(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawString("3未愈", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 110, p_intPosY + 10);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+121,p_intPosY,(int)enmRectangleInfo.LeftX+121,p_intPosY+(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawString("4死亡", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 125, p_intPosY + 10);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+143,p_intPosY,(int)enmRectangleInfo.LeftX+143,p_intPosY+(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawString("5其他", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 142, p_intPosY + 10);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+153,p_intPosY,(int)enmRectangleInfo.LeftX+153,p_intPosY+(int)enmRectangleInfo.RowStep);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.RowStep);
                    //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);

                    p_intPosY += 15;
                    for (int i = 1; i <= 6; i++)
                    {
                        p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX - 2, p_intPosY, (int)enmRectangleInfo.RightX, p_intPosY);
                        p_intPosY += 13;
                    }
                    p_intPosY -= (78 - 6);

                    for (int i = 1; i <= 5; i++)
                    {
                        p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX - 2, p_intPosY, (int)enmRectangleInfo.RightX, p_intPosY);
                        p_intPosY += 13;
                    }

                    for (int i = 1; i <= 9; i++)
                    {
                        p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX - 2, p_intPosY, (int)enmRectangleInfo.RightX, p_intPosY);
                        p_intPosY += 7;
                    }

                    p_intPosY -= 133;
                }
                else
                    p_intPosY += 23;

                m_blnHaveMoreLine = false;
                p_objGrp.PageUnit = enmOld;
            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine11 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;

            public clsPrintLine11()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("主要诊断", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+460,p_intPosY,(int)enmRectangleInfo.LeftX+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+520,p_intPosY,(int)enmRectangleInfo.LeftX+520,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+580,p_intPosY,(int)enmRectangleInfo.LeftX+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+640,p_intPosY,(int)enmRectangleInfo.LeftX+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                switch (m_objDataArr[1].ToString())
                {
                    case "0":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 80, p_intPosY);
                        break;
                    case "1":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 96, p_intPosY);
                        break;
                    case "2":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 113, p_intPosY);
                        break;
                    case "3":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 130, p_intPosY);
                        break;
                    case "4":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 148, p_intPosY);
                        break;
                }
                //					p_objGrp.DrawString("A00.01",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+160,p_intPosY);
                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 160, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 18, p_intPosY);

                //					m_objText1.m_mthSetContextWithCorrectBefore("身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知","",m_dtmFirstPrintTime);
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objDataArr[0].ToString(),"",m_dtmFirstPrintTime);
                //					m_blnFirstPrint = false;
                //
                //				}

                //				m_objText1.m_mthPrintLine(300,(int)enmRectangleInfo.LeftX+100,p_intPosY,p_objGrp);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+460,p_intPosY,(int)enmRectangleInfo.LeftX+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+520,p_intPosY,(int)enmRectangleInfo.LeftX+520,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+580,p_intPosY,(int)enmRectangleInfo.LeftX+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+640,p_intPosY,(int)enmRectangleInfo.LeftX+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					m_intTimes++;
                //				}
                //				else
                //				{
                //					m_blnHaveMoreLine = false;
                //					p_intPosY += (int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //				}
                m_blnHaveMoreLine = false;
                p_intPosY += (int)enmRectangleInfo.RowStep;
                p_objGrp.PageUnit = enmOld;
                //
            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine12 : clsPrintLineBase
        {

            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            private int m_intCurrentRecord = 0;
            public clsPrintLine12()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("其他诊断", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+460,p_intPosY,(int)enmRectangleInfo.LeftX+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+520,p_intPosY,(int)enmRectangleInfo.LeftX+520,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+580,p_intPosY,(int)enmRectangleInfo.LeftX+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+640,p_intPosY,(int)enmRectangleInfo.LeftX+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);					
                //					m_blnFirstPrint = false;
                if (m_objDataArr != null && m_objDataArr.Length > 0)
                {
                    object[] m_objSubDataArr = (object[])m_objDataArr[0];
                    p_objGrp.DrawString(m_objSubDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 18, p_intPosY);
                    //						m_objText1.m_mthSetContextWithCorrectBefore(m_objSubDataArr[0].ToString(),"",m_dtmFirstPrintTime);
                    switch (m_objSubDataArr[1].ToString())
                    {
                        case "0":
                            p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 80, p_intPosY);
                            break;
                        case "1":
                            p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 96, p_intPosY);
                            break;
                        case "2":
                            p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 113, p_intPosY);
                            break;
                        case "3":
                            p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 130, p_intPosY);
                            break;
                        case "4":
                            p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 148, p_intPosY);
                            break;
                    }
                    p_objGrp.DrawString(m_objSubDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 160, p_intPosY);
                }
                m_intCurrentRecord++;
                //				}

                //				m_objText1.m_mthPrintLine(300,(int)enmRectangleInfo.LeftX+100,p_intPosY,p_objGrp);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+460,p_intPosY,(int)enmRectangleInfo.LeftX+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+520,p_intPosY,(int)enmRectangleInfo.LeftX+520,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+580,p_intPosY,(int)enmRectangleInfo.LeftX+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+640,p_intPosY,(int)enmRectangleInfo.LeftX+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					m_intTimes++;
                //				}
                //				else if(m_objDataArr != null && m_intCurrentRecord < m_objDataArr.Length)
                //				{
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+460,p_intPosY,(int)enmRectangleInfo.LeftX+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+520,p_intPosY,(int)enmRectangleInfo.LeftX+520,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+580,p_intPosY,(int)enmRectangleInfo.LeftX+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+640,p_intPosY,(int)enmRectangleInfo.LeftX+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //					object [] m_objSubDataArr = (object [])m_objDataArr[m_intCurrentRecord];
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objSubDataArr[0].ToString(),"",m_dtmFirstPrintTime);
                //
                //					switch(m_objSubDataArr[1].ToString())
                //					{
                //						case "0":
                //							p_objGrp.DrawString("√",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+410,p_intPosY+5);
                //							break;
                //						case "1":
                //							p_objGrp.DrawString("√",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+470,p_intPosY+5);
                //							break;
                //						case "2":
                //							p_objGrp.DrawString("√",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+530,p_intPosY+5);
                //							break;
                //						case "3":
                //							p_objGrp.DrawString("√",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+590,p_intPosY+5);
                //							break;
                //						case "4":
                //							p_objGrp.DrawString("√",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+650,p_intPosY+5);
                //							break;
                //						default:
                //							break;
                //					}
                //					p_objGrp.DrawString(m_objSubDataArr[2].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+710,p_intPosY);
                //	
                //					m_intCurrentRecord++;
                //				}
                //				else
                //				{
                m_blnHaveMoreLine = false;
                p_intPosY += 8 * (int)enmRectangleInfo.RowStep + 3;
                p_objGrp.PageUnit = enmOld;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //				}

            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        #region 13 ~ 21

        private class clsPrintLine13 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;

            public clsPrintLine13()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("医院感染名称", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+460,p_intPosY,(int)enmRectangleInfo.LeftX+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+520,p_intPosY,(int)enmRectangleInfo.LeftX+520,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+580,p_intPosY,(int)enmRectangleInfo.LeftX+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+640,p_intPosY,(int)enmRectangleInfo.LeftX+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                switch (m_objDataArr[1].ToString())
                {
                    case "0":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 80, p_intPosY);
                        break;
                    case "1":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 96, p_intPosY);
                        break;
                    case "2":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 113, p_intPosY);
                        break;
                    case "3":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 130, p_intPosY);
                        break;
                    case "4":
                        p_objGrp.DrawString("√", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 148, p_intPosY);
                        break;
                }
                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 160, p_intPosY);

                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objDataArr[0].ToString(),"",m_dtmFirstPrintTime);
                //					m_blnFirstPrint = false;
                //
                //				}

                //				m_objText1.m_mthPrintLine(300,(int)enmRectangleInfo.LeftX+100,p_intPosY,p_objGrp);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+400,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+460,p_intPosY,(int)enmRectangleInfo.LeftX+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+520,p_intPosY,(int)enmRectangleInfo.LeftX+520,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+580,p_intPosY,(int)enmRectangleInfo.LeftX+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+640,p_intPosY,(int)enmRectangleInfo.LeftX+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+700,p_intPosY,(int)enmRectangleInfo.LeftX+700,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					m_intTimes++;
                //				}
                //				else
                //				{
                m_blnHaveMoreLine = false;
                p_intPosY += (int)enmRectangleInfo.RowStep;
                p_objGrp.PageUnit = enmOld;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY)
                //;
                //					p_intPosY -= (int)enmRectangleInfo.SmallRowStep;
                //					p_intPosY += (int)enmRectangleInfo.RowStep;
                //				}

            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine14 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;

            public clsPrintLine14()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("病理诊断", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                //					m_blnFirstPrint = false;
                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 23, p_intPosY);
                //					m_objText1.m_mthSetContextWithCorrectBefore("身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不知身体不","",m_dtmFirstPrintTime);
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objDataArr[0].ToString(),"",m_dtmFirstPrintTime);
                //				}

                //				m_objText1.m_mthPrintLine(680,(int)enmRectangleInfo.LeftX+100,p_intPosY,p_objGrp);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+100,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //					m_intTimes++;
                //				}
                //				else
                //				{
                m_blnHaveMoreLine = false;
                p_intPosY += (int)enmRectangleInfo.RowStep;
                p_objGrp.PageUnit = enmOld;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+100,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //					p_intPosY -= (int)enmRectangleInfo.SmallRowStep;
                //					p_intPosY += (int)enmRectangleInfo.RowStep;
                //				}
            }

            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine15 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;

            public clsPrintLine15()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("损伤、中毒的外部因素:", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 38, p_intPosY);
                //					m_blnFirstPrint = false;
                //					m_objText1.m_mthSetContextWithCorrectBefore("身体不知身体不知身体不知身体不知身体不知身体不知身体不知","",m_dtmFirstPrintTime);
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objDataArr[0].ToString(),"",m_dtmFirstPrintTime);
                //					
                //				}
                //
                //				m_objText1.m_mthPrintLine(610,(int)enmRectangleInfo.LeftX+170,p_intPosY,p_objGrp);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+170,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //					m_intTimes++;
                //				}
                //				else
                //				{
                m_blnHaveMoreLine = false;
                p_intPosY += (int)enmRectangleInfo.RowStep;
                p_objGrp.PageUnit = enmOld;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+170,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //					p_intPosY -= (int)enmRectangleInfo.SmallRowStep;
                //					p_intPosY += (int)enmRectangleInfo.RowStep;
                //				}
            }

            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine16 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;

            public clsPrintLine16()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                //				if(m_blnFirstPrint)
                //				{
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("药物过敏                             HbsAg     HCV-Ab      HIV-Ab       0.未做 1.阴性 2.阳性", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);

                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 82, p_intPosY, 3, 3);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 106, p_intPosY, 3, 3);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 131, p_intPosY, 3, 3);
                }

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 82, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 106, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 131, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 18, p_intPosY);
                //					m_objText1.m_mthSetContextWithCorrectBefore("身体不知身体不知身体不知身体不知身体不知身身体不知身身体不知身身体不知身身体不知身身体不知身身体不知身","",m_dtmFirstPrintTime);
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objDataArr[0].ToString(),"",m_dtmFirstPrintTime);
                //					m_blnFirstPrint = false;
                //				}

                //				m_objText1.m_mthPrintLine(300,(int)enmRectangleInfo.LeftX+100,p_intPosY,p_objGrp);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+100,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY);
                //					m_intTimes++;
                //				}
                //				else
                //				{
                m_blnHaveMoreLine = false;
                p_intPosY += (int)enmRectangleInfo.RowStep;
                p_objGrp.PageUnit = enmOld;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+100,p_intPosY,(int)enmRectangleInfo.LeftX+400,p_intPosY);
                //					p_intPosY -= (int)enmRectangleInfo.SmallRowStep;
                //					p_intPosY += (int)enmRectangleInfo.RowStep;
                //				}
            }

            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine17 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);

            public clsPrintLine17()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("诊断符合情况   门诊与出院         入院与出院         术前与术后        临床与病理", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);


                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 49, p_intPosY, 3, 3);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 84, p_intPosY, 3, 3);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 119, p_intPosY, 3, 3);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 154, p_intPosY, 3, 3);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 49, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 84, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 119, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 154, p_intPosY);
                p_intPosY += (int)enmRectangleInfo.RowStep1;
                m_blnHaveMoreLine = false;
                p_objGrp.PageUnit = enmOld;

            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine18 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);

            public clsPrintLine18()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;

                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("               放射与病理     0.未做 1.符合 2.不符合 3.不肯定     抢救______次   成功_______次", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);

                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 49, p_intPosY, 3, 3);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (float)enmRectangleInfo.LeftX + 49, (float)p_intPosY);
                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (float)enmRectangleInfo.LeftX + 135, (float)p_intPosY);
                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (float)enmRectangleInfo.LeftX + 165, (float)p_intPosY);

                p_intPosY += (int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;
                p_objGrp.PageUnit = enmOld;

            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine19 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);

            public clsPrintLine19()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("科主任               主(副主)任医师               主治医师            住院医师", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                string empName = string.Empty;
                Image imgEmpSig = null;

                if (m_objDataArr[0] != null)
                {
                    empName = m_objDataArr[0].ToString().Trim();
                    imgEmpSig = ImageSignature.GetEmpSigImage(empName);
                    if (imgEmpSig != null)
                    {
                        p_objGrp.DrawImage(imgEmpSig, (int)enmRectangleInfo.LeftX + 15, p_intPosY);
                    }
                    else
                    {
                        p_objGrp.DrawString(empName, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 15, p_intPosY);
                    }
                }
                if (m_objDataArr[1] != null)
                {
                    empName = m_objDataArr[1].ToString().Trim();
                    imgEmpSig = ImageSignature.GetEmpSigImage(empName);
                    if (imgEmpSig != null)
                    {
                        p_objGrp.DrawImage(imgEmpSig, (int)enmRectangleInfo.LeftX + 70, p_intPosY);
                    }
                    else
                    {
                        p_objGrp.DrawString(empName, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 70, p_intPosY);
                    }
                }
                if (m_objDataArr[2] != null)
                {
                    empName = m_objDataArr[2].ToString().Trim();
                    imgEmpSig = ImageSignature.GetEmpSigImage(empName);
                    if (imgEmpSig != null)
                    {
                        p_objGrp.DrawImage(imgEmpSig, (int)enmRectangleInfo.LeftX + 110, p_intPosY);
                    }
                    else
                    {
                        p_objGrp.DrawString(empName, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 110, p_intPosY);
                    }
                }
                if (m_objDataArr[3] != null)
                {
                    empName = m_objDataArr[3].ToString().Trim();
                    imgEmpSig = ImageSignature.GetEmpSigImage(empName);
                    if (imgEmpSig != null)
                    {
                        p_objGrp.DrawImage(imgEmpSig, (int)enmRectangleInfo.LeftX + 150, p_intPosY);
                    }
                    else
                    {
                        p_objGrp.DrawString(empName, m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 150, p_intPosY);
                    }
                }
                p_intPosY += (int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;
                p_objGrp.PageUnit = enmOld;

            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine20 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);

            public clsPrintLine20()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("进修医师             研究生实习医师               实习医师            编码员", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                }

                if (m_objDataArr[0] != null)
                    p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 18, p_intPosY);
                if (m_objDataArr[1] != null)
                    p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 70, p_intPosY);
                if (m_objDataArr[2] != null)
                    p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 110, p_intPosY);
                if (m_objDataArr[3] != null)
                    p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 150, p_intPosY);
                p_intPosY += (int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;
                p_objGrp.PageUnit = enmOld;

            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine21 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private object[] m_objDataArr = null;
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);

            public clsPrintLine21()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                GraphicsUnit enmOld = p_objGrp.PageUnit;
                p_objGrp.PageUnit = GraphicsUnit.Millimeter;
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("病案质量     1.甲  2.乙  3.丙   质控医师          质控护士          日期:_____年____月____日", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX, p_intPosY);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX + 20, p_intPosY, 3, 3);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 20, p_intPosY);
                if (m_objDataArr[1] != null)
                    p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 80, p_intPosY);
                if (m_objDataArr[2] != null)
                    p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 110, p_intPosY);
                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX + 140, p_intPosY);
                p_intPosY += (int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;
                p_objGrp.PageUnit = enmOld;



            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }



        #endregion

        #region 100 ^102
        private class clsPrintLine100 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine100()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY, (int)enmRectangleInfo.RightX1, p_intPosY);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 104, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 104, p_intPosY + 41);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 117, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 117, p_intPosY + 41);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+11);

                    p_objGrp.DrawString("手术、操作", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1, p_intPosY + 2);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 22, p_intPosY, (int)enmRectangleInfo.LeftX1 + 22, p_intPosY + 41);
                    p_objGrp.DrawString("手术、操作", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 27, p_intPosY + 2);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 47, p_intPosY, (int)enmRectangleInfo.LeftX1 + 47, p_intPosY + 41);
                    p_objGrp.DrawString("手术、操作名称", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 58, p_intPosY + 4);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 91, p_intPosY, (int)enmRectangleInfo.LeftX1 + 91, p_intPosY + 41);
                    p_objGrp.DrawString("手术、操作医师", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 99, p_intPosY + 1);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 130, p_intPosY, (int)enmRectangleInfo.LeftX1 + 130, p_intPosY + 41);
                    p_objGrp.DrawString("麻醉", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 134, p_intPosY + 2);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 145, p_intPosY, (int)enmRectangleInfo.LeftX1 + 145, p_intPosY + 41);
                    p_objGrp.DrawString("切口愈", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 148, p_intPosY + 2);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 162, p_intPosY, (int)enmRectangleInfo.LeftX1 + 162, p_intPosY + 41);
                    p_objGrp.DrawString("麻醉医师", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 166, p_intPosY + 4);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.RightX1, p_intPosY - 8, (int)enmRectangleInfo.RightX1, p_intPosY + 234);
                }
                //				p_intPosY += 5;
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                    }
                }
            }
        }


        private class clsPrintLine101 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine101()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {

                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 11, (int)enmRectangleInfo.RightX1, p_intPosY + 11);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawString("编码", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 7, p_intPosY + 7);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+80,p_intPosY,(int)enmRectangleInfo.LeftX1+80,p_intPosY+(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawString("日期", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 30, p_intPosY + 7);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+205,p_intPosY,(int)enmRectangleInfo.LeftX1+205,p_intPosY+(int)enmRectangleInfo.RowStep);
                    //				p_objGrp.DrawString("名称",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+260,p_intPosY+5);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+380,p_intPosY,(int)enmRectangleInfo.LeftX1+380,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 91, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 130, p_intPosY + 5);

                    p_objGrp.DrawString("术者", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 94, p_intPosY + 6);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+445,p_intPosY,(int)enmRectangleInfo.LeftX1+445,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("I 助", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 107, p_intPosY + 6);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+510,p_intPosY,(int)enmRectangleInfo.LeftX1+510,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("II 助", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 119, p_intPosY + 6);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+580,p_intPosY,(int)enmRectangleInfo.LeftX1+580,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("方式", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 134, p_intPosY + 7);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+640,p_intPosY,(int)enmRectangleInfo.LeftX1+640,p_intPosY+(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawString("合等级", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 148, p_intPosY + 7);
                    ////				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+710,p_intPosY,(int)enmRectangleInfo.LeftX1+710,p_intPosY+(int)enmRectangleInfo.RowStep);
                    //				p_objGrp.DrawString("医师",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+728,p_intPosY+5);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                }
                p_intPosY += 11;
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                    }
                }
            }
        }



        private class clsPrintLine102 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private clsPrintRichTextContext m_objText2;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            private int m_intCurrentrecord = 0;
            private object[] m_objDataArr = null;

            public clsPrintLine102()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
                m_objText2 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                //				if(m_blnFirstPrint)
                //				{
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY, (int)enmRectangleInfo.RightX1, p_intPosY);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 6, (int)enmRectangleInfo.RightX1, p_intPosY + 6);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 12, (int)enmRectangleInfo.RightX1, p_intPosY + 12);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 18, (int)enmRectangleInfo.RightX1, p_intPosY + 18);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 24, (int)enmRectangleInfo.RightX1, p_intPosY + 24);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 30, (int)enmRectangleInfo.RightX1, p_intPosY + 30);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 117, p_intPosY - 5, (int)enmRectangleInfo.LeftX1 + 117, p_intPosY - 5);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 205, p_intPosY - 5, (int)enmRectangleInfo.LeftX1 + 205, p_intPosY - 5);

                    //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+80,p_intPosY,(int)enmRectangleInfo.LeftX1+80,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+205,p_intPosY,(int)enmRectangleInfo.LeftX1+205,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+380,p_intPosY,(int)enmRectangleInfo.LeftX1+380,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+445,p_intPosY,(int)enmRectangleInfo.LeftX1+445,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    // 					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+510,p_intPosY,(int)enmRectangleInfo.LeftX1+510,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+580,p_intPosY,(int)enmRectangleInfo.LeftX1+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+640,p_intPosY,(int)enmRectangleInfo.LeftX1+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+710,p_intPosY,(int)enmRectangleInfo.LeftX1+710,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    //					m_blnFirstPrint = false;
                }

                if (m_objDataArr != null && m_objDataArr.Length > 0)
                {
                    object[] m_objSubDataArr = (object[])m_objDataArr[0];
                    p_objGrp.DrawString(m_objSubDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 10, p_intPosY + 1);
                    p_objGrp.DrawString(m_objSubDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 22, p_intPosY + 1);
                    p_objGrp.DrawString(m_objSubDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 92, p_intPosY + 1);
                    p_objGrp.DrawString(m_objSubDataArr[4].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 106, p_intPosY + 1);
                    p_objGrp.DrawString(m_objSubDataArr[5].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 119, p_intPosY + 1);
                    p_objGrp.DrawString(m_objSubDataArr[7].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 154, p_intPosY + 1);
                    p_objGrp.DrawString(m_objSubDataArr[8].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 165, p_intPosY + 1);

                    p_objGrp.DrawString(m_objSubDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 50, p_intPosY + 1);
                    p_objGrp.DrawString(m_objSubDataArr[6].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 130, p_intPosY + 1);
                    //						m_objText1.m_mthSetContextWithCorrectBefore(m_objSubDataArr[2].ToString(),"",m_dtmFirstPrintTime);
                    //						m_objText2.m_mthSetContextWithCorrectBefore(m_objSubDataArr[6].ToString(),"",m_dtmFirstPrintTime);
                    m_intCurrentrecord++;

                }
                //				}

                //				m_objText1.m_mthPrintLine(175,(int)enmRectangleInfo.LeftX+203,p_intPosY+5,p_objGrp);
                //				m_objText2.m_mthPrintLine(55,(int)enmRectangleInfo.LeftX+583,p_intPosY+5,p_objGrp);
                //				if(m_objText1.m_BlnHaveNextLine()||m_objText2.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+80,p_intPosY,(int)enmRectangleInfo.LeftX+80,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+205,p_intPosY,(int)enmRectangleInfo.LeftX+205,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+380,p_intPosY,(int)enmRectangleInfo.LeftX+380,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+445,p_intPosY,(int)enmRectangleInfo.LeftX+445,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //           
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+510,p_intPosY,(int)enmRectangleInfo.LeftX+510,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+580,p_intPosY,(int)enmRectangleInfo.LeftX+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //				
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+640,p_intPosY,(int)enmRectangleInfo.LeftX+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+710,p_intPosY,(int)enmRectangleInfo.LeftX+710,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					m_intTimes++;
                //				}
                //				else if(m_objDataArr != null && m_intCurrentrecord < m_objDataArr.Length)
                //				{
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.LeftX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+80,p_intPosY,(int)enmRectangleInfo.LeftX+80,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+205,p_intPosY,(int)enmRectangleInfo.LeftX+205,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+380,p_intPosY,(int)enmRectangleInfo.LeftX+380,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //
                //
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+445,p_intPosY,(int)enmRectangleInfo.LeftX+445,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //           
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+510,p_intPosY,(int)enmRectangleInfo.LeftX+510,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+580,p_intPosY,(int)enmRectangleInfo.LeftX+580,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //				
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+640,p_intPosY,(int)enmRectangleInfo.LeftX+640,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX+710,p_intPosY,(int)enmRectangleInfo.LeftX+710,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //
                //					object [] m_objSubDataArr = (object [])m_objDataArr[m_intCurrentrecord];
                //					p_objGrp.DrawString(m_objSubDataArr[0].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+3,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[1].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+80,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[3].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+383,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[4].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+448,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[5].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+513,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[7].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+650,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[8].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX+720,p_intPosY+5);
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objSubDataArr[2].ToString(),"",m_dtmFirstPrintTime);
                //					m_objText2.m_mthSetContextWithCorrectBefore(m_objSubDataArr[6].ToString(),"",m_dtmFirstPrintTime);
                //					m_intCurrentrecord++;
                //				}
                //				else
                //				{
                m_blnHaveMoreLine = false;
                //					p_intPosY += (int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //				}
            }

            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
                m_objText2.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        #endregion



        private class clsPrintLine103 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine103()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("产科分娩婴儿记录表:", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 32);
                }

                p_intPosY += 36;
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                    }
                }
            }
        }


        #region 104 ~ 109
        private class clsPrintLine104 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine104()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY, (int)enmRectangleInfo.RightX1, p_intPosY);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 8, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 47, p_intPosY + 5);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 58, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 105, p_intPosY + 5);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 22, (int)enmRectangleInfo.RightX1, p_intPosY + 22);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 28, (int)enmRectangleInfo.RightX1, p_intPosY + 28);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 34, (int)enmRectangleInfo.RightX1, p_intPosY + 34);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 40, (int)enmRectangleInfo.RightX1, p_intPosY + 40);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 46, (int)enmRectangleInfo.RightX1, p_intPosY + 46);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY, (int)enmRectangleInfo.LeftX1, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 8, p_intPosY, (int)enmRectangleInfo.LeftX1 + 8, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 23, p_intPosY, (int)enmRectangleInfo.LeftX1 + 23, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 47, p_intPosY, (int)enmRectangleInfo.LeftX1 + 47, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 58, p_intPosY, (int)enmRectangleInfo.LeftX1 + 58, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 82, p_intPosY, (int)enmRectangleInfo.LeftX1 + 82, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 106, p_intPosY, (int)enmRectangleInfo.LeftX1 + 106, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 117, p_intPosY, (int)enmRectangleInfo.LeftX1 + 117, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 151, p_intPosY, (int)enmRectangleInfo.LeftX1 + 151, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 165, p_intPosY, (int)enmRectangleInfo.LeftX1 + 165, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 173, p_intPosY, (int)enmRectangleInfo.LeftX1 + 173, p_intPosY + 46);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 15, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 15, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 23, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 23, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 31, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 31, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 39, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 39, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 66, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 66, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 74, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 74, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 90, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 90, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 98, p_intPosY + 5, (int)enmRectangleInfo.LeftX1 + 98, p_intPosY + 46);
                    p_objGrp.DrawString("婴", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 3);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+30,p_intPosY,(int)enmRectangleInfo.LeftX1+30,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("性别", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 12, p_intPosY + 1);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+90,p_intPosY,(int)enmRectangleInfo.LeftX1+90,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("分娩结果", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 27, p_intPosY + 1);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+180,p_intPosY,(int)enmRectangleInfo.LeftX1+180,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("婴儿", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 49, p_intPosY + 2);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+230,p_intPosY,(int)enmRectangleInfo.LeftX1+230,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("婴儿转归", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 63, p_intPosY + 1);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+320,p_intPosY,(int)enmRectangleInfo.LeftX1+320,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("呼吸", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 90, p_intPosY + 1);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+410,p_intPosY,(int)enmRectangleInfo.LeftX1+410,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+627,p_intPosY,(int)enmRectangleInfo.LeftX1+627,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+697,p_intPosY,(int)enmRectangleInfo.LeftX1+697,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("抢", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 166, p_intPosY + 2);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+727,p_intPosY,(int)enmRectangleInfo.LeftX1+727,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_intPosY +=(int)enmRectangleInfo.RowStep;		
                }
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                    }
                }
            }
        }

        private class clsPrintLine105 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine105()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("儿", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 7);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+30,p_intPosY,(int)enmRectangleInfo.LeftX1+30,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("男", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 9, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+60,p_intPosY,(int)enmRectangleInfo.LeftX1+60,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("女", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 17, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+90,p_intPosY,(int)enmRectangleInfo.LeftX1+90,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+30,p_intPosY,(int)enmRectangleInfo.LeftX1+90,p_intPosY);

                    p_objGrp.DrawString("活", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 25, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+120,p_intPosY,(int)enmRectangleInfo.LeftX1+120,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("死", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 33, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("死", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 40, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+180,p_intPosY,(int)enmRectangleInfo.LeftX1+180,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+90,p_intPosY,(int)enmRectangleInfo.LeftX1+180,p_intPosY);

                    p_objGrp.DrawString("体重", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 49, p_intPosY + 10);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+230,p_intPosY,(int)enmRectangleInfo.LeftX1+230,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("死", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 60, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+260,p_intPosY,(int)enmRectangleInfo.LeftX1+260,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("转", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 68, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+290,p_intPosY,(int)enmRectangleInfo.LeftX1+290,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("出", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 76, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+320,p_intPosY,(int)enmRectangleInfo.LeftX1+320,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+230,p_intPosY,(int)enmRectangleInfo.LeftX1+320,p_intPosY);

                    p_objGrp.DrawString("自", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 84, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+350,p_intPosY,(int)enmRectangleInfo.LeftX1+350,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("I", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 93, p_intPosY + 6);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+380,p_intPosY,(int)enmRectangleInfo.LeftX1+380,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("II", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 100, p_intPosY + 6);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+410,p_intPosY,(int)enmRectangleInfo.LeftX1+410,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+320,p_intPosY,(int)enmRectangleInfo.LeftX1+410,p_intPosY);

                    p_objGrp.DrawString("医院", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 107, p_intPosY + 3);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.RowStep);


                    p_objGrp.DrawString("主要医院感染名称", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 119, p_intPosY + 8);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+627,p_intPosY,(int)enmRectangleInfo.LeftX1+627,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("ICD-10", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 152, p_intPosY + 7);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+697,p_intPosY,(int)enmRectangleInfo.LeftX1+697,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("救", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 166, p_intPosY + 7);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+727,p_intPosY,(int)enmRectangleInfo.LeftX1+727,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("抢救", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 174, p_intPosY + 3);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                }
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                    }
                }
            }
        }

        private class clsPrintLine106 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine106()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("序", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 12);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+30,p_intPosY,(int)enmRectangleInfo.LeftX1+30,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+60,p_intPosY,(int)enmRectangleInfo.LeftX1+60,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+90,p_intPosY,(int)enmRectangleInfo.LeftX1+90,p_intPosY+(int)enmRectangleInfo.RowStep);


                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+120,p_intPosY,(int)enmRectangleInfo.LeftX1+120,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+180,p_intPosY,(int)enmRectangleInfo.LeftX1+180,p_intPosY+(int)enmRectangleInfo.RowStep);


                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+230,p_intPosY,(int)enmRectangleInfo.LeftX1+230,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+260,p_intPosY,(int)enmRectangleInfo.LeftX1+260,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+290,p_intPosY,(int)enmRectangleInfo.LeftX1+290,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+320,p_intPosY,(int)enmRectangleInfo.LeftX1+320,p_intPosY+(int)enmRectangleInfo.RowStep);


                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+350,p_intPosY,(int)enmRectangleInfo.LeftX1+350,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("度", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 92, p_intPosY + 10);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+380,p_intPosY,(int)enmRectangleInfo.LeftX1+380,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("度", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 100, p_intPosY + 10);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+410,p_intPosY,(int)enmRectangleInfo.LeftX1+410,p_intPosY+(int)enmRectangleInfo.RowStep);


                    p_objGrp.DrawString("感染", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 107, p_intPosY + 10);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.RowStep);


                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+627,p_intPosY,(int)enmRectangleInfo.LeftX1+627,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+697,p_intPosY,(int)enmRectangleInfo.LeftX1+697,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("次", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 166, p_intPosY + 12);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+727,p_intPosY,(int)enmRectangleInfo.LeftX1+727,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("成功", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 174, p_intPosY + 10);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                }
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                    }
                }
            }
        }

        private class clsPrintLine107 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine107()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("号", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 18);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+30,p_intPosY,(int)enmRectangleInfo.LeftX1+30,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("性", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 9, p_intPosY + 15);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+60,p_intPosY,(int)enmRectangleInfo.LeftX1+60,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("性", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 17, p_intPosY + 15);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+90,p_intPosY,(int)enmRectangleInfo.LeftX1+90,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("产", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 25, p_intPosY + 15);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+120,p_intPosY,(int)enmRectangleInfo.LeftX1+120,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("产", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 33, p_intPosY + 15);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("胎", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 40, p_intPosY + 15);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+180,p_intPosY,(int)enmRectangleInfo.LeftX1+180,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("（g）", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 48, p_intPosY + 16);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+230,p_intPosY,(int)enmRectangleInfo.LeftX1+230,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("亡", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 60, p_intPosY + 15);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+260,p_intPosY,(int)enmRectangleInfo.LeftX1+260,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("科", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 68, p_intPosY + 15);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+290,p_intPosY,(int)enmRectangleInfo.LeftX1+290,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("院", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 76, p_intPosY + 15);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+320,p_intPosY,(int)enmRectangleInfo.LeftX1+320,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("然", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 84, p_intPosY + 15);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+350,p_intPosY,(int)enmRectangleInfo.LeftX1+350,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("窒", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 92, p_intPosY + 14);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+380,p_intPosY,(int)enmRectangleInfo.LeftX1+380,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("窒", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 100, p_intPosY + 14);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+410,p_intPosY,(int)enmRectangleInfo.LeftX1+410,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("次数", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 107, p_intPosY + 16);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.RowStep);


                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+627,p_intPosY,(int)enmRectangleInfo.LeftX1+627,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+697,p_intPosY,(int)enmRectangleInfo.LeftX1+697,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("数", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 166, p_intPosY + 17);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+727,p_intPosY,(int)enmRectangleInfo.LeftX1+727,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("次数", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 174, p_intPosY + 17);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                }
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                    }
                }
            }
        }

        private class clsPrintLine108 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine108()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+30,p_intPosY,(int)enmRectangleInfo.LeftX1+30,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+60,p_intPosY,(int)enmRectangleInfo.LeftX1+60,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+90,p_intPosY,(int)enmRectangleInfo.LeftX1+90,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+120,p_intPosY,(int)enmRectangleInfo.LeftX1+120,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+180,p_intPosY,(int)enmRectangleInfo.LeftX1+180,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+230,p_intPosY,(int)enmRectangleInfo.LeftX1+230,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+260,p_intPosY,(int)enmRectangleInfo.LeftX1+260,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+290,p_intPosY,(int)enmRectangleInfo.LeftX1+290,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+320,p_intPosY,(int)enmRectangleInfo.LeftX1+320,p_intPosY+(int)enmRectangleInfo.RowStep);

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+350,p_intPosY,(int)enmRectangleInfo.LeftX1+350,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("息", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 92, p_intPosY + 18);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+380,p_intPosY,(int)enmRectangleInfo.LeftX1+380,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("息", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 100, p_intPosY + 18);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+410,p_intPosY,(int)enmRectangleInfo.LeftX1+410,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+627,p_intPosY,(int)enmRectangleInfo.LeftX1+627,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+697,p_intPosY,(int)enmRectangleInfo.LeftX1+697,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+727,p_intPosY,(int)enmRectangleInfo.LeftX1+727,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                }

                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                    }
                }
            }
        }

        private class clsPrintLine109 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            private int m_intCurrentRecord = 0;
            private object[] m_objDataArr = null;
            public clsPrintLine109()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                //				if(m_blnFirstPrint)
                //				{
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+30,p_intPosY,(int)enmRectangleInfo.LeftX1+30,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+60,p_intPosY,(int)enmRectangleInfo.LeftX1+60,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+90,p_intPosY,(int)enmRectangleInfo.LeftX1+90,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+120,p_intPosY,(int)enmRectangleInfo.LeftX1+120,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+180,p_intPosY,(int)enmRectangleInfo.LeftX1+180,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+230,p_intPosY,(int)enmRectangleInfo.LeftX1+230,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+260,p_intPosY,(int)enmRectangleInfo.LeftX1+260,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+290,p_intPosY,(int)enmRectangleInfo.LeftX1+290,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+320,p_intPosY,(int)enmRectangleInfo.LeftX1+320,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+350,p_intPosY,(int)enmRectangleInfo.LeftX1+350,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+380,p_intPosY,(int)enmRectangleInfo.LeftX1+380,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+410,p_intPosY,(int)enmRectangleInfo.LeftX1+410,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+627,p_intPosY,(int)enmRectangleInfo.LeftX1+627,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+697,p_intPosY,(int)enmRectangleInfo.LeftX1+697,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+727,p_intPosY,(int)enmRectangleInfo.LeftX1+727,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                p_objGrp.DrawString("1", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 3, p_intPosY + 23);
                p_objGrp.DrawString("2", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 3, p_intPosY + 29);
                p_objGrp.DrawString("3", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 3, p_intPosY + 35);
                p_objGrp.DrawString("4", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 3, p_intPosY + 41);
                if (m_objDataArr != null && m_objDataArr.Length > 0)
                {
                    object[] m_objSubDataArr = (object[])m_objDataArr[0];
                    //						p_objGrp.DrawString(m_objSubDataArr[0].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+3,p_intPosY+24);

                    p_objGrp.DrawString(m_objSubDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 9, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 17, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 25, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[4].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 33, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[5].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 40, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[6].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 49, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[7].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 60, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[8].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 68, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[9].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 76, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[10].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 84, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[11].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 93, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[12].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 100, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[13].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 108, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[14].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 119, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[15].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 152, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[16].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 166, p_intPosY + 24);
                    p_objGrp.DrawString(m_objSubDataArr[17].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 174, p_intPosY + 24);

                    //						m_objText1.m_mthSetContextWithCorrectBefore(m_objSubDataArr[14].ToString(),"",m_dtmFirstPrintTime);
                    m_intCurrentRecord++;
                }
                m_blnHaveMoreLine = false;
                //					m_blnFirstPrint = false;
                //				}

                //				m_objText1.m_mthPrintLine(167,(int)enmRectangleInfo.LeftX1+463,p_intPosY+5,p_objGrp);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+30,p_intPosY,(int)enmRectangleInfo.LeftX1+30,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+60,p_intPosY,(int)enmRectangleInfo.LeftX1+60,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+90,p_intPosY,(int)enmRectangleInfo.LeftX1+90,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+120,p_intPosY,(int)enmRectangleInfo.LeftX1+120,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+180,p_intPosY,(int)enmRectangleInfo.LeftX1+180,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+230,p_intPosY,(int)enmRectangleInfo.LeftX1+230,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+260,p_intPosY,(int)enmRectangleInfo.LeftX1+260,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+290,p_intPosY,(int)enmRectangleInfo.LeftX1+290,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+320,p_intPosY,(int)enmRectangleInfo.LeftX1+320,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+350,p_intPosY,(int)enmRectangleInfo.LeftX1+350,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+380,p_intPosY,(int)enmRectangleInfo.LeftX1+380,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+410,p_intPosY,(int)enmRectangleInfo.LeftX1+410,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+627,p_intPosY,(int)enmRectangleInfo.LeftX1+627,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+697,p_intPosY,(int)enmRectangleInfo.LeftX1+697,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //				
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+727,p_intPosY,(int)enmRectangleInfo.LeftX1+727,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					m_intTimes++;
                //				}
                //				else if(m_objDataArr != null && m_intCurrentRecord < m_objDataArr.Length)
                //				{
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+30,p_intPosY,(int)enmRectangleInfo.LeftX1+30,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+60,p_intPosY,(int)enmRectangleInfo.LeftX1+60,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+90,p_intPosY,(int)enmRectangleInfo.LeftX1+90,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+120,p_intPosY,(int)enmRectangleInfo.LeftX1+120,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+180,p_intPosY,(int)enmRectangleInfo.LeftX1+180,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+230,p_intPosY,(int)enmRectangleInfo.LeftX1+230,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+260,p_intPosY,(int)enmRectangleInfo.LeftX1+260,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+290,p_intPosY,(int)enmRectangleInfo.LeftX1+290,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+320,p_intPosY,(int)enmRectangleInfo.LeftX1+320,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+350,p_intPosY,(int)enmRectangleInfo.LeftX1+350,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+380,p_intPosY,(int)enmRectangleInfo.LeftX1+380,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+410,p_intPosY,(int)enmRectangleInfo.LeftX1+410,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+627,p_intPosY,(int)enmRectangleInfo.LeftX1+627,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+697,p_intPosY,(int)enmRectangleInfo.LeftX1+697,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+727,p_intPosY,(int)enmRectangleInfo.LeftX1+727,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					object [] m_objSubDataArr = (object [])m_objDataArr[m_intCurrentRecord];
                //					p_objGrp.DrawString(m_objSubDataArr[0].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+3,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[1].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+33,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[2].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+63,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[3].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+93,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[4].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+123,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[5].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+153,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[6].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+183,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[7].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+233,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[8].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+263,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[9].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+293,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[10].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+323,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[11].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+353,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[12].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+383,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[13].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+413,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[15].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+630,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[16].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+700,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[17].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+735,p_intPosY+5);
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objSubDataArr[14].ToString(),"",m_dtmFirstPrintTime);
                //					m_blnHaveMoreLine = true;
                //					m_intCurrentRecord++;
                //				}
                //				else
                //				{
                //					m_blnHaveMoreLine = false;
                //					p_intPosY += (int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX,p_intPosY,(int)enmRectangleInfo.RightX,p_intPosY);
                //				}
            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();

            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }



        #endregion

        private class clsPrintLine110 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine110()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("肿瘤专科病人治疗记录表:", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 50);
                }

                //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                p_intPosY += 55;
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                    }
                }
            }
        }


        private class clsPrintLine111 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Font m_fotCheckFont = new Font("SimSun", 16, FontStyle.Bold);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;
            public clsPrintLine111()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY, (int)enmRectangleInfo.RightX1, p_intPosY);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 6, (int)enmRectangleInfo.RightX1, p_intPosY + 6);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 12, (int)enmRectangleInfo.RightX1, p_intPosY + 12);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 18, (int)enmRectangleInfo.RightX1, p_intPosY + 18);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 24, (int)enmRectangleInfo.RightX1, p_intPosY + 24);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 36, (int)enmRectangleInfo.RightX1, p_intPosY + 36);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 46, (int)enmRectangleInfo.RightX1, p_intPosY + 46);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 52, (int)enmRectangleInfo.RightX1, p_intPosY + 52);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 58, (int)enmRectangleInfo.RightX1, p_intPosY + 58);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 64, (int)enmRectangleInfo.RightX1, p_intPosY + 64);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 66, (int)enmRectangleInfo.RightX1, p_intPosY + 66);

                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY, (int)enmRectangleInfo.LeftX1, p_intPosY + 66);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 22, p_intPosY + 36, (int)enmRectangleInfo.LeftX1 + 22, p_intPosY + 64);//(int)enmRectangleInfo.RowStep);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 130, p_intPosY + 36, (int)enmRectangleInfo.LeftX1 + 130, p_intPosY + 64);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1 + 140, p_intPosY + 36, (int)enmRectangleInfo.LeftX1 + 140, p_intPosY + 64);

                    p_objGrp.DrawString("I. 放疗:方式: 根治性、姑息性、辅助性   程式: 连续、间断、分段  装置: 钴、直加、X线、后装", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 2);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                }

                switch (m_objDataArr[0].ToString())
                {
                    case "0":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 35, p_intPosY);
                        break;
                    case "1":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 50, p_intPosY);
                        break;
                    case "2":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 65, p_intPosY);
                        break;
                    default:
                        break;
                }
                switch (m_objDataArr[1].ToString())
                {
                    case "0":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 93, p_intPosY);
                        break;
                    case "1":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 104, p_intPosY);
                        break;
                    case "2":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 115, p_intPosY);
                        break;
                    default:
                        break;
                }
                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 139, p_intPosY + 1);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 148, p_intPosY + 1);

                p_objGrp.DrawString(m_objDataArr[4].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 159, p_intPosY + 1);

                p_objGrp.DrawString(m_objDataArr[5].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 170, p_intPosY + 1);


                //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }


        private class clsPrintLine112 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Font m_fotCheckFont = new Font("SimSun", 16, FontStyle.Bold);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;

            public clsPrintLine112()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("1. 原发灶（首次、复次） 剂量:   Gy/    次/     天:起止日期:20   年   月   至20   年   月   日", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 7);
                }
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);

                switch (m_objDataArr[0].ToString())
                {
                    case "0":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 24, p_intPosY + 6);
                        break;
                    case "1":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 31, p_intPosY + 6);
                        break;
                    default:
                        break;
                }

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 60, p_intPosY + 7);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 74, p_intPosY + 7);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 88, p_intPosY + 7);

                p_objGrp.DrawString(m_objDataArr[4].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 125, p_intPosY + 7);
                //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine113 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Font m_fotCheckFont = new Font("SimSun", 16, FontStyle.Bold);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;
            public clsPrintLine113()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {



                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("2.区域淋巴结（首次、复次）剂量: Gy/    次/     天:起止日期:20   年   月   至20   年   月   日", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 13);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                }

                switch (m_objDataArr[0].ToString())
                {
                    case "0":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 32, p_intPosY + 12);
                        break;
                    case "1":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 43, p_intPosY + 12);
                        break;
                    default:
                        break;
                }
                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 60, p_intPosY + 13);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 74, p_intPosY + 13);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 88, p_intPosY + 13);

                p_objGrp.DrawString(m_objDataArr[4].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 125, p_intPosY + 13);

                //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine114 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Font m_fotCheckFont = new Font("SimSun", 16, FontStyle.Bold);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;
            public clsPrintLine114()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {


                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("3.         转移灶剂量:          Gy/    次/     天:起止日期:20   年   月   至20   年   月   日", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 19);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 60, p_intPosY + 19);

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 74, p_intPosY + 19);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 88, p_intPosY + 19);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 125, p_intPosY + 19);

                //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                //
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine115 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 9);
            private Font m_fotCheckFont = new Font("SimSun", 16, FontStyle.Bold);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;
            public clsPrintLine115()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("II.化疗:方式:根治性、姑息性、新辅助性、辅助性、新药  化疗方法:全化、半化、A插管、胸腔注、腹腔注、髓注、其他", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 26);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                }

                switch (m_objDataArr[0].ToString())
                {
                    case "0":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 28, p_intPosY + 25);
                        break;
                    case "1":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 41, p_intPosY + 25);
                        break;
                    case "2":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 56, p_intPosY + 25);
                        break;
                    case "3":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 70, p_intPosY + 25);
                        break;
                    case "4":
                        p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 81, p_intPosY + 25);
                        break;
                    default:
                        break;
                }
                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 108, p_intPosY + 26);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 118, p_intPosY + 26);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 129, p_intPosY + 26);

                p_objGrp.DrawString(m_objDataArr[4].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 140, p_intPosY + 26);


                //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine116 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 9);
            private Font m_fotCheckFont = new Font("SimSun", 16, FontStyle.Bold);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;
            public clsPrintLine116()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {

                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("         试用、其他", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 3, p_intPosY + 31);
                }

                //		p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 157, p_intPosY + 26);

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 167, p_intPosY + 26);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 178, p_intPosY + 26);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 28, p_intPosY + 31);
                //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;
            }
            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        #region 117 ~ 118
        private class clsPrintLine117 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            public clsPrintLine117()
            {
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.RowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("日期", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 7, p_intPosY + 40);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("药物名称（剂量）", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 62, p_intPosY + 40);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("疗程", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 131, p_intPosY + 40);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+500,p_intPosY,(int)enmRectangleInfo.LeftX1+500,p_intPosY+(int)enmRectangleInfo.RowStep);

                    p_objGrp.DrawString("疗效（消失、显效、好转、", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 142, p_intPosY + 37);
                    p_objGrp.DrawString("不变、恶化、未定）", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 142, p_intPosY + 41);
                    //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.RowStep);

                    //				p_intPosY +=(int)enmRectangleInfo.RowStep;
                }
                m_blnHaveMoreLine = false;

            }


            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {

                    }
                }
            }
        }

        private class clsPrintLine118 : clsPrintLineBase
        {
            private clsPrintRichTextContext m_objText1;
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Font m_fotCheckFont = new Font("SimSun", 16, FontStyle.Bold);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            //			private bool m_blnFirstPrint = true;
            //			private int m_intTimes = 0;
            private object[] m_objDataArr = null;
            private int m_intCurrentRecord = 0;
            public clsPrintLine118()
            {
                m_objText1 = new clsPrintRichTextContext(Color.Black, new Font("SimSun", 10.5f));
            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                //				if(m_blnFirstPrint)
                //				{

                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);

                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+500,p_intPosY,(int)enmRectangleInfo.LeftX1+500,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("1.", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1, p_intPosY + 47);
                    p_objGrp.DrawString("2.", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1, p_intPosY + 53);
                    p_objGrp.DrawString("3.", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1, p_intPosY + 59);

                    p_objGrp.DrawString("CR、PR、MR、S、P、NA", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 143, p_intPosY + 47);
                    p_objGrp.DrawString("CR、PR、MR、S、P、NA", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 143, p_intPosY + 53);
                    p_objGrp.DrawString("CR、PR、MR、S、P、NA", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 143, p_intPosY + 59);
                }

                if (m_objDataArr != null && m_objDataArr.Length > 0)
                {
                    object[] m_objSubDataArr = (object[])m_objDataArr[0];
                    p_objGrp.DrawString(m_objSubDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 3, p_intPosY + 47);
                    p_objGrp.DrawString(m_objSubDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 60, p_intPosY + 47);
                    p_objGrp.DrawString(m_objSubDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 133, p_intPosY + 47);
                    //						p_objGrp.DrawString("CR、PR、MR、S、P、NA",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+143,p_intPosY+47);

                    if (m_objSubDataArr[3] != null)
                        switch (m_objSubDataArr[3].ToString())
                        {
                            case "3":
                                p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 141, p_intPosY + 47);
                                break;
                            case "4":
                                p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 150, p_intPosY + 47);
                                break;
                            case "5":
                                p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 158, p_intPosY + 47);
                                break;
                            case "6":
                                p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 166, p_intPosY + 47);
                                break;
                            case "7":
                                p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 172, p_intPosY + 47);
                                break;
                            case "8":
                                p_objGrp.DrawString("√", m_fotCheckFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 178, p_intPosY + 47);
                                break;
                            default:
                                break;
                        }
                    //						p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                    m_intCurrentRecord++;
                    //						m_objText1.m_mthSetContextWithCorrectBefore(m_objSubDataArr[1].ToString(),"",m_dtmFirstPrintTime);
                }
                //					m_blnFirstPrint = false;


                //				}
                //
                //				m_objText1.m_mthPrintLine(310,(int)enmRectangleInfo.LeftX1+153,p_intPosY+5,p_objGrp);
                //				if(m_objText1.m_BlnHaveNextLine())
                //				{
                //					m_blnHaveMoreLine = true;
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //				
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //				
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+500,p_intPosY,(int)enmRectangleInfo.LeftX1+500,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //				
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					m_intTimes++;
                //				}
                //				else if(m_objDataArr != null && m_intCurrentRecord < m_objDataArr.Length)
                //				{
                //					p_intPosY +=(int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.LeftX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+150,p_intPosY,(int)enmRectangleInfo.LeftX1+150,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+460,p_intPosY,(int)enmRectangleInfo.LeftX1+460,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1+500,p_intPosY,(int)enmRectangleInfo.LeftX1+500,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //
                //					object [] m_objSubDataArr = (object [])m_objDataArr[m_intCurrentRecord];
                //					p_objGrp.DrawString(m_objSubDataArr[0].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+3,p_intPosY+5);
                //					p_objGrp.DrawString(m_objSubDataArr[2].ToString(),m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+463,p_intPosY+5);
                //					p_objGrp.DrawString(" CR、 PR、 MR、 S、 P、 NA",m_fotPrintFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+503,p_intPosY+5);
                //					
                //					if(m_objSubDataArr[3]!=null)
                //					switch(m_objSubDataArr[3].ToString())
                //					{
                //						case "3":
                //							p_objGrp.DrawString("√",m_fotCheckFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+520,p_intPosY+5);
                //							break;
                //						case "4":
                //							p_objGrp.DrawString("√",m_fotCheckFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+550,p_intPosY+5);
                //							break;
                //						case "5":
                //							p_objGrp.DrawString("√",m_fotCheckFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+590,p_intPosY+5);
                //							break;
                //						case "6":
                //							p_objGrp.DrawString("√",m_fotCheckFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+620,p_intPosY+5);
                //							break;
                //						case "7":
                //							p_objGrp.DrawString("√",m_fotCheckFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+650,p_intPosY+5);
                //							break;
                //						case "8":
                //							p_objGrp.DrawString("√",m_fotCheckFont,Brushes.Black,(int)enmRectangleInfo.LeftX1+680,p_intPosY+5);
                //							break;
                //						default:
                //							break;
                //					}
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.RightX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY+(int)enmRectangleInfo.SmallRowStep);
                //					m_objText1.m_mthSetContextWithCorrectBefore(m_objSubDataArr[1].ToString(),"",m_dtmFirstPrintTime);
                //					m_intCurrentRecord++;
                //					m_blnHaveMoreLine =true;
                //				}
                //				else
                //				{
                m_blnHaveMoreLine = false;
                p_intPosY += 65;
                //					p_intPosY += (int)enmRectangleInfo.SmallRowStep;
                //					p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);
                //				
                //				}

            }


            public override void m_mthReset()
            {
                //				m_intTimes = 0;
                m_blnHaveMoreLine = true;
                //				m_blnFirstPrint = true;
                m_objText1.m_mthRestartPrint();
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        #endregion

        private class clsPrintLine119 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;

            public clsPrintLine119()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("住院费用总计（元）:          床费       护理费        西药        中成药         中草药", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 3);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 40, p_intPosY + 3);

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 68, p_intPosY + 3);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 93, p_intPosY + 3);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 118, p_intPosY + 3);

                p_objGrp.DrawString(m_objDataArr[4].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 145, p_intPosY + 3);

                p_objGrp.DrawString(m_objDataArr[5].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 174, p_intPosY + 3);

                //				p_intPosY += (int)enmRectangleInfo.RowStep;


                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine120 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;

            public clsPrintLine120()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("放射__________化验__________输氧__________输血__________诊疗__________手术__________接生_________", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 8);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 13, p_intPosY + 8);

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 39, p_intPosY + 8);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 65, p_intPosY + 8);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 92, p_intPosY + 8);

                p_objGrp.DrawString(m_objDataArr[4].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 119, p_intPosY + 8);

                p_objGrp.DrawString(m_objDataArr[5].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 145, p_intPosY + 8);

                p_objGrp.DrawString(m_objDataArr[6].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 170, p_intPosY + 8);

                //				p_intPosY += (int)enmRectangleInfo.RowStep;


                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine121 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;

            public clsPrintLine121()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("检查__________麻醉__________婴儿费________陪床费________其他__________、 __________、 __________", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 2, p_intPosY + 13);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 13, p_intPosY + 13);

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 39, p_intPosY + 13);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 70, p_intPosY + 13);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 95, p_intPosY + 13);

                p_objGrp.DrawString(m_objDataArr[4].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 119, p_intPosY + 13);

                p_objGrp.DrawString(m_objDataArr[5].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 145, p_intPosY + 13);

                p_objGrp.DrawString(m_objDataArr[6].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 168, p_intPosY + 13);

                //				p_intPosY += (int)enmRectangleInfo.RowStep;


                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine122 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;

            public clsPrintLine122()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("尸检      1.是 2.否              手术、治疗、检查、诊断为本院第一例        1.是 2.否", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 5, p_intPosY + 19);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX1 + 16, p_intPosY + 19, 3, 3);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX1 + 134, p_intPosY + 19, 3, 3);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 16, p_intPosY + 19);
                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 134, p_intPosY + 19);


                //				p_intPosY += (int)enmRectangleInfo.RowStep;
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 24, (int)enmRectangleInfo.RightX1, p_intPosY + 24);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 30, (int)enmRectangleInfo.RightX1, p_intPosY + 30);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 36, (int)enmRectangleInfo.RightX1, p_intPosY + 36);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 42, (int)enmRectangleInfo.RightX1, p_intPosY + 42);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 48, (int)enmRectangleInfo.RightX1, p_intPosY + 48);
                    p_objGrp.DrawLine(m_pen, (int)enmRectangleInfo.LeftX1, p_intPosY + 54, (int)enmRectangleInfo.RightX1, p_intPosY + 54);
                }

                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine123 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;

            public clsPrintLine123()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("随诊      1.是 2.否          随诊期限        周    月    年        示教病例          1.是 2.否", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 5, p_intPosY + 25);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX1 + 16, p_intPosY + 25, 3, 3);
                    p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 16, p_intPosY + 25);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX1 + 153, p_intPosY + 25, 3, 3);
                }

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 85, p_intPosY + 25);
                //				string m_strYear = DateTime.Parse(m_objDataArr[1]).Year;

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 153, p_intPosY + 25);


                //				p_intPosY += (int)enmRectangleInfo.RowStep;
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);

                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine124 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;

            public clsPrintLine124()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("血型   1.A  2.B 3.AB 4.O 5.其他               Rh     1.阴  2.阳    输血反应         1.是 2.否", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 5, p_intPosY + 31);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX1 + 16, p_intPosY + 31, 3, 3);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX1 + 153, p_intPosY + 31, 3, 3);
                    p_objGrp.DrawRectangle(m_pen, (int)enmRectangleInfo.LeftX1 + 99, p_intPosY + 31, 3, 3);
                }
                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 16, p_intPosY + 31);

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 99, p_intPosY + 31);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 153, p_intPosY + 31);


                //				p_intPosY += (int)enmRectangleInfo.RowStep;
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);

                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine125 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;

            public clsPrintLine125()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("输血品种 1.红细胞      单位  2.血小板     袋   3.血浆        ml 4.全血       ml 5.其他    ml", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 5, p_intPosY + 37);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 41, p_intPosY + 37);

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 79, p_intPosY + 37);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 112, p_intPosY + 37);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 144, p_intPosY + 37);

                p_objGrp.DrawString(m_objDataArr[4].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 172, p_intPosY + 37);



                //				p_intPosY += (int)enmRectangleInfo.RowStep;
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);

                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine126 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;
            public clsPrintLine126()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString(" 院际会诊    次    远程会诊     次  护理等级 1.特级    小时  2.I级    日 3.II级   日 4.III级  日", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1, p_intPosY + 43);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 20, p_intPosY + 43);

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 54, p_intPosY + 43);

                p_objGrp.DrawString(m_objDataArr[2].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 99, p_intPosY + 43);

                p_objGrp.DrawString(m_objDataArr[3].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 127, p_intPosY + 43);

                p_objGrp.DrawString(m_objDataArr[4].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 152, p_intPosY + 43);

                p_objGrp.DrawString(m_objDataArr[5].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 176, p_intPosY + 43);



                //				p_intPosY += (int)enmRectangleInfo.RowStep;
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);

                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine127 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            private Pen m_pen = new Pen(Brushes.Black, 0.1f);
            private object[] m_objDataArr = null;
            public clsPrintLine127()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("5. 重症监护      小时   6. 特殊护理     日", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 1, p_intPosY + 49);
                }

                p_objGrp.DrawString(m_objDataArr[0].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 26, p_intPosY + 49);

                p_objGrp.DrawString(m_objDataArr[1].ToString(), m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 71, p_intPosY + 49);


                //				p_intPosY += (int)enmRectangleInfo.RowStep;
                //				p_objGrp.DrawLine(m_pen,(int)enmRectangleInfo.LeftX1,p_intPosY,(int)enmRectangleInfo.RightX1,p_intPosY);

                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {
                        m_objDataArr = (object[])value;
                    }
                }
            }
        }

        private class clsPrintLine128 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            public clsPrintLine128()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("说明: 医疗付款方式 1、社会基本保险（补充保险、特大病保险）2、商业保险 3、自费保险 4、公费医疗 5、 ", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 1, p_intPosY + 55);
                }

                //				p_intPosY += (int)enmRectangleInfo.RowStep;
                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {

                    }
                }
            }
        }

        private class clsPrintLine129 : clsPrintLineBase
        {
            private Font m_fotPrintFont = new Font("SimSun", 10.5f);
            public clsPrintLine129()
            {

            }

            public override void m_mthPrintNextLine(ref int p_intPosY, System.Drawing.Graphics p_objGrp, System.Drawing.Font p_fntNormalText)
            {
                if (frmInHospitalMainRecord_2009.s_blnPrintTitle)
                {
                    p_objGrp.DrawString("大病统筹 6、其他   住院费用总计   凡可有计算机提供住院费用清单的，住院首页中可不填 ", m_fotPrintFont, Brushes.Black, (int)enmRectangleInfo.LeftX1 + 13, p_intPosY + 61);
                }

                //				p_intPosY += (int)enmRectangleInfo.RowStep;

                m_blnHaveMoreLine = false;
            }

            public override void m_mthReset()
            {
                m_blnHaveMoreLine = true;
            }
            public override object m_ObjPrintLineInfo
            {
                get
                {
                    return m_objPrintLineInfo;
                }
                set
                {
                    if (value != null)
                    {

                    }
                }
            }
        }

        #endregion

        #region ctlRichTextBox的双划线、其他属性设置
        /// <summary>
        /// 设置双划线
        /// </summary>
        protected void m_mthSetRichTextBoxDoubleStrike()
        {
            //获取RichTextBox        
            //ctlRichTextBox objRichTextBox = (ctlRichTextBox)m_m_cmuRichTextBoxMenu.SourceControl;

            //objRichTextBox.m_mthSelectionDoubleStrikeThough(true);
            if (m_txtFocusedRichTextBox != null)
                m_txtFocusedRichTextBox.m_mthSelectionDoubleStrikeThough(true);
        }

        /// <summary>
        /// 设置RichTextBox属性。（右键菜单、用户姓名、用户ID、颜色等）。
        /// </summary>
        /// <param name="p_objRichTextBox"></param>
        protected void m_mthSetRichTextBoxAttrib(com.digitalwave.controls.ctlRichTextBox p_objRichTextBox)
        {
            //m_objBorderTool.m_mthChangedControlsArrayBorder(new Control[]{	p_objRichTextBox });
            //设置右键菜单			
            //			p_objRichTextBox.ContextMenu=m_cmuRichTextBoxMenu;
            p_objRichTextBox.GotFocus += new EventHandler(m_txtRichTextBox_GotFocus);

            //设置其他属性			
            p_objRichTextBox.m_StrUserID = MDIParent.OperatorID;
            p_objRichTextBox.m_StrUserName = MDIParent.strOperatorName;
            p_objRichTextBox.m_ClrOldPartInsertText = Color.Black;
            p_objRichTextBox.m_ClrDST = Color.Red;
            //p_objRichTextBox.m_BlnCanModifyLast = true;
        }

        protected void m_mthSetRichTextBoxAttribInControl(Control p_ctlControl)
        {
            if (p_ctlControl.GetType().Name == "ctlRichTextBox")
            {
                m_mthSetRichTextBoxAttrib((com.digitalwave.controls.ctlRichTextBox)p_ctlControl);
            }

            if (p_ctlControl.HasChildren && p_ctlControl.GetType().Name != "DataGrid")
            {
                foreach (Control subcontrol in p_ctlControl.Controls)
                {
                    m_mthSetRichTextBoxAttribInControl(subcontrol);
                }
            }
        }
        private void mniDoubleStrikeOutDelete_Click(object sender, System.EventArgs e)
        {
            m_mthSetRichTextBoxDoubleStrike();
        }
        private com.digitalwave.controls.ctlRichTextBox m_txtFocusedRichTextBox = null;//存放当前获得焦点的RichTextBox
        private void m_txtRichTextBox_GotFocus(object sender, System.EventArgs e)
        {
            m_txtFocusedRichTextBox = ((com.digitalwave.controls.ctlRichTextBox)(sender));
        }

        /// <summary>
        /// 设置窗体中控件输入文本的颜色
        /// </summary>
        /// <param name="p_ctlControl"></param>
        /// <param name="p_clrColor"></param>
        private void m_mthSetRichTextModifyColor(Control p_ctlControl, System.Drawing.Color p_clrColor)
        {
            #region 设置控件输入文本的颜色,Jacky-2003-3-24
            string strTypeName = p_ctlControl.GetType().Name;
            if (strTypeName == "ctlRichTextBox")
                ((com.digitalwave.controls.ctlRichTextBox)p_ctlControl).m_ClrOldPartInsertText = p_clrColor;

            if (p_ctlControl.HasChildren && strTypeName != "DataGrid")
            {
                foreach (Control subcontrol in p_ctlControl.Controls)
                {
                    m_mthSetRichTextModifyColor(subcontrol, p_clrColor);
                }
            }
            #endregion
        }


        private void m_mthSetRichTextCanModifyLast(Control p_ctlControl, bool p_blnCanModifyLast)
        {
            #region 设置控件输入文本的是否最后修改,Jacky-2003-3-24
            string strTypeName = p_ctlControl.GetType().Name;
            if (strTypeName == "ctlRichTextBox")
            {
                ((com.digitalwave.controls.ctlRichTextBox)p_ctlControl).m_BlnCanModifyLast = p_blnCanModifyLast;
            }

            if (p_ctlControl.HasChildren && strTypeName != "DataGrid")
            {
                foreach (Control subcontrol in p_ctlControl.Controls)
                {
                    m_mthSetRichTextCanModifyLast(subcontrol, p_blnCanModifyLast);
                }
            }
            #endregion
        }

        /// <summary>
        /// 设置是否控制修改（修改留痕迹）。
        /// </summary>
        /// <param name="p_objRecordContent"></param>
        /// <param name="p_blnReset"></param>
        protected void m_mthSetModifyControl(string p_strCreateUserID,
            bool p_blnReset)
        {
            //根据书写规范设置具体窗体的书写控制，由子窗体重载实现
            if (p_blnReset || m_blnGetCanModifyLast(p_strCreateUserID))
            {
                m_mthSetRichTextModifyColor(this, clsHRPColor.s_ClrInputFore);
                m_mthSetRichTextCanModifyLast(this, true);
            }
            else if (p_strCreateUserID != null)
            {
                m_mthSetRichTextModifyColor(this, Color.Red);
                m_mthSetRichTextCanModifyLast(this, m_blnGetCanModifyLast(p_strCreateUserID));
            }
        }

        private bool m_blnGetCanModifyLast(string p_strCreateUserID)
        {
            if (p_strCreateUserID != null && p_strCreateUserID.Trim() == MDIParent.OperatorID.Trim())
                return true;
            else
                return false;
        }
        #endregion ctlRichTextBox的双划线、其他属性设置


        /// <summary>
        /// 获取当前病人的作废内容
        /// </summary>
        /// <param name="p_dtmRecordDate">记录日期</param>
        /// <param name="p_intFormID">窗体ID</param>
        protected override void m_mthGetDeactiveContent(DateTime p_dtmRecordDate, int p_intFormID)
        {
            m_strOpenDate = p_dtmRecordDate.ToString("yyyy-MM-dd HH:mm:ss");
            m_mthSetPatientCurrentInHospitalDeptInfo();

            //如果选中的是根节点，不显示删除记录。只有选中哪个入院日期才会显示。
            if (m_ObjCurrentEmrPatientSession == null || m_ObjCurrentEmrPatientSession.m_dtmEMRInpatientDate == DateTime.MinValue)
            {
                clsPublicFunction.ShowInformationMessageBox("请先选择入院日期！");
                return;
            }
            m_mthDiaplayDeletedDetail(m_ObjCurrentEmrPatientSession.m_strEMRInpatientId, m_ObjCurrentEmrPatientSession.m_dtmEMRInpatientDate.ToString("yyyy-MM-dd HH:mm:ss"), m_strOpenDate);
        }

        #region 审核
        private string m_strCurrentOpenDate = "";

        protected override string m_StrCurrentOpenDate
        {
            get
            {
                if (m_ObjCurrentEmrPatientSession == null || m_ObjCurrentEmrPatientSession.m_dtmEMRInpatientDate == DateTime.MinValue)
                {
                    clsPublicFunction.ShowInformationMessageBox("请选择入院时间！");
                    return "";
                }
                if (m_objCollection == null || m_objCollection.m_objMain == null)
                {
                    return "";
                }
                return m_objCollection.m_objMain.m_strOpenDate;
            }
        }

        protected override bool m_BlnCanApprove
        {
            get
            {
                return true;
            }
        }
        #endregion

        //private DataGridCell m_PreOtherDiagnosisCell = new DataGridCell(-1,-1);
        //private void dtgOtherDiagnosis_CurrentCellChanged(object sender, System.EventArgs e)
        //{
        //    if(m_PreOtherDiagnosisCell.ColumnNumber >= 1 && m_PreOtherDiagnosisCell.ColumnNumber <= 5 && m_PreOtherDiagnosisCell.RowNumber < m_dtbOtherDiagnosis.Rows.Count)
        //    {
        //        object [] objValue = m_dtbOtherDiagnosis.Rows[m_PreOtherDiagnosisCell.RowNumber].ItemArray;

        //        bool blnValue = (bool)objValue[m_PreOtherDiagnosisCell.ColumnNumber];

        //        if(blnValue == true)
        //        {
        //            for(int i=1;i<=5;i++)
        //            {
        //                if(i != m_PreOtherDiagnosisCell.ColumnNumber)
        //                    objValue[i] = false;
        //            }

        //            m_dtbOtherDiagnosis.Rows[m_PreOtherDiagnosisCell.RowNumber].ItemArray = objValue;
        //        }
        //    }

        //    m_PreOtherDiagnosisCell = dtgOtherDiagnosis.CurrentCell;
        //}

        /// <summary>
        /// 直接套打
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void m_cmdFillPrint_Click(object sender, System.EventArgs e)
        {
            objPrintTool = new clsInHospitalMainRecordPrintTool(false);
            objPrintTool.m_mthInitPrintTool(null);
            if (m_objBaseCurrentPatient == null || m_ObjCurrentEmrPatientSession == null)
                objPrintTool.m_mthSetPrintInfo(m_objBaseCurrentPatient, DateTime.MinValue, DateTime.MinValue);
            else
                objPrintTool.m_mthSetPrintInfo(m_objBaseCurrentPatient, m_ObjLastEmrPatientSession.m_dtmEMRInpatientDate, DateTime.MinValue);

            objPrintTool.m_mthInitPrintContent();

            m_pdcPrintDocument.Print();
        }

        #region Jump Control
        protected override void m_mthInitJump(clsJumpControl p_objJump)
        {
            p_objJump = new clsJumpControl(this, Keys.Enter);
        }
        #endregion

        #region 出生地
        private void m_cboProvince_evtAddItem(object sender, System.EventArgs e)
        {
            if (m_cboProvince.Text.Trim() == "")
                return;
            string strDistrict = m_cboProvince.Text;
            if (strDistrict.Trim() != "")
            {
                m_objDomain.m_lngAddDistrict(strDistrict, "0", "1");
            }
            m_mthGetDistrict("0", ref m_cboProvince);
        }

        private void m_cboProvince_evtDelItem(object sender, System.EventArgs e)
        {
            return;
        }

        private void m_cboProvince_evtModifyItem(object sender, System.EventArgs e)
        {
            if (m_cboProvince.Text.Trim() == "")
                return;
            string strDistrict = m_cboProvince.Text;
            string strDisID = ((clsDistrict)m_cboProvince.SelectedItem).m_strDisID;
            if (strDistrict.Trim() != "")
            {
                m_objDomain.m_lngModifyDistrict(strDistrict, strDisID);
            }
        }

        private void m_cboCity_evtAddItem(object sender, System.EventArgs e)
        {
            if (m_cboProvince.Text.Trim() == "" || m_cboProvince.SelectedItem == null)
            {
                MDIParent.ShowInformationMessageBox("请先选择一个省份！");
                return;
            }
            string strDistrict = m_cboCity.Text;
            string strParentID = ((clsDistrict)m_cboProvince.SelectedItem).m_strDisID;

            if (strDistrict.Trim() != "")
            {
                m_objDomain.m_lngAddDistrict(strDistrict, strParentID, "2");
            }
            m_mthGetDistrict(((clsDistrict)m_cboProvince.SelectedItem).m_strDisID, ref m_cboCity);
        }

        private void m_cboCity_evtDelItem(object sender, System.EventArgs e)
        {
            return;
        }

        private void m_cboCity_evtModifyItem(object sender, System.EventArgs e)
        {
            if (m_cboProvince.Text.Trim() == "" || m_cboProvince.SelectedItem == null)
            {
                MDIParent.ShowInformationMessageBox("请先选择一个省份！");
                return;
            }
            string strDistrict = m_cboCity.Text;
            string strDisID = ((clsDistrict)m_cboCity.SelectedItem).m_strDisID;

            if (strDistrict.Trim() != "")
            {
                m_objDomain.m_lngModifyDistrict(strDistrict, strDisID);
            }
        }

        private void m_cboCounty_evtAddItem(object sender, System.EventArgs e)
        {
            if (m_cboCity.Text.Trim() == "" || m_cboCity.SelectedItem == null)
            {
                MDIParent.ShowInformationMessageBox("请先选择一个市！");
                return;
            }
            string strDistrict = m_cboCounty.Text;
            string strParentID = ((clsDistrict)m_cboCity.SelectedItem).m_strDisID;

            if (strDistrict.Trim() != "")
            {
                m_objDomain.m_lngAddDistrict(strDistrict, strParentID, "3");
            }
            m_mthGetDistrict(((clsDistrict)m_cboCity.SelectedItem).m_strDisID, ref m_cboCounty);
        }

        private void m_cboCounty_evtDelItem(object sender, System.EventArgs e)
        {
            return;
        }

        private void m_cboCounty_evtModifyItem(object sender, System.EventArgs e)
        {
            if (m_cboCity.Text.Trim() == "" || m_cboCity.SelectedItem == null)
            {
                MDIParent.ShowInformationMessageBox("请先选择一个市！");
                return;
            }
            string strDistrict = m_cboCounty.Text;
            string strDisID = ((clsDistrict)m_cboCounty.SelectedItem).m_strDisID;

            if (strDistrict.Trim() != "")
            {
                m_objDomain.m_lngModifyDistrict(strDistrict, strDisID);
            }
        }

        /// <summary>
        /// 获取出生地名
        /// </summary>
        /// <param name="strParentID">父类ID</param>
        private void m_mthGetDistrict(string strParentID, ref ctlComboBox m_ctlComBox)
        {
            DataTable dtResult = new DataTable();
            long lngRes = m_objDomain.m_lngGetDistrict(strParentID, ref dtResult);
            m_ctlComBox.ClearItem();
            m_ctlComBox.Text = "";
            m_ctlComBox.SelectedIndex = -1;

            if (lngRes > 0 && dtResult.Rows.Count > 0)
            {
                for (int i = 0; i < dtResult.Rows.Count; i++)
                {
                    clsDistrict objDis = new clsDistrict();
                    objDis.m_strDisID = dtResult.Rows[i]["ID_INT"].ToString();
                    objDis.m_strDistrict = dtResult.Rows[i]["NAME_CHR"].ToString();

                    m_ctlComBox.AddItem(objDis);
                }
            }
        }

        private void m_cboProvince_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            m_mthGetDistrict(((clsDistrict)m_cboProvince.SelectedItem).m_strDisID, ref m_cboCity);
            if (m_cboCity.GetItemsCount() > 0)
                m_cboCity.SelectedIndex = 0;
        }

        private void m_cboCity_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            m_mthGetDistrict(((clsDistrict)m_cboCity.SelectedItem).m_strDisID, ref m_cboCounty);
            if (m_cboCounty.GetItemsCount() > 0)
                m_cboCounty.SelectedIndex = 0;
        }

        private void m_cboProvince_DropDown(object sender, System.EventArgs e)
        {
            m_mthGetDistrict("0", ref m_cboProvince);
        }

        private void m_cboCity_evtTextChanged(object sender, System.EventArgs e)
        {
            if (m_cboCity.Text.Trim() == "")
            {
                m_cboCounty.ClearItem();
                m_cboCounty.Text = "";
            }
        }


        private void m_cboCity_DropDown(object sender, System.EventArgs e)
        {
            string strParentID = "";
            if (m_cboProvince.SelectedItem == null)
            {
                return;
            }
            long res = m_objDomain.m_lngGetIDByName(m_cboProvince.Text, "1", "0", out strParentID);
            if (res > 0)
                m_mthGetDistrict(strParentID, ref m_cboCity);
        }

        private void m_cboCounty_DropDown(object sender, System.EventArgs e)
        {
            string strParentID = "";
            if (m_cboCity.SelectedItem == null || m_cboProvince.SelectedItem == null)
            {
                return;
            }

            long res = m_objDomain.m_lngGetIDByName(m_cboCity.Text, "2", ((clsDistrict)m_cboProvince.SelectedItem).m_strDisID, out strParentID);
            if (res > 0)
                m_mthGetDistrict(strParentID, ref m_cboCounty);
        }


        private void m_cboProvince_evtTextChanged(object sender, System.EventArgs e)
        {
            if (m_cboProvince.Text.Trim() == "")
            {
                m_cboCity.ClearItem();
                m_cboCity.Text = "";
            }
        }
        #endregion

        protected override void m_mthAssociateComboBoxItemEvent(Control p_ctlParent)
        {
        }

        protected override void m_mthAfterSuccessfulSave()
        {
            m_mthSavePatientInfo();
        }

        #region 保存病人基本信息
        /// <summary>
        /// 保存病人基本信息
        /// </summary>
        private void m_mthSavePatientInfo()
        {
            if (m_objBaseCurrentPatient == null)
            {
                return;
            }

            clsPeopleInfo objPeopleInfo = new clsPeopleInfo();
            objPeopleInfo.m_StrMarried = m_txtMarried.Text.Trim();
            objPeopleInfo.m_DtmBirth = m_dtpBirthDate.Value.Date;
            objPeopleInfo.m_StrNationality = m_txtNationality.Text.Trim();
            objPeopleInfo.m_StrNativePlace = m_txtCountry.Text.Trim();
            objPeopleInfo.m_StrOccupation = m_txtOccupation.Text.Trim();
            objPeopleInfo.m_StrNation = m_txtNation.Text.Trim();
            objPeopleInfo.m_StrHomePhone = m_txtHomePhone.Text.Trim();
            objPeopleInfo.m_StrIDCard = m_txtIDCard.Text.Trim();
            objPeopleInfo.m_StrOffice_name = m_txtCompanyName.Text.Trim();
            objPeopleInfo.m_StrOfficeAddress = m_txtOfficeAddress.Text.Trim();
            objPeopleInfo.m_StrOfficePC = m_txtOfficePC.Text.Trim();
            objPeopleInfo.m_StrHomeplace = m_txtHomeAddress.Text.Trim();
            objPeopleInfo.m_StrHomePC = m_txtHomePC.Text.Trim();
            objPeopleInfo.m_StrLinkManLastName = m_txtContactMan.Text.Trim();
            objPeopleInfo.m_StrPatientRelation = m_txtRelation.Text.Trim();
            objPeopleInfo.m_StrLinkManAddress = m_txtContactManAddress.Text.Trim();
            objPeopleInfo.m_StrLinkManPC = m_txtLinkManzipcode.Text.Trim();
            objPeopleInfo.m_StrLinkManPhone = m_txtContactManPhone.Text.Trim();
            objPeopleInfo.m_StrBirthPlace = m_cboProvince.Text + m_cboCity.Text + m_cboCounty.Text;


            try
            {
                long lngRes = m_objDomain.m_lngSavePatientInfo(m_ObjCurrentEmrPatientSession.m_strPatientID, m_ObjCurrentEmrPatientSession.m_strRegisterId, objPeopleInfo);
            }
            catch (Exception Ex)
            {
                string strEx = Ex.Message;
            }
        }
        #endregion

        #region 查询ICD10
        private void m_lsvICD_10_DoubleClick(object sender, System.EventArgs e)
        {
            m_mthSetContentToMainForm(sender);
        }

        private void m_lsvICD_10_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                m_mthSetContentToMainForm(sender);
            }
        }

        private void m_mthSetContentToMainForm(object sender)
        {
            try
            {
                ListView lsvCon = (ListView)sender;
                if (lsvCon.SelectedItems != null)
                {
                    if (arrlText.Count > 0)
                    {
                        ((Control)(arrlText[0])).Text = lsvCon.SelectedItems[0].SubItems[1].Text;
                        ((Control)(arrlText[1])).Text = lsvCon.SelectedItems[0].SubItems[0].Text;
                    }
                    else if (arrlDg.Count > 0)
                    {
                        int intRow = int.Parse(arrlDg[1].ToString());
                        if (arrlDg[0].ToString() == "dgDiagnosis1")
                        {
                            if (intRow < m_dtbInHospitalDiagnosis.Rows.Count)
                            {
                                m_dtbInHospitalDiagnosis.Rows[intRow][0] = lsvCon.SelectedItems[0].SubItems[1].Text;
                                m_dtbInHospitalDiagnosis.Rows[intRow][1] = lsvCon.SelectedItems[0].SubItems[0].Text;
                            }
                            else
                            {
                                DataRow drTemp = m_dtbInHospitalDiagnosis.NewRow();
                                drTemp[0] = lsvCon.SelectedItems[0].SubItems[1].Text;
                                drTemp[1] = lsvCon.SelectedItems[0].SubItems[0].Text;
                                m_dtbInHospitalDiagnosis.Rows.Add(drTemp);
                            }
                        }
                        else if (arrlDg[0].ToString() == "dgDiagnosis2")
                        {
                            if (intRow < m_dtbInfectionDiagnosis.Rows.Count)
                            {
                                m_dtbInfectionDiagnosis.Rows[intRow][0] = lsvCon.SelectedItems[0].SubItems[1].Text;
                                m_dtbInfectionDiagnosis.Rows[intRow][1] = lsvCon.SelectedItems[0].SubItems[0].Text;
                            }
                            else
                            {
                                DataRow drTemp = m_dtbInfectionDiagnosis.NewRow();
                                drTemp[0] = lsvCon.SelectedItems[0].SubItems[1].Text;
                                drTemp[1] = lsvCon.SelectedItems[0].SubItems[0].Text;
                                m_dtbInfectionDiagnosis.Rows.Add(drTemp);
                            }
                        }
                        else if (arrlDg[0].ToString() == "dgDiagnosis3")
                        {
                            if (intRow < m_dtbOtherDiagnosis.Rows.Count)
                            {
                                m_dtbOtherDiagnosis.Rows[intRow][0] = lsvCon.SelectedItems[0].SubItems[1].Text;
                                m_dtbOtherDiagnosis.Rows[intRow][1] = lsvCon.SelectedItems[0].SubItems[0].Text;
                            }
                            else
                            {
                                DataRow drTemp = m_dtbOtherDiagnosis.NewRow();
                                drTemp[0] = lsvCon.SelectedItems[0].SubItems[1].Text;
                                drTemp[1] = lsvCon.SelectedItems[0].SubItems[0].Text;
                                m_dtbOtherDiagnosis.Rows.Add(drTemp);
                            }
                        }
                    }
                }
                frmQuery.Close();
            }
            catch
            {
                frmQuery.Close();
            }
        }

        private frmQueryListview frmQuery = null;

        ArrayList arrlText = null;
        ArrayList arrlDg = null;
        /// <summary>
        /// 查询字典
        /// </summary>
        /// <param name="sender">当前控件</param>
        private void m_mthQueryDictDate(object sender)
        {
            arrlText = new ArrayList();
            arrlDg = new ArrayList();

            if (sender == null)
                return;

            if (sender == m_dgtbInDia.TextBox || sender == m_dgtbInDiaICD.TextBox)
            {
                arrlDg.Add("dgDiagnosis1");
                arrlDg.Add(dgDiagnosis1.CurrentRowIndex);
                m_mthShowICDQueryForm();
            }
            else if (sender == txtMainDiagnosis || sender == txtICD_10OfMain)
            {
                arrlText.Add(txtMainDiagnosis);
                arrlText.Add(txtICD_10OfMain);
                m_mthShowICDQueryForm();
            }
            else if (sender == m_dgtbInfectionDia.TextBox || sender == m_dgtbInfectionDiaICD.TextBox)
            {
                arrlDg.Add("dgDiagnosis2");
                arrlDg.Add(dgDiagnosis2.CurrentRowIndex);
                m_mthShowICDQueryForm();
            }
            else if (sender == m_dgtbOtherDia.TextBox || sender == m_dgtbOtherDiaICD.TextBox)
            {
                arrlDg.Add("dgDiagnosis3");
                arrlDg.Add(dgDiagnosis3.CurrentRowIndex);
                m_mthShowICDQueryForm();
            }
            else if (sender == txtDiagnosis || sender == txtDiagnosisICD10)
            {
                arrlText.Add(txtDiagnosis);
                arrlText.Add(txtDiagnosisICD10);
                m_mthShowICDQueryForm();
            }
            else if (sender == m_dtcOperationID.TextBox || sender == m_dtcOperationName.TextBox)
            {
                arrlDg.Add("dtgOperation");
                arrlDg.Add(dtgOperation.CurrentRowIndex);
                m_mthShowOpQueryForm();
            }
            else if (sender == m_dtcOperator.TextBox || sender == m_dtcAssistant1.TextBox
                || sender == m_dtcAssistant2.TextBox || sender == m_dtcAnaesthetist.TextBox)
            {
                arrlDg.Add("dtgOperation");
                arrlDg.Add(dtgOperation.CurrentRowIndex);
                m_mthShowEmp((TextBox)sender);
            }
            else if (sender == m_dtcAnaesthesiaMode.TextBox)
            {
                arrlDg.Add("dtgOperation");
                arrlDg.Add(dtgOperation.CurrentRowIndex);
                m_mthShowAnaesthesiaMode();
            }
        }

        frmQueryListview frmQueryAna = null;
        private void m_mthShowAnaesthesiaMode()
        {
            if (frmQueryAna == null || frmQueryAna.IsDisposed)
            {
                frmQueryAna = new frmQueryListview();

                m_mthSetAnaListviewColumns();
                frmQueryAna.m_txtInput.TextChanged += new EventHandler(txtAnaInput_TextChanged);
                frmQueryAna.m_lsvDetail.DoubleClick += new EventHandler(m_lsvAna_DoubleClick);
                frmQueryAna.m_lsvDetail.KeyDown += new KeyEventHandler(m_lsvAna_KeyDown);
                frmQueryAna.m_txtInput.KeyDown += new KeyEventHandler(m_txtInput_KeyDown);
                frmQueryAna.m_cmdLast.Click += new EventHandler(m_cmdAnaLast_Click);
                frmQueryAna.m_cmdNext.Click += new EventHandler(m_cmdAnaNext_Click);
                frmQueryAna.m_lklCustom.Visible = true;
                frmQueryAna.m_lklCustom.Text = "刷新";
                frmQueryAna.m_lklCustom.Click += new EventHandler(m_lklAnaCustom_Click);
            }

            frmQueryAna.StartPosition = FormStartPosition.CenterScreen;
            frmQueryAna.Show();

            m_mthGetAnaData();

            if (m_dtbAna != null)
                m_dtvAna = new DataView(m_dtbAna);

            frmQueryAna.m_cmdLast.Enabled = false;
            frmQueryAna.m_cmdNext.Enabled = true;
            m_mthUpdateQueryListView(frmQueryAna, m_dtvAna, 0);
        }

        private void m_mthShowICDQueryForm()
        {
            if (frmQuery == null || frmQuery.IsDisposed)
            {
                frmQuery = new frmQueryListview();

                m_mthSetListviewColumns();
                frmQuery.m_txtInput.TextChanged += new EventHandler(txtInput_TextChanged);
                frmQuery.m_lsvDetail.DoubleClick += new EventHandler(m_lsvICD_10_DoubleClick);
                frmQuery.m_lsvDetail.KeyDown += new KeyEventHandler(m_lsvICD_10_KeyDown);
                frmQuery.m_txtInput.KeyDown += new KeyEventHandler(m_txtInput_KeyDown);
                frmQuery.m_cmdLast.Click += new EventHandler(m_cmdICDLast_Click);
                frmQuery.m_cmdNext.Click += new EventHandler(m_cmdICDNext_Click);
                frmQuery.m_lklCustom.Visible = true;
                frmQuery.m_lklCustom.Text = "刷新";
                frmQuery.m_lklCustom.Click += new EventHandler(m_lklCustom_Click);
            }

            frmQuery.StartPosition = FormStartPosition.CenterScreen;
            frmQuery.Show();

            m_mthGetICDData();

            if (m_dtbICD != null)
                m_dtvICD = new DataView(m_dtbICD);

            frmQuery.m_cmdLast.Enabled = false;
            frmQuery.m_cmdNext.Enabled = true;
            m_mthUpdateQueryListView(frmQuery, m_dtvICD, 0);
        }

        private void m_lklCustom_Click(object sender, EventArgs e)
        {
            m_mthGetDataFromDataBase("ICD_GD.xml", "ICD_GD");

            m_dtvICD = new DataView(m_dtbICD);
            frmQuery.m_cmdLast.Enabled = false;
            frmQuery.m_cmdNext.Enabled = true;
            m_mthUpdateQueryListView(frmQuery, m_dtvICD, 0);
        }

        private void m_cmdICDNext_Click(object sender, EventArgs e)
        {
            if (m_dtvICD == null || m_dtvICD.Count == 0)
                return;
            int intIndex = 0;
            if (frmQuery.m_intCurrentIndex + 9 > m_dtvICD.Count - 1)
            {
                frmQuery.m_cmdLast.Enabled = false;
                intIndex = 0;
            }
            else
            {
                frmQuery.m_cmdLast.Enabled = true;
                intIndex = frmQuery.m_intCurrentIndex + 9;
            }

            m_mthUpdateQueryListView(frmQuery, m_dtvICD, intIndex);
        }

        private void m_cmdICDLast_Click(object sender, EventArgs e)
        {
            if (m_dtvICD == null || m_dtvICD.Count == 0)
                return;
            int intIndex = 0;
            if (frmQuery.m_intCurrentIndex - 9 < 0)
            {
                intIndex = 0;
                frmQuery.m_cmdNext.Enabled = true;
            }
            else
            {
                intIndex = frmQuery.m_intCurrentIndex - 9;
                frmQuery.m_cmdNext.Enabled = true;
            }

            m_mthUpdateQueryListView(frmQuery, m_dtvICD, intIndex);
        }

        private void m_mthUpdateQueryListView(frmQueryListview p_frmQuery, DataView p_dtvData, int intIndex)
        {
            try
            {
                p_frmQuery.m_lsvDetail.Items.Clear();
                if (p_dtvData == null || p_dtvData.Count == 0)
                    return;
                int intEnd = intIndex + 9;
                if (intIndex == 0)
                {
                    p_frmQuery.m_cmdLast.Enabled = false;
                    p_frmQuery.m_cmdNext.Enabled = true;
                }
                if (intIndex + 9 > p_dtvData.Count)
                {
                    intEnd = p_dtvData.Count;
                    p_frmQuery.m_cmdNext.Enabled = false;
                }
                p_frmQuery.m_lsvDetail.BeginUpdate();
                ListViewItem[] livItems = new ListViewItem[intEnd - intIndex];
                for (int i = 0; i < intEnd - intIndex; i++)
                {
                    livItems[i] = new ListViewItem(new string[] { p_dtvData[intIndex + i][0].ToString(),
                    p_dtvData[intIndex + i][1].ToString()});
                }
                p_frmQuery.m_lsvDetail.Items.AddRange(livItems);
                p_frmQuery.m_intCurrentIndex = intIndex;
            }
            finally
            {
                p_frmQuery.m_lsvDetail.EndUpdate();
            }
        }

        /// <summary>
        /// 输入框内容改变事件
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void txtInput_TextChanged(object sender, System.EventArgs e)
        {
            try
            {
                string strFilter = ((TextBox)sender).Text.Trim();
                strFilter = strFilter.ToUpper();
                m_dtvICD.RowFilter = " code like '" + strFilter + "%' or name like '%" + strFilter + "%'";

                m_mthUpdateQueryListView(frmQuery, m_dtvICD, 0);
            }
            catch (Exception exp)
            {
                com.digitalwave.Utility.clsLogText objLogger = new com.digitalwave.Utility.clsLogText();
                bool blnRes = objLogger.LogError(exp);
            }
        }

        /// <summary>
        /// 输入框内容改变事件
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void txtAnaInput_TextChanged(object sender, System.EventArgs e)
        {
            try
            {
                string strFilter = ((TextBox)sender).Text.Trim();
                strFilter = strFilter.ToUpper();
                m_dtvAna.RowFilter = " code like '" + strFilter + "%' or name like '%" + strFilter + "%'";

                m_mthUpdateQueryListView(frmQueryAna, m_dtvAna, 0);
            }
            catch (Exception exp)
            {
                com.digitalwave.Utility.clsLogText objLogger = new com.digitalwave.Utility.clsLogText();
                bool blnRes = objLogger.LogError(exp);
            }
        }

        /// <summary>
        /// 设置frmQueryListview中Listview的列
        /// </summary>
        /// <param name="p_lsvICD"></param>
        private void m_mthSetAnaListviewColumns()
        {
            System.Windows.Forms.ColumnHeader columnHeader1 = new ColumnHeader();
            System.Windows.Forms.ColumnHeader columnHeader2 = new ColumnHeader();
            frmQueryAna.m_lsvDetail.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
																							columnHeader1,
																							columnHeader2});
            columnHeader1.Text = "编码";
            columnHeader1.Width = 100;

            columnHeader2.Text = "麻醉方式";
            columnHeader2.Width = 380;
        }

        /// <summary>
        /// 设置frmQueryListview中Listview的列
        /// </summary>
        /// <param name="p_lsvICD"></param>
        private void m_mthSetListviewColumns()
        {
            System.Windows.Forms.ColumnHeader columnHeader1 = new ColumnHeader();
            System.Windows.Forms.ColumnHeader columnHeader2 = new ColumnHeader();
            frmQuery.m_lsvDetail.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
																							columnHeader1,
																							columnHeader2});
            columnHeader1.Text = "ICD码";
            columnHeader1.Width = 100;

            columnHeader2.Text = "诊断名称";
            columnHeader2.Width = 380;
        }

        private void QueryControls_Enter(object sender, System.EventArgs e)
        {
            m_lblQueryTips.Visible = true;
            m_timShowTips.Enabled = true;
        }

        private void QueryControls_Leave(object sender, System.EventArgs e)
        {
            m_lblQueryTips.Visible = false;
            m_timShowTips.Enabled = false;
        }

        private void m_txtInput_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Down)
            {
                frmQueryListview frmCurrentQuery = ((Control)sender).FindForm() as frmQueryListview;
                if (frmCurrentQuery.m_lsvDetail.Items.Count > 0)
                {
                    frmCurrentQuery.m_lsvDetail.Focus();
                    frmCurrentQuery.m_lsvDetail.Items[0].Selected = true;
                }
            }
        }
        #endregion

        #region 手术
        /// <summary>
        /// 设置frmQueryListview中Listview的列
        /// </summary>
        private void m_mthSetOpListviewColumns()
        {
            System.Windows.Forms.ColumnHeader columnHeader1 = new ColumnHeader();
            System.Windows.Forms.ColumnHeader columnHeader2 = new ColumnHeader();
            frmOpQuery.m_lsvDetail.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
																							columnHeader1,
																							columnHeader2});
            columnHeader1.Text = "手术码";
            columnHeader1.Width = 100;

            columnHeader2.Text = "手术名称";
            columnHeader2.Width = 380;
        }

        private frmQueryListview frmOpQuery = null;
        private void m_mthShowOpQueryForm()
        {
            if (frmOpQuery == null || frmOpQuery.IsDisposed)
            {
                frmOpQuery = new frmQueryListview();
                m_mthSetOpListviewColumns();
                frmOpQuery.m_txtInput.TextChanged += new EventHandler(txtInputOp_TextChanged);
                frmOpQuery.m_lsvDetail.DoubleClick += new EventHandler(m_lsvOp_DoubleClick);
                frmOpQuery.m_lsvDetail.KeyDown += new KeyEventHandler(m_lsvOp_KeyDown);
                frmOpQuery.m_txtInput.KeyDown += new KeyEventHandler(m_txtInput_KeyDown);
                frmOpQuery.m_cmdLast.Click += new EventHandler(m_cmdOpLast_Click);
                frmOpQuery.m_cmdNext.Click += new EventHandler(m_cmdOpNext_Click);
                frmOpQuery.m_lklCustom.Visible = true;
                frmOpQuery.m_lklCustom.Text = "刷新";
                frmOpQuery.m_lklCustom.Click += new EventHandler(m_lklCustomOp_Click);
            }

            frmOpQuery.StartPosition = FormStartPosition.CenterScreen;
            frmOpQuery.Show();

            m_mthGetOpData();

            if (m_dtbOp != null)
                m_dtvOp = new DataView(m_dtbOp);

            frmOpQuery.m_cmdLast.Enabled = false;
            frmOpQuery.m_cmdNext.Enabled = true;
            m_mthUpdateQueryListView(frmOpQuery, m_dtvOp, 0);
        }

        private void m_lklCustomOp_Click(object sender, EventArgs e)
        {
            m_mthGetDataFromDataBase("Operation_GD.xml", "Operation_GD");

            m_dtvOp = new DataView(m_dtbOp);
            frmOpQuery.m_cmdLast.Enabled = false;
            frmOpQuery.m_cmdNext.Enabled = true;
            m_mthUpdateQueryListView(frmOpQuery, m_dtvOp, 0);
        }

        private void m_lsvOp_DoubleClick(object sender, System.EventArgs e)
        {
            m_mthSetOpContentToMainForm(sender);
        }

        private void m_lsvOp_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                m_mthSetOpContentToMainForm(sender);
            }
        }

        private void m_mthSetOpContentToMainForm(object sender)
        {
            try
            {
                ListView lsvCon = (ListView)sender;
                if (lsvCon.SelectedItems != null)
                {
                    int intRow = dtgOperation.CurrentRowIndex;
                    if (intRow <= m_dtbOperationDetail.Rows.Count)
                    {
                        dtgOperation.BindingContext[dtgOperation.DataSource, dtgOperation.DataMember].EndCurrentEdit();
                        m_dtbOperationDetail.Rows[intRow][0] = lsvCon.SelectedItems[0].SubItems[0].Text;
                        m_dtbOperationDetail.Rows[intRow][2] = lsvCon.SelectedItems[0].SubItems[1].Text;
                    }
                    else
                    {

                        DataRow drTemp = m_dtbOperationDetail.NewRow();
                        drTemp[0] = lsvCon.SelectedItems[0].SubItems[0].Text;
                        drTemp[2] = lsvCon.SelectedItems[0].SubItems[1].Text;
                        m_dtbOperationDetail.Rows.Add(drTemp);
                    }
                }
                frmOpQuery.Close();
            }
            catch
            {
                frmOpQuery.Close();
            }
        }

        private void m_cmdOpNext_Click(object sender, EventArgs e)
        {
            if (m_dtvOp == null || m_dtvOp.Count == 0)
                return;
            int intIndex = 0;
            if (frmOpQuery.m_intCurrentIndex + 9 > m_dtvOp.Count - 1)
            {
                frmOpQuery.m_cmdLast.Enabled = false;
                intIndex = 0;
            }
            else
            {
                frmOpQuery.m_cmdLast.Enabled = true;
                intIndex = frmOpQuery.m_intCurrentIndex + 9;
            }

            m_mthUpdateQueryListView(frmOpQuery, m_dtvOp, intIndex);
        }

        private void m_cmdOpLast_Click(object sender, EventArgs e)
        {
            if (m_dtvOp == null || m_dtvOp.Count == 0)
                return;
            int intIndex = 0;
            if (frmOpQuery.m_intCurrentIndex - 9 < 0)
            {
                intIndex = 0;
                frmOpQuery.m_cmdNext.Enabled = true;
            }
            else
            {
                intIndex = frmOpQuery.m_intCurrentIndex - 9;
                frmOpQuery.m_cmdNext.Enabled = true;
            }

            m_mthUpdateQueryListView(frmOpQuery, m_dtvOp, intIndex);
        }

        /// <summary>
        /// 输入框内容改变事件
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void txtInputOp_TextChanged(object sender, System.EventArgs e)
        {
            try
            {
                string strFilter = ((TextBox)sender).Text.Trim();
                strFilter = strFilter.ToUpper();
                m_dtvOp.RowFilter = " code like '" + strFilter + "%' or name like '%" + strFilter + "%'";

                m_mthUpdateQueryListView(frmOpQuery, m_dtvOp, 0);
            }
            catch (Exception exp)
            {
                com.digitalwave.Utility.clsLogText objLogger = new com.digitalwave.Utility.clsLogText();
                bool blnRes = objLogger.LogError(exp);
            }
        }

        #region 手术记录日期事件
        private void OperationDate_TextChanged(object sender, EventArgs e)
        {
            try
            {
                string strText = ((DataGridTextBox)sender).Text;
                DateTime dt = DateTime.Parse(strText);
                int m_intCurrentColumnNumber = dtgOperation.CurrentCell.ColumnNumber;
                int m_intCurrentRowNumber = this.dtgOperation.CurrentCell.RowNumber;
                if (m_intCurrentRowNumber >= m_dtbOperationDetail.Rows.Count)
                {
                    object[] m_objResArr = new object[14];
                    m_objResArr[1] = strText;
                    m_dtbOperationDetail.Rows.Add(m_objResArr);
                }
            }
            catch
            {
                return;
            }
        }
        #endregion
        #endregion

        private void m_lsvAna_DoubleClick(object sender, System.EventArgs e)
        {
            m_mthSetAnaContentToMainForm(sender);
        }

        private void m_lsvAna_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                m_mthSetAnaContentToMainForm(sender);
            }
        }

        private void m_mthSetAnaContentToMainForm(object sender)
        {
            try
            {
                ListView lsvCon = (ListView)sender;
                if (lsvCon.SelectedItems != null)
                {
                    int intRow = dtgOperation.CurrentRowIndex;
                    if (intRow < m_dtbOperationDetail.Rows.Count)
                    {
                        m_dtbOperationDetail.Rows[intRow][9] = lsvCon.SelectedItems[0].SubItems[0].Text;
                        m_dtbOperationDetail.Rows[intRow][6] = lsvCon.SelectedItems[0].SubItems[1].Text;
                    }
                    else
                    {
                        DataRow drTemp = m_dtbOperationDetail.NewRow();
                        drTemp[9] = lsvCon.SelectedItems[0].SubItems[0].Text;
                        drTemp[6] = lsvCon.SelectedItems[0].SubItems[1].Text;
                        m_dtbOperationDetail.Rows.Add(drTemp);
                    }
                }
                frmQueryAna.Close();
            }
            catch
            {
                frmQueryAna.Close();
            }
        }

        private void m_cmdAnaNext_Click(object sender, EventArgs e)
        {
            if (m_dtvAna == null || m_dtvAna.Count == 0)
                return;
            int intIndex = 0;
            if (frmQueryAna.m_intCurrentIndex + 9 > m_dtvAna.Count - 1)
            {
                frmQueryAna.m_cmdLast.Enabled = false;
                intIndex = 0;
            }
            else
            {
                frmQueryAna.m_cmdLast.Enabled = true;
                intIndex = frmQueryAna.m_intCurrentIndex + 9;
            }

            m_mthUpdateQueryListView(frmQueryAna, m_dtvAna, intIndex);
        }

        private void m_cmdAnaLast_Click(object sender, EventArgs e)
        {
            if (m_dtvAna == null || m_dtvAna.Count == 0)
                return;
            int intIndex = 0;
            if (frmQueryAna.m_intCurrentIndex - 9 < 0)
            {
                intIndex = 0;
                frmQueryAna.m_cmdNext.Enabled = true;
            }
            else
            {
                intIndex = frmQueryAna.m_intCurrentIndex - 9;
                frmQueryAna.m_cmdNext.Enabled = true;
            }

            m_mthUpdateQueryListView(frmQueryAna, m_dtvAna, intIndex);
        }

        private void m_lklAnaCustom_Click(object sender, EventArgs e)
        {
            m_mthGetDataFromDataBase("AnaesthesiaMode_GD.xml", "AnaesthesiaMode_GD");

            m_dtvAna = new DataView(m_dtbAna);
            frmQueryAna.m_cmdLast.Enabled = false;
            frmQueryAna.m_cmdNext.Enabled = true;
            m_mthUpdateQueryListView(frmQueryAna, m_dtvAna, 0);
        }

        #region 创建及读取本地XML文件操作
        /// <summary>
        /// 获取ICD数据
        /// </summary>
        private void m_mthGetICDData()
        {
            if (m_dtbICD != null && m_dtbICD.Rows.Count > 0)
            {
                return;
            }
            string strFile = "ICD_GD.xml";
            string strTableName = "ICD_GD";

            m_mthGetDataFromDataBaseOrXML(strFile, strTableName, ref m_dtbICD);
        }

        /// <summary>
        /// 获取手术数据
        /// </summary>
        private void m_mthGetOpData()
        {
            if (m_dtbOp != null && m_dtbOp.Rows.Count > 0)
            {
                return;
            }
            string strFile = "Operation_GD.xml";
            string strTableName = "Operation_GD";

            m_mthGetDataFromDataBaseOrXML(strFile, strTableName, ref m_dtbOp);
        }

        /// <summary>
        /// 获取麻醉方式数据
        /// </summary>
        private void m_mthGetAnaData()
        {
            if (m_dtbAna != null && m_dtbAna.Rows.Count > 0)
            {
                return;
            }
            string strFile = "AnaesthesiaMode_GD.xml";
            string strTableName = "AnaesthesiaMode_GD";

            m_mthGetDataFromDataBaseOrXML(strFile, strTableName, ref m_dtbAna);
        }

        /// <summary>
        /// 从数据库或XML中获取数据
        /// </summary>
        /// <param name="strFile">文件名</param>
        /// <param name="strTableName">DataTalbe名称</param>
        /// <param name="p_dtbTable">要获取的DataTable</param>
        private void m_mthGetDataFromDataBaseOrXML(string strFile, string strTableName, ref DataTable p_dtbTable)
        {
            if (!System.IO.File.Exists(strFile))
            {
                m_mthGetDataFromDataBase(strFile, strTableName);
            }
            else
            {
                try
                {
                    p_dtbTable = new DataTable(strTableName);
                    p_dtbTable.ReadXml(strFile);

                    if (p_dtbTable == null || p_dtbTable.Rows.Count <= 0)
                    {
                        m_mthGetDataFromDataBase(strFile, strTableName);
                    }
                }
                catch (Exception Ex)
                {
                    com.digitalwave.Utility.clsLogText objLogger = new com.digitalwave.Utility.clsLogText();
                    bool blnRes = objLogger.LogError(Ex);
                }
            }
        }

        /// <summary>
        /// 从数据库获取数据
        /// </summary>
        /// <param name="p_strFileName">XML文件名</param>
        /// <param name="p_strTableName">表名</param>
        private void m_mthGetDataFromDataBase(string p_strFileName, string p_strTableName)
        {
            System.Collections.ArrayList arrParameter = new System.Collections.ArrayList();
            arrParameter.Add(p_strFileName);

            long lngRes = 0;

            if (p_strFileName == "ICD_GD.xml")
            {
                lngRes = m_objDomain.m_lngGetICDDiagnosisCode(out m_dtbICD);

                if (m_dtbICD != null)
                {
                    m_dtbICD.TableName = p_strTableName;
                }
                arrParameter.Add(m_dtbICD);
            }
            else if (p_strFileName == "Operation_GD.xml")
            {
                lngRes = m_objDomain.m_lngGetOprationCode(out m_dtbOp);

                if (m_dtbOp != null)
                {
                    m_dtbOp.TableName = p_strTableName;
                }
                arrParameter.Add(m_dtbOp);
            }
            else if (p_strFileName == "AnaesthesiaMode_GD.xml")
            {
                lngRes = m_objDomain.m_lngGetAnaesthesiaMode(out m_dtbAna);

                if (m_dtbAna != null)
                {
                    m_dtbAna.TableName = p_strTableName;
                }
                arrParameter.Add(m_dtbAna);
            }

            System.Threading.Thread thrWrite = new System.Threading.Thread(new System.Threading.ParameterizedThreadStart(m_mthWriteXML));
            thrWrite.IsBackground = true;
            thrWrite.Start(arrParameter);
        }

        /// <summary>
        /// 将数据转换成XML文件
        /// </summary>
        /// <param name="Parameters">多线程参数</param>
        private void m_mthWriteXML(object Parameters)
        {
            if (Parameters == null)
            {
                return;
            }

            if (Parameters is System.Collections.ArrayList)
            {
                System.Collections.ArrayList PaArr = Parameters as System.Collections.ArrayList;
                if (PaArr.Count == 2)
                {
                    string strFileName = PaArr[0].ToString();
                    DataTable dtbDict = PaArr[1] as DataTable;

                    m_mthWriteXML(strFileName, dtbDict);
                }
            }
        }

        /// <summary>
        /// 将ICD数据转换成XML文件
        /// </summary>
        /// <param name="p_strFileName">XML文件名</param>
        /// <param name="p_dtbDict">数据</param>
        private void m_mthWriteXML(string p_strFileName, DataTable p_dtbDict)
        {
            if (string.IsNullOrEmpty(p_strFileName) || p_dtbDict == null || p_dtbDict.Rows.Count <= 0)
            {
                return;
            }

            Object thisLock = new Object();
            lock (thisLock)
            {
                try
                {
                    p_dtbDict.WriteXml(p_strFileName, XmlWriteMode.WriteSchema);
                }
                catch (Exception Ex)
                {
                    com.digitalwave.Utility.clsLogText objLogger = new com.digitalwave.Utility.clsLogText();
                    bool blnRes = objLogger.LogError(Ex);
                }
            }
        }
        #endregion

        #region 员工查询
        private void m_mthShowEmp(TextBox p_txtTarget)
        {
            com.digitalwave.Emr.Signature_gui.frmCommonUsePanel frmcommonusepanel = new com.digitalwave.Emr.Signature_gui.frmCommonUsePanel();
            frmcommonusepanel.m_mthSetParentForm(p_txtTarget, false);
            frmcommonusepanel.m_mthSetCommonUserType(-5);
            frmcommonusepanel.m_StrDeptID = string.Empty;
            frmcommonusepanel.m_StrEmployeeID = clsEMRLogin.LoginEmployee.m_strEMPID_CHR;
            frmcommonusepanel.m_BlnIsMultiSignAndNoTag = false;
            frmcommonusepanel.FormClosed += new FormClosedEventHandler(frmcommonusepanel_FormClosed);

            frmcommonusepanel.TopMost = true;
            frmcommonusepanel.ShowDialog(this);
        }

        private void frmcommonusepanel_FormClosed(object sender, FormClosedEventArgs e)
        {
            com.digitalwave.Emr.Signature_gui.frmCommonUsePanel frmcommonusepanel = sender as com.digitalwave.Emr.Signature_gui.frmCommonUsePanel;
            if (frmcommonusepanel.DialogResult == DialogResult.OK)
            {
                Control ctl = frmcommonusepanel.m_objSelectedControl;
                clsEmrEmployeeBase_VO objVO = ctl.Tag as clsEmrEmployeeBase_VO;
                if (dtgOperation.CurrentRowIndex > m_dtbOperationDetail.Rows.Count)
                {
                    DataRow dr = m_dtbOperationDetail.NewRow();
                    if (dtgOperation.CurrentCell.ColumnNumber == 3)
                    {
                        dr[3] = ctl.Text;
                        if (objVO != null)
                        {
                            dr[10] = objVO.m_strEMPID_CHR;
                        }
                    }
                    else if (dtgOperation.CurrentCell.ColumnNumber == 4)
                    {
                        dr[4] = ctl.Text;
                        if (objVO != null)
                        {
                            dr[11] = objVO.m_strEMPID_CHR;
                        }
                    }
                    else if (dtgOperation.CurrentCell.ColumnNumber == 5)
                    {
                        dr[5] = ctl.Text;
                        if (objVO != null)
                        {
                            dr[12] = objVO.m_strEMPID_CHR;
                        }
                    }
                    else if (dtgOperation.CurrentCell.ColumnNumber == 8)
                    {
                        dr[8] = ctl.Text;
                        if (objVO != null)
                        {
                            dr[13] = objVO.m_strEMPID_CHR;
                        }
                    }
                    m_dtbOperationDetail.Rows.Add(dr);
                }
                else
                {
                    dtgOperation.BindingContext[dtgOperation.DataSource, dtgOperation.DataMember].EndCurrentEdit();
                    if (dtgOperation.CurrentCell.ColumnNumber == 3)
                    {
                        m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][3] = ((clsEmrEmployeeBase_VO)ctl.Tag).m_strGetTechnicalRankAndName;
                        if (string.IsNullOrEmpty(((clsEmrEmployeeBase_VO)ctl.Tag).m_strGetTechnicalRankAndName))
                        {
                            m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][10] = string.Empty;
                        }
                        else if (objVO != null)
                        {
                            m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][10] = objVO.m_strEMPID_CHR;
                        }
                    }
                    else if (dtgOperation.CurrentCell.ColumnNumber == 4)
                    {
                        m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][4] = ((clsEmrEmployeeBase_VO)ctl.Tag).m_strGetTechnicalRankAndName;
                        if (string.IsNullOrEmpty(((clsEmrEmployeeBase_VO)ctl.Tag).m_strGetTechnicalRankAndName))
                        {
                            m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][11] = string.Empty;
                        }
                        else if (objVO != null)
                        {
                            m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][11] = objVO.m_strEMPID_CHR;
                        }
                    }
                    else if (dtgOperation.CurrentCell.ColumnNumber == 5)
                    {
                        m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][5] = ((clsEmrEmployeeBase_VO)ctl.Tag).m_strGetTechnicalRankAndName;
                        if (string.IsNullOrEmpty(((clsEmrEmployeeBase_VO)ctl.Tag).m_strGetTechnicalRankAndName))
                        {
                            m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][12] = string.Empty;
                        }
                        else if (objVO != null)
                        {
                            m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][12] = objVO.m_strEMPID_CHR;
                        }
                    }
                    else if (dtgOperation.CurrentCell.ColumnNumber == 8)
                    {
                        m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][8] = ((clsEmrEmployeeBase_VO)ctl.Tag).m_strGetTechnicalRankAndName;
                        if (string.IsNullOrEmpty(((clsEmrEmployeeBase_VO)ctl.Tag).m_strGetTechnicalRankAndName))
                        {
                            m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][13] = string.Empty;
                        }
                        else if (objVO != null)
                        {
                            m_dtbOperationDetail.Rows[dtgOperation.CurrentRowIndex][13] = objVO.m_strEMPID_CHR;
                        }
                    }
                }
            }
        }
        #endregion

        private void m_cmdCommit_Click(object sender, EventArgs e)
        {
            if (m_objBaseCurrentPatient == null)
            {
                return;
            }

            DialogResult dr = MessageBox.Show("病案只能提交一次，是否继续？", "病案首页", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);
            if (dr == DialogResult.Cancel)
            {
                return;
            }

            m_blnIsCommit = true;

            Save();


            this.Cursor = Cursors.WaitCursor;

            try
            {
                long lngRes = m_objDomain.m_lngCommitToGD(m_objCollection, objSessionInfo.m_ObjPeopleInfo, objTransDeptInstance, m_objSelectedPatient.m_DtmSelectedHISInDate.ToString("yyyy-MM-dd HH:mm:ss"));

                if (lngRes > 0)
                {
                    clsPublicFunction.ShowInformationMessageBox("病案已成功提交！");
                    m_mthPerformSessionChanged(m_ObjCurrentEmrPatientSession, 0);
                    m_cmdCommit.Enabled = false;
                }
                else
                    clsPublicFunction.ShowInformationMessageBox("病案提交失败！");

                //com.digitalwave.emr.EMR_SynchronousCase.clsEMR_SynchronousCaseDomain objSCDomain = new com.digitalwave.emr.EMR_SynchronousCase.clsEMR_SynchronousCaseDomain();
                //DataTable dtbPatient = null;
                //long lngRes = objSCDomain.m_lngGetSynchronousData_reg(com.digitalwave.Emr.StaticObject.clsEMR_StaticObject.s_intGetEmrSettingValue("3017"), m_ObjCurrentEmrPatient.m_strREGISTERID_CHR, out dtbPatient);

                //com.digitalwave.emr.EMR_SynchronousCase.frmEMR_SynchronousCase objSCForm = new com.digitalwave.emr.EMR_SynchronousCase.frmEMR_SynchronousCase();
                //clsEMR_SynchronousCaseValue objSCV = objSCForm.m_objSCV(dtbPatient.Rows[0], m_dtbPayTypeRelation);
                //if (objSCV != null)
                //{
                //    System.Collections.Generic.List<clsEMR_SynchronousCaseValue> lstSC = new System.Collections.Generic.List<clsEMR_SynchronousCaseValue>();
                //    lstSC.Add(objSCV);
                //    objSCForm.m_mthSynchronousCaseToDatabase(lstSC, dtbPatient, m_pnlProgress, m_lblCurrentPatient, m_lblCurrentTable, m_pgbAll, m_pgbDetail);
                //}

                //lngRes = m_objDomain.m_lngCommitToRecord(m_objCollection.m_objMain.m_strInPatientID, Convert.ToDateTime(m_objCollection.m_objMain.m_strInPatientDate), Convert.ToDateTime(m_objCollection.m_objMain.m_strOpenDate));
                //m_cmdCommit.Enabled = false;
            }
            catch (Exception Ex)
            {
                string strEx = Ex.Message;
            }
            finally
            {
                this.Cursor = Cursors.Default;
            }

            m_blnIsCommit = false;
        }

        /// <summary>
        /// 设置默认费用信息
        /// </summary>
        private void m_mthLoadChargeInfo()
        {
            clsInHospitalMainCharge[] objChargeArr = null;
            //su.liang 旧版费用直接从子表读取
            DateTime UpdateTime = new DateTime();
            long lngRes = 0;
            lngRes = m_objDomain.m_lngGetCHRCATE2009(m_objBaseCurrentPatient.m_StrRegisterId, out objChargeArr);//m_objBaseCurrentPatient.m_StrInPatientID,m_objBaseCurrentPatient.m_DtmSelectedHISInDate,
            if (objChargeArr != null && objChargeArr.Length > 0)
            {
                double dblSum = 0D;
                for (int i = 0; i < objChargeArr.Length; i++)
                {
                    m_mthSetMoneyValueToUI(objChargeArr[i].m_dblMoney, objChargeArr[i].m_strTypeName, ref dblSum);
                }
                txtTotalAmt.Text = dblSum.ToString();
            }
        }

        #region 设置费用至界面
        /// <summary>
        /// 设置费用至界面
        /// </summary>
        /// <param name="p_dblMoney">费用金额</param>
        /// <param name="p_strChargeName">费用名称</param>
        /// <param name="p_dblSum">总和</param>
        private void m_mthSetMoneyValueToUI(double p_dblMoney, string p_strChargeName, ref double p_dblSum)
        {
            if (string.IsNullOrEmpty(p_strChargeName))
            {
                return;
            }

            switch (p_strChargeName)
            {
                case "手术费":
                    txtOperationAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "接生费":
                    txtDeliveryChildAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "检查费":
                    txtCheckAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "麻醉费":
                    txtAnaethesiaAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "婴儿费":
                    txtBabyAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "陪床费":
                    txtAccompanyAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "其他费":
                    txtOtherAmt1.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "诊疗费":
                    txtTreatmentAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "床位费":
                    txtBedAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "护理费":
                    txtNurseAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "放射费":
                    txtRadiationAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "化验费":
                    txtAssayAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "输氧费":
                    txtO2Amt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "输血费":
                    txtBloodAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "西药费":
                    txtWMAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "中草药费":
                    txtCMSemiFinishedAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
                case "中成药费":
                    txtCMFinishedAmt.Text = p_dblMoney.ToString();
                    p_dblSum += p_dblMoney;
                    break;
            }
        }
        #endregion

        protected override void m_mthPerformSessionChanged(clsEmrPatientSessionInfo_VO p_objSelectedSession, int p_intIndex)
        {
            if (p_objSelectedSession == null) return;
            m_mthRecordChangedToSave();

            m_cmdCommit.Enabled = false;
            m_bolIfHasSave = false;
            m_strOpenDate = null;
            m_txtFocusedRichTextBox = null;
            m_RtbCurrentTextBox = null;
            m_mthCleanUpPatientInHospitalMainRecrodInfo();
            m_mthCleanUpPatientDetailInfo();

            m_mthSetModifyControl(string.Empty, true);

            if (p_objSelectedSession == null)
            {
                m_mthSetControlReadOnly(this, true);
                //当前处于禁止输入状态
                MDIParent.m_mthChangeFormText(this, MDIParent.enmFormEditStatus.None);
                m_mthAddFormStatusForClosingSave();
                return;

            }
            m_cmdCommit.Enabled = true;

            m_objBaseCurrentPatient.m_StrHISInPatientID = p_objSelectedSession.m_strHISInpatientId;
            m_objBaseCurrentPatient.m_DtmSelectedHISInDate = p_objSelectedSession.m_dtmHISInpatientDate;

            m_objBaseCurrentPatient.m_DtmSelectedInDate = p_objSelectedSession.m_dtmEMRInpatientDate;
            m_objBaseCurrentPatient.m_StrRegisterId = p_objSelectedSession.m_strRegisterId;

            m_objSelectedPatient = m_objBaseCurrentPatient;
            //设置病人当次住院的基本信息 更新信息
            m_mthOnlySetPatientInfo(m_objSelectedPatient);

            m_mthSetPatientCurrentInHospitalDeptInfo();
            m_mthSetControlReadOnly(this, true);
            m_mthIsReadOnly();
            if (!m_blnCanShowRecordContent())
            {
                clsPublicFunction.ShowInformationMessageBox("该病案已归档，当前用户没有查阅权限");
                return;
            }

            m_mthDiaplayDetail();
            m_mthSetControlReadOnly(this, false);

            if (m_objCollection != null && m_objCollection.m_objMain != null)
                m_mthSetModifyControl(m_objCollection.m_objMain.m_strCreateUserID, false);
        }

        private void radioButton3_CheckedChanged(object sender, EventArgs e)
        {
            if (radioButton3.Checked == true)
            {
                dtgBaby.Enabled = true;
            }
            else
            {
                dtgBaby.Enabled = false;
            }
        }

        private void radioButton1_CheckedChanged(object sender, EventArgs e)
        {
            if (radioButton1.Checked == true)
            {
                dtgOperation.Enabled = true;
            }
            else
            {
                m_dtbOperationDetail.Clear();
                dtgOperation.Enabled = false;
            }
        }

        private void radioButton5_CheckedChanged(object sender, EventArgs e)
        {
            if (radioButton5.Checked == true)
            {
                dtgChemotherapy.Enabled = true;
            }
            else
            {
                m_dtbChemotherapy.Clear();
                dtgChemotherapy.Enabled = false;
            }

        }

        private void tabPage9_Click(object sender, EventArgs e)
        {

        }
        int intErrorRow = 0;
        private bool dtgOperationCurrentCellChanged()
        {
            if (isFirstCellChange != 0 || tabControl2.SelectedIndex != 2)
            {
                tabControl2.SelectedIndex = 2;
                this.dtgOperation.Focus();
                dtgOperation.CurrentCell = new DataGridCell(intErrorRow, 1);
                isFirstCellChange = 0;
                return false;
            }

            int m_intCurrentGridRowNumber = this.dtgOperation.CurrentRowIndex;
            int m_intCurrentTableRowNumber = this.m_dtbOperationDetail.Rows.Count;
            DateTime dtmTemp;
            DataRow m_dtrOperation;
            object[] m_objRes;
            int intOperationDate;
            int intInpatientDate;
            int intOutPatientDate;
            for (int i = 0; i < m_intCurrentTableRowNumber; i++)
            {
                m_dtrOperation = this.m_dtbOperationDetail.Rows[i];
                m_objRes = m_dtrOperation.ItemArray;
                if (m_objRes[1].ToString() != "")
                {
                    DateTime.TryParse(m_objRes[1].ToString(), out dtmTemp);
                    if (dtmTemp == DateTime.MinValue)
                    {
                        m_objRes[1] = "";
                        break;
                    }
                    else
                    {
                        intOperationDate = Convert.ToInt32(Convert.ToDateTime(m_objRes[1].ToString()).ToString("yyyyMMdd"));
                        intInpatientDate = Convert.ToInt32(m_objSelectedPatient.m_DtmSelectedInDate.ToString("yyyyMMdd"));
                        intOutPatientDate = m_lblOutHospitalDate.Text == "" ? Convert.ToInt32(DateTime.Now.ToString("yyyyMMdd")) : Convert.ToInt32(Convert.ToDateTime(m_lblOutHospitalDate.Text).ToString("yyyyMMdd"));
                        if (intOperationDate < intInpatientDate || intOperationDate > intOutPatientDate)
                        {
                            isFirstCellChange++;
                            clsPublicFunction.ShowInformationMessageBox("手术操作时间应介于入院日期和出院日期之间！");
                            tabControl2.SelectedIndex = 2;
                            this.dtgOperation.Focus();
                            dtgOperation.CurrentCell = new DataGridCell(i, 1);
                            intErrorRow = i;
                            isFirstCellChange = 0;
                            m_blnIsDateRight = false;
                            return false;
                        }
                    }
                }
            }
            m_blnIsDateRight = true;
            return true;
        }

        private bool dtgChemotherapyCurrentCellChanged()
        {
            if (isFirstCellChange != 0 || tabControl2.SelectedIndex != 3)
            {
                tabControl2.SelectedIndex = 3;
                dtgChemotherapy.Focus();
                dtgChemotherapy.CurrentCell = new DataGridCell(intErrorRow, 0);
                isFirstCellChange = 0;
                return false;
            }
            int m_intCurrentGridRowNumber = this.dtgChemotherapy.CurrentRowIndex;
            int m_intCurrentTableRowNumber = this.m_dtbChemotherapy.Rows.Count;
            DateTime dtmTemp;
            DataRow m_dtrChemotherapy;
            object[] m_objRes;
            int intChemotherapyDate;
            int intInpatientDate;
            int intOutPatientDate;
            for (int i = 0; i < m_intCurrentTableRowNumber; i++)
            {
                m_dtrChemotherapy = this.m_dtbChemotherapy.Rows[i];
                m_objRes = m_dtrChemotherapy.ItemArray;
                if (m_objRes[0].ToString() != "")
                {
                    DateTime.TryParse(m_objRes[0].ToString(), out dtmTemp);
                    if (dtmTemp == DateTime.MinValue)
                    {
                        m_objRes[0] = "";
                        break;
                    }
                    else
                    {
                        intChemotherapyDate = Convert.ToInt32(Convert.ToDateTime(m_objRes[0].ToString()).ToString("yyyyMMdd"));
                        intInpatientDate = Convert.ToInt32(m_objSelectedPatient.m_DtmSelectedInDate.ToString("yyyyMMdd"));
                        intOutPatientDate = m_lblOutHospitalDate.Text == "" ? Convert.ToInt32(DateTime.Now.ToString("yyyyMMdd")) : Convert.ToInt32(Convert.ToDateTime(m_lblOutHospitalDate.Text).ToString("yyyyMMdd"));
                        if (intChemotherapyDate < intInpatientDate || intChemotherapyDate > intOutPatientDate)
                        {
                            isFirstCellChange++;
                            clsPublicFunction.ShowInformationMessageBox("化疗用药时间时间应介于入院日期和出院日期之间！");
                            tabControl2.SelectedIndex = 3;
                            dtgChemotherapy.Focus();
                            dtgChemotherapy.CurrentCell = new DataGridCell(i, 0);
                            intErrorRow = i;
                            isFirstCellChange = 0;
                            m_blnIsDateRight = false;
                            return false;
                        }
                    }
                }
            }
            m_blnIsDateRight = true;
            return true;
        }

        private void dtgChemotherapy_CurrentCellChanged(object sender, EventArgs e)
        {
            dtgChemotherapyCurrentCellChanged();
        }

        private void dtgChemotherapy_Leave(object sender, EventArgs e)
        {
            dtgChemotherapyCurrentCellChanged();
        }
        private void dtgOperation_Leave(object sender, EventArgs e)
        {
            //dtgOperationCurrentCellChanged();
            m_lblQueryTips.Visible = false;
            m_timShowTips.Enabled = false;
        }


        #region 检查必须输入的信息
        /// <summary>
        /// 按顺序检查必要信息，遇到为空的返回相关提示信息，以便通知用户
        /// </summary>
        /// <returns></returns>
        private string m_chkForCmdCommit_Click()
        {
            //入院后确诊日期在入院3天后
            if (Convert.ToDateTime(dtpConfirmDiagnosisDate.Value.ToShortDateString()) > Convert.ToDateTime(m_objSelectedPatient.m_DtmSelectedInDate.AddDays(3).ToShortDateString()))
            {
                if (MessageBox.Show("入院后确诊日期在入院3天之后，是否继续保存？", "提示", MessageBoxButtons.YesNo) == DialogResult.No)
                {
                    if (this.tabControl2.SelectedTab != this.tabPage6)
                        this.tabControl2.SelectedTab = this.tabPage6;
                    dtpConfirmDiagnosisDate.Focus();
                    return "";
                }
            }
            //主要诊断只要填了诊断内容，疗效必填
            if (txtMainDiagnosis.Text != "")
            {
                if (m_cboMainSeq.Text == "")
                {
                    MessageBox.Show("已填写了主要诊断，请填写疗效！");
                    if (this.tabControl2.SelectedTab != this.tabPage7)
                        this.tabControl2.SelectedTab = this.tabPage7;
                    m_cboMainSeq.Focus();
                    return "主要诊断疗效必填！";
                }
            }
            //手术日期应在入院日期和出院日期之间
            if (m_dtbOperationDetail.Rows.Count > 0)
            {
                DateTime dtmInpatientDate = Convert.ToDateTime(m_objSelectedPatient.m_DtmSelectedInDate.ToShortDateString());
                DateTime dtmOutPatientDate = m_lblOutHospitalDate.Text == "" ? Convert.ToDateTime(DateTime.Now.ToShortDateString()) : Convert.ToDateTime(Convert.ToDateTime(m_lblOutHospitalDate.Text).ToShortDateString());
                DateTime dtmOperationDate = DateTime.Now;

                for (int i = 0; i < m_dtbOperationDetail.Rows.Count; i++)
                {
                    dtmOperationDate = Convert.ToDateTime(m_dtbOperationDetail.Rows[i][1]);
                    if (dtmOperationDate >= dtmInpatientDate && dtmOperationDate <= dtmOutPatientDate)
                        continue;
                    else
                    {
                        MessageBox.Show("手术日期应在入院日期和出院日期之间！");
                        if (this.tabControl2.SelectedTab != this.tabPage8)
                            this.tabControl2.SelectedTab = this.tabPage8;
                        dtgOperation.Focus();
                        dtgOperation.CurrentCell = new DataGridCell(i, 1);
                        return "手术日期应在入院日期和出院日期之间！";
                    }

                }
            }
            //其他诊断只要填了诊断内容，疗效必填
            if (m_dtbOtherDiagnosis.Rows.Count > 0)
            {
                for (int i = 0; i < m_dtbOtherDiagnosis.Rows.Count; i++)
                {
                    if (m_dtbOtherDiagnosis.Rows[i].RowState == DataRowState.Deleted
                        || m_dtbOtherDiagnosis.Rows[i].RowState == DataRowState.Detached)
                    {
                        continue;
                    }
                    if (m_dtbOtherDiagnosis.Rows[i][2].ToString() != "")
                        continue;
                    else
                    {
                        MessageBox.Show("其他诊断中已填写了诊断内容，请填写疗效！");
                        if (this.tabControl2.SelectedTab != this.tabPage7)
                            this.tabControl2.SelectedTab = this.tabPage7;
                        dgDiagnosis3.Focus();
                        dgDiagnosis3.CurrentCell = new DataGridCell(i, 2);
                        return "其他诊断疗效必填！";
                    }

                }
            }
            //医院感染名称只要填了诊断内容（诊断内容为‘无’时疗效可以不填），疗效必填
            if (m_dtbInfectionDiagnosis.Rows.Count > 0)
            {
                for (int i = 0; i < m_dtbInfectionDiagnosis.Rows.Count; i++)
                {
                    if (m_dtbInfectionDiagnosis.Rows[i].RowState == DataRowState.Deleted
                        || m_dtbInfectionDiagnosis.Rows[i].RowState == DataRowState.Detached)
                    {
                        continue;
                    }
                    if (m_dtbInfectionDiagnosis.Rows[i][2].ToString() == "" && m_dtbInfectionDiagnosis.Rows[i][0].ToString().Trim() == "无")
                        continue;
                    else if (m_dtbInfectionDiagnosis.Rows[i][2].ToString() != "")
                        continue;
                    else
                    {
                        MessageBox.Show("医院感染名称中已填写了诊断内容，请填写疗效！");
                        if (this.tabControl2.SelectedTab != this.tabPage7)
                            this.tabControl2.SelectedTab = this.tabPage7;
                        dgDiagnosis2.Focus();
                        dgDiagnosis2.CurrentCell = new DataGridCell(i, 2);
                        return "医院感染名称疗效必填！";
                    }

                }
            }
            //填写了化疗用药，疗效必填
            if (m_dtbChemotherapy.Rows.Count > 0)
            {
                for (int i = 0; i < m_dtbChemotherapy.Rows.Count; i++)
                {
                    if (m_dtbChemotherapy.Rows[i][3].ToString() == "True"
                        || m_dtbChemotherapy.Rows[i][4].ToString() == "True"
                        || m_dtbChemotherapy.Rows[i][5].ToString() == "True"
                        || m_dtbChemotherapy.Rows[i][6].ToString() == "True"
                        || m_dtbChemotherapy.Rows[i][7].ToString() == "True"
                        || m_dtbChemotherapy.Rows[i][8].ToString() == "True"
                         )
                        continue;
                    else
                    {
                        MessageBox.Show("化疗用药疗效必填！");
                        if (this.tabControl2.SelectedTab != this.tabPage8)
                            this.tabControl2.SelectedTab = this.tabPage8;
                        dtgOperation.Focus();
                        dtgOperation.CurrentCell = new DataGridCell(i, 3);
                        return "化疗用药疗效必填！";
                    }

                }

            }
            //婴儿体重必填
            if (m_dtbBaby.Rows.Count > 0)
            {
                for (int i = 0; i < m_dtbBaby.Rows.Count; i++)
                {
                    if (m_dtbBaby.Rows[i][6].ToString() != "")
                        continue;
                    else
                    {
                        MessageBox.Show("婴儿体重必填！");
                        if (this.tabControl2.SelectedTab != this.tabPage8)
                            this.tabControl2.SelectedTab = this.tabPage8;
                        dtgBaby.Focus();
                        dtgBaby.CurrentCell = new DataGridCell(i, 6);
                        return "婴儿体重必填！";
                    }

                }

            }
            //填写了手术、操作名称，术者必填；填写了麻醉方式，麻醉医师必填
            if (m_dtbOperationDetail.Rows.Count > 0)
            {
                for (int i = 0; i < m_dtbOperationDetail.Rows.Count; i++)
                {
                    if (m_dtbOperationDetail.Rows[i][2].ToString() != "")
                    {
                        if (m_dtbOperationDetail.Rows[i][10].ToString() == "")
                        {
                            MessageBox.Show("手术、操作名称已填，请填写术者！");
                            if (this.tabControl2.SelectedTab != this.tabPage8)
                                this.tabControl2.SelectedTab = this.tabPage8;
                            dtgOperation.Focus();
                            dtgOperation.CurrentCell = new DataGridCell(i, 3);
                            return "术者必填！";
                        }
                    }
                    if (m_dtbOperationDetail.Rows[i][6].ToString() != "")
                    {
                        if (m_dtbOperationDetail.Rows[i][13].ToString() != "")
                            continue;
                        else
                        {
                            MessageBox.Show("麻醉方式已填，请填写麻醉医师！");
                            if (this.tabControl2.SelectedTab != this.tabPage8)
                                this.tabControl2.SelectedTab = this.tabPage8;
                            dtgOperation.Focus();
                            dtgOperation.CurrentCell = new DataGridCell(i, 8);
                            return "麻醉医师必填！";
                        }
                    }
                }

            }

            if (m_ObjCurrentArea.m_strDEPTNAME_VCHR.IndexOf("儿科") >= 0)
            {
                if (!string.IsNullOrEmpty(m_txtMarried.Text.Trim()) && m_txtMarried.Text.Trim() != "未婚"
                    && m_txtMarried.Text.Trim() != "其他")
                {
                    MessageBox.Show("儿科病人婚姻状况不能为已婚！");
                    this.tabControl2.SelectedTab = this.tabPage6;
                    m_txtMarried.Focus();
                    return "儿科病人婚姻状况不能为已婚！ ";
                }
            }

            #region 不对身份证号码及邮编作判断
            /*
            if (!string.IsNullOrEmpty(this.m_txtIDCard.Text))
            {
                string strID = this.m_txtIDCard.Text.Trim();
                string BirthDay = string.Empty;
                if (strID.Length == 15)
                {
                    BirthDay = "19" + strID.Substring(6, 2) + "-" + strID.Substring(8, 2) + "-" + strID.Substring(10, 2);

                }
                else if (strID.Length == 18)
                {
                    BirthDay = strID.Substring(6, 4) + "-" + strID.Substring(10, 2) + "-" + strID.Substring(12, 2);
                }
                else
                {
                    MessageBox.Show("身份证号码不合法！");
                    this.tabControl2.SelectedTab = this.tabPage6;
                    m_txtIDCard.Focus();
                    return "身份证号码不合法！ ";
                }
                if (!string.IsNullOrEmpty(BirthDay))
                {
                    if (m_dtpBirthDate.Value.Date != DateTime.Parse(BirthDay).Date)
                    {
                        MessageBox.Show("出生日期与身份证号码不相符！");
                        this.tabControl2.SelectedTab = this.tabPage6;
                        m_txtIDCard.Focus();
                        return "出生日期与身份证号码不相符！ ";
                    }
                }
            }

            if (!string.IsNullOrEmpty(m_txtOfficePC.Text.Trim()))
            {
                int intTemp = 0;
                if (!int.TryParse(m_txtOfficePC.Text.Trim(), out intTemp) || m_txtOfficePC.Text.Trim().Length != 6)
                {
                    MessageBox.Show("邮政编码须为6位数字！");
                    this.tabControl2.SelectedTab = this.tabPage6;
                    m_txtOfficePC.Focus();
                    return "邮政编码须为6位数字！ ";
                }
            }

            if (!string.IsNullOrEmpty(m_txtHomePC.Text.Trim()))
            {
                int intTemp = 0;
                if (!int.TryParse(m_txtHomePC.Text.Trim(), out intTemp) || m_txtHomePC.Text.Trim().Length != 6)
                {
                    MessageBox.Show("邮政编码须为6位数字！");
                    this.tabControl2.SelectedTab = this.tabPage6;
                    m_txtHomePC.Focus();
                    return "邮政编码须为6位数字！ ";
                }
            }

            if (!string.IsNullOrEmpty(m_txtLinkManzipcode.Text.Trim()))
            {
                int intTemp = 0;
                if (!int.TryParse(m_txtLinkManzipcode.Text.Trim(), out intTemp) || m_txtLinkManzipcode.Text.Trim().Length != 6)
                {
                    MessageBox.Show("邮政编码须为6位数字！");
                    this.tabControl2.SelectedTab = this.tabPage6;
                    m_txtLinkManzipcode.Focus();
                    return "邮政编码须为6位数字！ ";
                }
            } 
            */
            #endregion

            // 病案首页保存时是否需要判断必填项； 0，不判断；1，判断；如果没有设置表示要判断。
            if (com.digitalwave.Emr.StaticObject.clsEMR_StaticObject.s_intGetEmrSettingValue("3018") == 0)
                return "true";
            if (!(string.IsNullOrEmpty(txtInsuranceNum.Text.Trim())))
            {
                if (string.IsNullOrEmpty(this.m_txtIDCard.Text))
                {
                    MessageBox.Show("身份证号码为空！");
                    this.tabControl2.SelectedTab = this.tabPage6;
                    m_txtIDCard.Focus();
                    return "身份证号码为空！ ";
                }
            }
            if (string.IsNullOrEmpty(m_cboModeOfPayment.Text.Trim()))
            {
                MessageBox.Show("付款方式为空！");

                m_cboModeOfPayment.Focus();
                return "付款方式为空！";

            }
            if (string.IsNullOrEmpty(this.m_txtHomePhone.Text))
            {
                MessageBox.Show("请输入电话号为空！");
                this.tabControl2.SelectedTab = this.tabPage6;
                m_txtHomePhone.Focus();
                return "电话号为空！";
            }

            if (string.IsNullOrEmpty(this.txtDiagnosis.Text))
            {
                MessageBox.Show("门(急)诊诊断为空！");
                this.tabControl2.SelectedTab = this.tabPage6;
                txtDiagnosis.Focus();
                return "门(急)诊诊断为空！";
            }
            if (string.IsNullOrEmpty(this.txtDoctor.Text))
            {
                MessageBox.Show("门诊（急）医生为空！");
                this.tabControl2.SelectedTab = this.tabPage6;
                txtDoctor.Focus();
                return "门诊（急）医生为空！";
            }
            string m_strHospitalDiagnosis = null;
            for (int i1 = 0; i1 < this.m_dtbInHospitalDiagnosis.Rows.Count; i1++)
            {
                m_strHospitalDiagnosis = m_strHospitalDiagnosis + (m_dtbInHospitalDiagnosis.Rows[i1][0]).ToString();
            }
            if (string.IsNullOrEmpty(m_strHospitalDiagnosis))
            {
                MessageBox.Show("入院诊断为空！");
                this.tabControl2.SelectedTab = this.tabPage6;
                dgDiagnosis1.Focus();
                return "入院诊断为空！";
            }
            if (string.IsNullOrEmpty(this.dtpConfirmDiagnosisDate.Text))
            {
                MessageBox.Show("入院后确诊日期为空！");
                this.tabControl2.SelectedTab = this.tabPage6;
                dtpConfirmDiagnosisDate.Focus();
                return "入院后确诊日期为空！";
            }
            if (rdbQuality3.Checked == false && rdbQuality2.Checked == false && rdbQuality1.Checked == false)
            {
                MessageBox.Show("病案质量为空！");
                this.tabControl2.SelectedTab = this.tabPage7;
                this.lblQualityTitle.Focus();
                return "病案质量为空！";
            }
            if (string.IsNullOrEmpty(this.txtMainDiagnosis.Text))
            {
                MessageBox.Show("主要诊断为空");
                this.tabControl2.SelectedTab = this.tabPage7;
                txtMainDiagnosis.Focus();
                return "主要诊断为空！";
            }
            if (string.IsNullOrEmpty(this.txtSensitive.Text))
            {
                MessageBox.Show("药物过敏为空！");
                this.tabControl2.SelectedTab = this.tabPage7;
                txtSensitive.Focus();
                return "药物过敏为空！";
            }
            if (string.IsNullOrEmpty(this.txtDirectorDt.Text))
            {
                MessageBox.Show("科主任为空！");
                this.tabControl2.SelectedTab = this.tabPage7;
                txtDirectorDt.Focus();
                return "科主任为空！";
            }
            if (string.IsNullOrEmpty(this.txtSubDirectorDt.Text))
            {
                MessageBox.Show("主（副主）任医师为空！");
                this.tabControl2.SelectedTab = this.tabPage7;
                txtSubDirectorDt.Focus();
                return "主（副主）任医师为空！";
            }
            if (string.IsNullOrEmpty(this.txtDt.Text))
            {
                MessageBox.Show("主治医师为空！");
                this.tabControl2.SelectedTab = this.tabPage7;
                txtDt.Focus();
                return "主治医师为空！";
            }
            if (string.IsNullOrEmpty(this.txtInHospitalDt.Text))
            {
                MessageBox.Show("住院医师为空！");
                this.tabControl2.SelectedTab = this.tabPage7;
                txtInHospitalDt.Focus();
                return "住院医师为空！";
            }
            if (string.IsNullOrEmpty(this.txtQCDt.Text))
            {
                MessageBox.Show("质控医师为空！");
                this.tabControl2.SelectedTab = this.tabPage7;
                txtQCDt.Focus();
                return "质控医师医师为空！";
            }
            if (string.IsNullOrEmpty(this.txtQCNurse.Text))
            {
                MessageBox.Show("质控护士为空！");
                this.tabControl2.SelectedTab = this.tabPage7;
                txtQCNurse.Focus();
                return "质控护士为空！";
            }
            string txtAllBloodType = this.txtRBC.Text + this.txtPLT.Text + this.txtPlasm.Text + this.txtWholeBlood.Text + this.txtOtherBlood.Text;

            if (!rdbBloodTransNoAction.Checked && string.IsNullOrEmpty(txtAllBloodType))
            {
                MessageBox.Show("输血品种为空！");
                this.tabControl2.SelectedTab = this.tabPage10;
                txtRBC.Focus();
                return "输血品种为空！";
            }
            string txtAllNurseLevel = this.txtTOPLevel.Text + this.txtNurseLevelI.Text + this.txtNurseLevelII.Text + this.txtNurseLevelIII.Text + this.txtICU.Text + this.txtSpecialNurse.Text;
            if (string.IsNullOrEmpty(txtAllNurseLevel))
            {
                MessageBox.Show("护理等级信息为空！");
                this.tabControl2.SelectedTab = this.tabPage10;
                txtTOPLevel.Focus();
                return "护理等级信息为空！";
            }
            if (rdbBloodTransActionYes.Checked == false && rdbBloodTransActionNO.Checked == false && rdbBloodTransNoAction.Checked == false)
            {
                MessageBox.Show("输血反应为空！");
                this.tabControl2.SelectedTab = this.tabPage10;
                this.lblBloodTransAction.Focus();
                rdbBloodTransActionYes.Checked = false;
                rdbBloodTransActionNO.Checked = false;
                rdbBloodTransNoAction.Checked = false;
                return "输血反应为空！";
            }

            return "true";

        }
        #endregion

        #region 作废重做
        protected override bool m_blnSubReuse(clsInactiveRecordInfo_VO p_objSelectedValue)
        {
            bool blnIsOK = false;
            if (p_objSelectedValue != null)
            {
                m_mthDiaplayDeletedDetail(p_objSelectedValue.m_StrInpatientId, p_objSelectedValue.m_DtmInpatientDate.ToString("yyyy-MM-dd HH:mm:ss"), p_objSelectedValue.m_DtmOpenDate.ToString("yyyy-MM-dd HH:mm:ss"));
                blnIsOK = true;
            }
            return blnIsOK;
        }

        //infPrintRecord objPrintTool;
        protected override void m_mthSubPreviewInactiveRecord(IWin32Window p_infOwner, clsInactiveRecordInfo_VO p_objSelectedValue)
        {
            if (p_objSelectedValue == null || m_objBaseCurrentPatient == null) return;
            if (com.digitalwave.Emr.StaticObject.clsEMR_StaticObject.s_StrCurrentHospitalNO == "441900001")
            {
                objPrintToolCS = new clsInHospitalMainRecordCSPrintTool(true);
                objPrintToolCS.m_mthInitPrintTool(null);
                clsPrintInfo_InHospitalMainRecord objPrintInfo = new clsPrintInfo_InHospitalMainRecord();

                m_objDomain.m_mthSetPrintInfo(m_objBaseCurrentPatient, p_objSelectedValue.m_DtmInpatientDate, p_objSelectedValue.m_DtmOpenDate, ref objPrintInfo);

                m_mthGetDeletedDetail(p_objSelectedValue.m_StrInpatientId, p_objSelectedValue.m_DtmInpatientDate.ToString("yyyy-MM-dd HH:mm:ss"), p_objSelectedValue.m_DtmOpenDate.ToString("yyyy-MM-dd HH:mm:ss"), ref  objPrintInfo.m_objCollection);

                objPrintToolCS.m_mthInitPrintContent();
            }
            else
            {
                objPrintTool = new clsInHospitalMainRecordPrintTool(true);
                objPrintTool.m_mthInitPrintTool(null);
                clsPrintInfo_InHospitalMainRecord objPrintInfo = new clsPrintInfo_InHospitalMainRecord();

                m_objDomain.m_mthSetPrintInfo(m_objBaseCurrentPatient, p_objSelectedValue.m_DtmInpatientDate, p_objSelectedValue.m_DtmOpenDate, ref objPrintInfo);

                m_mthGetDeletedDetail(p_objSelectedValue.m_StrInpatientId, p_objSelectedValue.m_DtmInpatientDate.ToString("yyyy-MM-dd HH:mm:ss"), p_objSelectedValue.m_DtmOpenDate.ToString("yyyy-MM-dd HH:mm:ss"), ref  objPrintInfo.m_objCollection);

                objPrintTool.m_mthInitPrintContent();
            }
            //未完成

            m_mthStartPrint();
        }

        protected override clsInactiveRecordInfo_VO[] m_objSubGetAllInactiveInfo(clsInactiveRecordInfo_VO p_objSelectedValue)
        {
            clsInactiveRecordInfo_VO[] objArr = null;
            new clsInPatientCaseHistoryDomain().m_lngGetAllInactiveInfo(p_objSelectedValue.m_StrInpatientId, p_objSelectedValue.m_DtmInpatientDate, out objArr);
            return objArr;
        }
        public override bool m_blnIsNewSetInactiveForm
        {
            get { return true; }
        }
        #endregion 作废重做

        private void button1_Click(object sender, EventArgs e)
        {
            txtMainDiagnosis.Text = m_dtbOtherDiagnosis.Rows.Count.ToString();
        }

        private void txtSensitive_TextChanged(object sender, EventArgs e)
        {
            //if (txtSensitive.Text != "无" || txtSensitive.Text != "没有")
            //{
            //    txtSensitive.ForeColor = Color.Red;
            //    txtSensitive.SelectionColor = Color.Red;
            //}
            //else
            //{
            //    txtSensitive.ForeColor = Color.Black;
            //}
        }

        private void txtSensitive_Leave(object sender, EventArgs e)
        {
            //if (txtSensitive.Text != "无" || txtSensitive.Text != "没有")
            //{
            //    txtSensitive.ForeColor = Color.Red;
            //}
        }

        private void m_ctlPatientInfo_Load(object sender, EventArgs e)
        {

        }

        private void m_timShowTips_Tick(object sender, EventArgs e)
        {
            if (m_lblQueryTips.ForeColor == SystemColors.ActiveCaption)
            {
                m_lblQueryTips.ForeColor = Color.Red;
            }
            else if (m_lblQueryTips.ForeColor == Color.Red)
            {
                m_lblQueryTips.ForeColor = SystemColors.ActiveCaption;
            }
        }

        private void dtpConfirmDiagnosisDate_evtValueChanged(object sender, EventArgs e)
        {

        }

        private void txtPathologyDiagnosis_Leave(object sender, EventArgs e)
        {
            if (txtPathologyDiagnosis.Text == "")
            {
                txtAccordClinicWithPathology.Enabled = false;
            }
            else
            {
                txtAccordClinicWithPathology.Enabled = true;
            }
        }

        private void dtgBaby_CurrentCellChanged(object sender, EventArgs e)
        {
            if (dtgBaby.CurrentCell.ColumnNumber == 1)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 1].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 1] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 2] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 1] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 2)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 2].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 2] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 1] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 2] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 3)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 3].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 3] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 4] = false;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 5] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 3] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 4)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 4].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 4] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 3] = false;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 5] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 4] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 5)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 5].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 5] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 4] = false;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 3] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 5] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 7)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 7].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 7] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 8] = false;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 9] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 7] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 8)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 8].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 8] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 7] = false;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 9] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 8] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 9)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 9].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 9] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 7] = false;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 8] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 9] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 10)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 10].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 10] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 11] = false;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 12] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 10] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 11)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 11].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 11] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 10] = false;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 12] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 11] = false;
                }
            }
            else if (dtgBaby.CurrentCell.ColumnNumber == 12)
            {
                if (dtgBaby[dtgBaby.CurrentCell.RowNumber, 12].ToString() == "False")
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 12] = true;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 10] = false;
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 11] = false;
                }
                else
                {
                    dtgBaby[dtgBaby.CurrentCell.RowNumber, 12] = false;
                }
            }

        }

        private void m_txtContactMan_TextChanged(object sender, EventArgs e)
        {
            if (m_objBaseCurrentPatient != null)
            {
                if (m_txtContactMan.Text.Trim() == m_objBaseCurrentPatient.m_StrName)
                {
                    m_txtRelation.Text = "本人";
                }
                else
                {
                    m_txtRelation.Text = string.Empty;
                }
            }
        }

        private void m_dtpBirthDate_evtValueChanged(object sender, EventArgs e)
        {
            if (m_ObjCurrentEmrPatient != null && m_dtpBirthDate.Value.Date > m_ObjCurrentEmrPatient.m_dtmHISInDate.Date)
            {
                MessageBox.Show("出生日期不能大于入院日期！");
                m_dtpBirthDate.Value = m_ObjCurrentEmrPatient.m_dtmHISInDate;
            }
        }

        private void txtHbsAg_TextChanged(object sender, EventArgs e)
        {
            if (txtHbsAg.Text.Trim() != "0" && txtHbsAg.Text.Trim() != "1" && txtHbsAg.Text.Trim() != "2")
            {
                MessageBox.Show("HbsAg检查结果只能填0,1,2");
                txtHbsAg.Text = "0";
            }
        }

        private void txtHCV_Ab_TextChanged(object sender, EventArgs e)
        {
            if (txtHCV_Ab.Text.Trim() != "0" && txtHCV_Ab.Text.Trim() != "1" && txtHCV_Ab.Text.Trim() != "2")
            {
                MessageBox.Show("HCV-Ab检查结果只能填0,1,2");
                txtHCV_Ab.Text = "0";
            }
        }

        private void txtHIV_Ab_TextChanged(object sender, EventArgs e)
        {
            if (txtHIV_Ab.Text.Trim() != "0" && txtHIV_Ab.Text.Trim() != "1" && txtHIV_Ab.Text.Trim() != "2")
            {
                MessageBox.Show("HIV-Ab检查结果只能填0,1,2");
                txtHIV_Ab.Text = "0";
            }
        }

        //private void dtpQCTime_evtValueChanged(object sender, EventArgs e)
        //{  
        //    //if(dtpQCTime.Value.Date < m_ObjCurrentEmrPatient.m_dtmHISInDate.Date){
        //    //    dtpQCTime.Tag = 0;
        //    //}
        //    if (m_ObjCurrentEmrPatient != null && dtpQCTime.Value.Date < m_ObjCurrentEmrPatient.m_dtmHISInDate.Date)
        //    {
        //        //dtpQCTime.Value = m_ObjCurrentEmrPatient.m_dtmHISInDate;

        //        MessageBox.Show("质控日期不能小于入院日期！");
        //        dtpQCTime.Focus();
        //        //dtpQCTime.Tag = 1;
        //        return;
        //    }
        //}
        void dtpQCTime_MouseLeave(object sender, EventArgs e)
        {
            if (m_ObjCurrentEmrPatient != null && dtpQCTime.Value.Date < DateTime.Parse(m_objCollection.m_objContent.m_strInPatientDate))
            {
                MessageBox.Show("质控日期不能小于入院日期！");
                dtpQCTime.Value = DateTime.Parse(m_objCollection.m_objContent.m_strOutPatientDate);
                dtpQCTime.Focus();
                //dtpQCTime.Tag = 1; 
                return;
            }
        }

    }

    #region 图片签名.电子签名
    /// <summary>
    /// 图片签名.电子签名
    /// </summary>
    public class ImageSignature
    {
        public static Image GetEmpSigImage(string empName)
        {
            if (string.IsNullOrEmpty(empName) || empName.Trim() == "")
                return null;
            //using (clsQueryCheckResultSvc svc = (clsQueryCheckResultSvc)com.digitalwave.iCare.common.clsObjectGenerator.objCreatorObjectByType(typeof(clsQueryCheckResultSvc)))
            //{
                byte[] signData = (new weCare.Proxy.ProxyLis03()).Service.GetEmpSign(empName.Trim());
                if (signData != null)
                {
                    MemoryStream ms = new MemoryStream(signData);
                    return Image.FromStream(ms);
                }
            //}
            return null;
        }

        public static Image pictureProcess(Image sourceImage, int targetWidth, int targetHeight)
        {
            int width;//图片最终的宽
            int height;//图片最终的高
            try
            {
                System.Drawing.Imaging.ImageFormat format = sourceImage.RawFormat;
                Bitmap targetPicture = new Bitmap(targetWidth, targetHeight);
                Graphics g = Graphics.FromImage(targetPicture);
                g.Clear(Color.White);

                #region
                //计算缩放图片的大小
                if (sourceImage.Width > targetWidth && sourceImage.Height <= targetHeight)
                {
                    width = targetWidth;
                    height = (width * sourceImage.Height) / sourceImage.Width;
                }
                else if (sourceImage.Width <= targetWidth && sourceImage.Height > targetHeight)
                {
                    height = targetHeight;
                    width = (height * sourceImage.Width) / sourceImage.Height;
                }
                else if (sourceImage.Width <= targetWidth && sourceImage.Height <= targetHeight)
                {
                    width = sourceImage.Width;
                    height = sourceImage.Height;
                }
                else
                {
                    width = targetWidth;
                    height = (width * sourceImage.Height) / sourceImage.Width;
                    if (height > targetHeight)
                    {
                        height = targetHeight;
                        width = (height * sourceImage.Width) / sourceImage.Height;
                    }
                }
                #endregion

                g.DrawImage(sourceImage, (targetWidth - width) / 2, (targetHeight - height) / 2, width, height);
                g.Dispose();
                sourceImage.Dispose();

                return targetPicture;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            return null;
        }
    }
    #endregion

}


