//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.digitalwave.iCare.gui.LIS.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsStatReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsStatReport : global::System.Data.DataSet {
        
        private dtbStatDetailReportDataTable tabledtbStatDetailReport;
        
        private dtbStatTotalReportDataTable tabledtbStatTotalReport;
        
        private dtbCheckPriceDetailDataTable tabledtbCheckPriceDetail;
        
        private dtbCheckPriceTotalDataTable tabledtbCheckPriceTotal;
        
        private dtbScienceStatDataTable tabledtbScienceStat;
        
        private dtbHeadDataTable tabledtbHead;
        
        private dtbDetailDataTable tabledtbDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsStatReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsStatReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtbStatDetailReport"] != null)) {
                    base.Tables.Add(new dtbStatDetailReportDataTable(ds.Tables["dtbStatDetailReport"]));
                }
                if ((ds.Tables["dtbStatTotalReport"] != null)) {
                    base.Tables.Add(new dtbStatTotalReportDataTable(ds.Tables["dtbStatTotalReport"]));
                }
                if ((ds.Tables["dtbCheckPriceDetail"] != null)) {
                    base.Tables.Add(new dtbCheckPriceDetailDataTable(ds.Tables["dtbCheckPriceDetail"]));
                }
                if ((ds.Tables["dtbCheckPriceTotal"] != null)) {
                    base.Tables.Add(new dtbCheckPriceTotalDataTable(ds.Tables["dtbCheckPriceTotal"]));
                }
                if ((ds.Tables["dtbScienceStat"] != null)) {
                    base.Tables.Add(new dtbScienceStatDataTable(ds.Tables["dtbScienceStat"]));
                }
                if ((ds.Tables["dtbHead"] != null)) {
                    base.Tables.Add(new dtbHeadDataTable(ds.Tables["dtbHead"]));
                }
                if ((ds.Tables["dtbDetail"] != null)) {
                    base.Tables.Add(new dtbDetailDataTable(ds.Tables["dtbDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbStatDetailReportDataTable dtbStatDetailReport {
            get {
                return this.tabledtbStatDetailReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbStatTotalReportDataTable dtbStatTotalReport {
            get {
                return this.tabledtbStatTotalReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbCheckPriceDetailDataTable dtbCheckPriceDetail {
            get {
                return this.tabledtbCheckPriceDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbCheckPriceTotalDataTable dtbCheckPriceTotal {
            get {
                return this.tabledtbCheckPriceTotal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbScienceStatDataTable dtbScienceStat {
            get {
                return this.tabledtbScienceStat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbHeadDataTable dtbHead {
            get {
                return this.tabledtbHead;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtbDetailDataTable dtbDetail {
            get {
                return this.tabledtbDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsStatReport cln = ((dsStatReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtbStatDetailReport"] != null)) {
                    base.Tables.Add(new dtbStatDetailReportDataTable(ds.Tables["dtbStatDetailReport"]));
                }
                if ((ds.Tables["dtbStatTotalReport"] != null)) {
                    base.Tables.Add(new dtbStatTotalReportDataTable(ds.Tables["dtbStatTotalReport"]));
                }
                if ((ds.Tables["dtbCheckPriceDetail"] != null)) {
                    base.Tables.Add(new dtbCheckPriceDetailDataTable(ds.Tables["dtbCheckPriceDetail"]));
                }
                if ((ds.Tables["dtbCheckPriceTotal"] != null)) {
                    base.Tables.Add(new dtbCheckPriceTotalDataTable(ds.Tables["dtbCheckPriceTotal"]));
                }
                if ((ds.Tables["dtbScienceStat"] != null)) {
                    base.Tables.Add(new dtbScienceStatDataTable(ds.Tables["dtbScienceStat"]));
                }
                if ((ds.Tables["dtbHead"] != null)) {
                    base.Tables.Add(new dtbHeadDataTable(ds.Tables["dtbHead"]));
                }
                if ((ds.Tables["dtbDetail"] != null)) {
                    base.Tables.Add(new dtbDetailDataTable(ds.Tables["dtbDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtbStatDetailReport = ((dtbStatDetailReportDataTable)(base.Tables["dtbStatDetailReport"]));
            if ((initTable == true)) {
                if ((this.tabledtbStatDetailReport != null)) {
                    this.tabledtbStatDetailReport.InitVars();
                }
            }
            this.tabledtbStatTotalReport = ((dtbStatTotalReportDataTable)(base.Tables["dtbStatTotalReport"]));
            if ((initTable == true)) {
                if ((this.tabledtbStatTotalReport != null)) {
                    this.tabledtbStatTotalReport.InitVars();
                }
            }
            this.tabledtbCheckPriceDetail = ((dtbCheckPriceDetailDataTable)(base.Tables["dtbCheckPriceDetail"]));
            if ((initTable == true)) {
                if ((this.tabledtbCheckPriceDetail != null)) {
                    this.tabledtbCheckPriceDetail.InitVars();
                }
            }
            this.tabledtbCheckPriceTotal = ((dtbCheckPriceTotalDataTable)(base.Tables["dtbCheckPriceTotal"]));
            if ((initTable == true)) {
                if ((this.tabledtbCheckPriceTotal != null)) {
                    this.tabledtbCheckPriceTotal.InitVars();
                }
            }
            this.tabledtbScienceStat = ((dtbScienceStatDataTable)(base.Tables["dtbScienceStat"]));
            if ((initTable == true)) {
                if ((this.tabledtbScienceStat != null)) {
                    this.tabledtbScienceStat.InitVars();
                }
            }
            this.tabledtbHead = ((dtbHeadDataTable)(base.Tables["dtbHead"]));
            if ((initTable == true)) {
                if ((this.tabledtbHead != null)) {
                    this.tabledtbHead.InitVars();
                }
            }
            this.tabledtbDetail = ((dtbDetailDataTable)(base.Tables["dtbDetail"]));
            if ((initTable == true)) {
                if ((this.tabledtbDetail != null)) {
                    this.tabledtbDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsStatReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsStatReport.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("en-US");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtbStatDetailReport = new dtbStatDetailReportDataTable();
            base.Tables.Add(this.tabledtbStatDetailReport);
            this.tabledtbStatTotalReport = new dtbStatTotalReportDataTable();
            base.Tables.Add(this.tabledtbStatTotalReport);
            this.tabledtbCheckPriceDetail = new dtbCheckPriceDetailDataTable();
            base.Tables.Add(this.tabledtbCheckPriceDetail);
            this.tabledtbCheckPriceTotal = new dtbCheckPriceTotalDataTable();
            base.Tables.Add(this.tabledtbCheckPriceTotal);
            this.tabledtbScienceStat = new dtbScienceStatDataTable();
            base.Tables.Add(this.tabledtbScienceStat);
            this.tabledtbHead = new dtbHeadDataTable();
            base.Tables.Add(this.tabledtbHead);
            this.tabledtbDetail = new dtbDetailDataTable();
            base.Tables.Add(this.tabledtbDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbStatDetailReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbStatTotalReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbCheckPriceDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbCheckPriceTotal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbScienceStat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbHead() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtbDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsStatReport ds = new dsStatReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtbStatDetailReportRowChangeEventHandler(object sender, dtbStatDetailReportRowChangeEvent e);
        
        public delegate void dtbStatTotalReportRowChangeEventHandler(object sender, dtbStatTotalReportRowChangeEvent e);
        
        public delegate void dtbCheckPriceDetailRowChangeEventHandler(object sender, dtbCheckPriceDetailRowChangeEvent e);
        
        public delegate void dtbCheckPriceTotalRowChangeEventHandler(object sender, dtbCheckPriceTotalRowChangeEvent e);
        
        public delegate void dtbScienceStatRowChangeEventHandler(object sender, dtbScienceStatRowChangeEvent e);
        
        public delegate void dtbHeadRowChangeEventHandler(object sender, dtbHeadRowChangeEvent e);
        
        public delegate void dtbDetailRowChangeEventHandler(object sender, dtbDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbStatDetailReportDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntotal_stat_group_count;
            
            private global::System.Data.DataColumn columntotal_work_count;
            
            private global::System.Data.DataColumn columnstat_group_id_chr;
            
            private global::System.Data.DataColumn columnstat_group_name_vchr;
            
            private global::System.Data.DataColumn columnstat_group_print_title;
            
            private global::System.Data.DataColumn columnwork_group_id_chr;
            
            private global::System.Data.DataColumn columnwork_group_name_vchr;
            
            private global::System.Data.DataColumn columnwork_group_print_title;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatDetailReportDataTable() {
                this.TableName = "dtbStatDetailReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbStatDetailReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbStatDetailReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_stat_group_countColumn {
                get {
                    return this.columntotal_stat_group_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_work_countColumn {
                get {
                    return this.columntotal_work_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stat_group_id_chrColumn {
                get {
                    return this.columnstat_group_id_chr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stat_group_name_vchrColumn {
                get {
                    return this.columnstat_group_name_vchr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stat_group_print_titleColumn {
                get {
                    return this.columnstat_group_print_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_id_chrColumn {
                get {
                    return this.columnwork_group_id_chr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_name_vchrColumn {
                get {
                    return this.columnwork_group_name_vchr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_print_titleColumn {
                get {
                    return this.columnwork_group_print_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatDetailReportRow this[int index] {
                get {
                    return ((dtbStatDetailReportRow)(this.Rows[index]));
                }
            }
            
            public event dtbStatDetailReportRowChangeEventHandler dtbStatDetailReportRowChanging;
            
            public event dtbStatDetailReportRowChangeEventHandler dtbStatDetailReportRowChanged;
            
            public event dtbStatDetailReportRowChangeEventHandler dtbStatDetailReportRowDeleting;
            
            public event dtbStatDetailReportRowChangeEventHandler dtbStatDetailReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbStatDetailReportRow(dtbStatDetailReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatDetailReportRow AdddtbStatDetailReportRow(int total_stat_group_count, double total_work_count, string stat_group_id_chr, string stat_group_name_vchr, string stat_group_print_title, string work_group_id_chr, string work_group_name_vchr, string work_group_print_title) {
                dtbStatDetailReportRow rowdtbStatDetailReportRow = ((dtbStatDetailReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        total_stat_group_count,
                        total_work_count,
                        stat_group_id_chr,
                        stat_group_name_vchr,
                        stat_group_print_title,
                        work_group_id_chr,
                        work_group_name_vchr,
                        work_group_print_title};
                rowdtbStatDetailReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbStatDetailReportRow);
                return rowdtbStatDetailReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbStatDetailReportDataTable cln = ((dtbStatDetailReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbStatDetailReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntotal_stat_group_count = base.Columns["total_stat_group_count"];
                this.columntotal_work_count = base.Columns["total_work_count"];
                this.columnstat_group_id_chr = base.Columns["stat_group_id_chr"];
                this.columnstat_group_name_vchr = base.Columns["stat_group_name_vchr"];
                this.columnstat_group_print_title = base.Columns["stat_group_print_title"];
                this.columnwork_group_id_chr = base.Columns["work_group_id_chr"];
                this.columnwork_group_name_vchr = base.Columns["work_group_name_vchr"];
                this.columnwork_group_print_title = base.Columns["work_group_print_title"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntotal_stat_group_count = new global::System.Data.DataColumn("total_stat_group_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_stat_group_count);
                this.columntotal_work_count = new global::System.Data.DataColumn("total_work_count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_work_count);
                this.columnstat_group_id_chr = new global::System.Data.DataColumn("stat_group_id_chr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstat_group_id_chr);
                this.columnstat_group_name_vchr = new global::System.Data.DataColumn("stat_group_name_vchr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstat_group_name_vchr);
                this.columnstat_group_print_title = new global::System.Data.DataColumn("stat_group_print_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstat_group_print_title);
                this.columnwork_group_id_chr = new global::System.Data.DataColumn("work_group_id_chr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_id_chr);
                this.columnwork_group_name_vchr = new global::System.Data.DataColumn("work_group_name_vchr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_name_vchr);
                this.columnwork_group_print_title = new global::System.Data.DataColumn("work_group_print_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_print_title);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatDetailReportRow NewdtbStatDetailReportRow() {
                return ((dtbStatDetailReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbStatDetailReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbStatDetailReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbStatDetailReportRowChanged != null)) {
                    this.dtbStatDetailReportRowChanged(this, new dtbStatDetailReportRowChangeEvent(((dtbStatDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbStatDetailReportRowChanging != null)) {
                    this.dtbStatDetailReportRowChanging(this, new dtbStatDetailReportRowChangeEvent(((dtbStatDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbStatDetailReportRowDeleted != null)) {
                    this.dtbStatDetailReportRowDeleted(this, new dtbStatDetailReportRowChangeEvent(((dtbStatDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbStatDetailReportRowDeleting != null)) {
                    this.dtbStatDetailReportRowDeleting(this, new dtbStatDetailReportRowChangeEvent(((dtbStatDetailReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbStatDetailReportRow(dtbStatDetailReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStatReport ds = new dsStatReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbStatDetailReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbStatTotalReportDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnwork_group_id_chr;
            
            private global::System.Data.DataColumn columnwork_group_name_vchr;
            
            private global::System.Data.DataColumn columnwork_group_print_title;
            
            private global::System.Data.DataColumn columntotal_work_count;
            
            private global::System.Data.DataColumn columntotal_raw_work_count;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatTotalReportDataTable() {
                this.TableName = "dtbStatTotalReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbStatTotalReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbStatTotalReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_id_chrColumn {
                get {
                    return this.columnwork_group_id_chr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_name_vchrColumn {
                get {
                    return this.columnwork_group_name_vchr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_print_titleColumn {
                get {
                    return this.columnwork_group_print_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_work_countColumn {
                get {
                    return this.columntotal_work_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_raw_work_countColumn {
                get {
                    return this.columntotal_raw_work_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatTotalReportRow this[int index] {
                get {
                    return ((dtbStatTotalReportRow)(this.Rows[index]));
                }
            }
            
            public event dtbStatTotalReportRowChangeEventHandler dtbStatTotalReportRowChanging;
            
            public event dtbStatTotalReportRowChangeEventHandler dtbStatTotalReportRowChanged;
            
            public event dtbStatTotalReportRowChangeEventHandler dtbStatTotalReportRowDeleting;
            
            public event dtbStatTotalReportRowChangeEventHandler dtbStatTotalReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbStatTotalReportRow(dtbStatTotalReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatTotalReportRow AdddtbStatTotalReportRow(string work_group_id_chr, string work_group_name_vchr, string work_group_print_title, double total_work_count, double total_raw_work_count) {
                dtbStatTotalReportRow rowdtbStatTotalReportRow = ((dtbStatTotalReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        work_group_id_chr,
                        work_group_name_vchr,
                        work_group_print_title,
                        total_work_count,
                        total_raw_work_count};
                rowdtbStatTotalReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbStatTotalReportRow);
                return rowdtbStatTotalReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbStatTotalReportDataTable cln = ((dtbStatTotalReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbStatTotalReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnwork_group_id_chr = base.Columns["work_group_id_chr"];
                this.columnwork_group_name_vchr = base.Columns["work_group_name_vchr"];
                this.columnwork_group_print_title = base.Columns["work_group_print_title"];
                this.columntotal_work_count = base.Columns["total_work_count"];
                this.columntotal_raw_work_count = base.Columns["total_raw_work_count"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnwork_group_id_chr = new global::System.Data.DataColumn("work_group_id_chr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_id_chr);
                this.columnwork_group_name_vchr = new global::System.Data.DataColumn("work_group_name_vchr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_name_vchr);
                this.columnwork_group_print_title = new global::System.Data.DataColumn("work_group_print_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_print_title);
                this.columntotal_work_count = new global::System.Data.DataColumn("total_work_count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_work_count);
                this.columntotal_raw_work_count = new global::System.Data.DataColumn("total_raw_work_count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_raw_work_count);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatTotalReportRow NewdtbStatTotalReportRow() {
                return ((dtbStatTotalReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbStatTotalReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbStatTotalReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbStatTotalReportRowChanged != null)) {
                    this.dtbStatTotalReportRowChanged(this, new dtbStatTotalReportRowChangeEvent(((dtbStatTotalReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbStatTotalReportRowChanging != null)) {
                    this.dtbStatTotalReportRowChanging(this, new dtbStatTotalReportRowChangeEvent(((dtbStatTotalReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbStatTotalReportRowDeleted != null)) {
                    this.dtbStatTotalReportRowDeleted(this, new dtbStatTotalReportRowChangeEvent(((dtbStatTotalReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbStatTotalReportRowDeleting != null)) {
                    this.dtbStatTotalReportRowDeleting(this, new dtbStatTotalReportRowChangeEvent(((dtbStatTotalReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbStatTotalReportRow(dtbStatTotalReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStatReport ds = new dsStatReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbStatTotalReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbCheckPriceDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnstat_group_id_chr;
            
            private global::System.Data.DataColumn columnstat_group_name_vchr;
            
            private global::System.Data.DataColumn columnstat_group_print_title;
            
            private global::System.Data.DataColumn columnwork_group_id_chr;
            
            private global::System.Data.DataColumn columnwork_group_name_vchr;
            
            private global::System.Data.DataColumn columnwork_group_print_title;
            
            private global::System.Data.DataColumn columncost_num;
            
            private global::System.Data.DataColumn columntotal_apply_unit_count;
            
            private global::System.Data.DataColumn columntotal_cost_count;
            
            private global::System.Data.DataColumn columnapply_unit_name_vchr;
            
            private global::System.Data.DataColumn columnapply_unit_id_chr;
            
            private global::System.Data.DataColumn columnprice_num;
            
            private global::System.Data.DataColumn columntotal_price_count;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceDetailDataTable() {
                this.TableName = "dtbCheckPriceDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbCheckPriceDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbCheckPriceDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stat_group_id_chrColumn {
                get {
                    return this.columnstat_group_id_chr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stat_group_name_vchrColumn {
                get {
                    return this.columnstat_group_name_vchr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stat_group_print_titleColumn {
                get {
                    return this.columnstat_group_print_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_id_chrColumn {
                get {
                    return this.columnwork_group_id_chr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_name_vchrColumn {
                get {
                    return this.columnwork_group_name_vchr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_print_titleColumn {
                get {
                    return this.columnwork_group_print_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cost_numColumn {
                get {
                    return this.columncost_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_apply_unit_countColumn {
                get {
                    return this.columntotal_apply_unit_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_cost_countColumn {
                get {
                    return this.columntotal_cost_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apply_unit_name_vchrColumn {
                get {
                    return this.columnapply_unit_name_vchr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apply_unit_id_chrColumn {
                get {
                    return this.columnapply_unit_id_chr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price_numColumn {
                get {
                    return this.columnprice_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_price_countColumn {
                get {
                    return this.columntotal_price_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceDetailRow this[int index] {
                get {
                    return ((dtbCheckPriceDetailRow)(this.Rows[index]));
                }
            }
            
            public event dtbCheckPriceDetailRowChangeEventHandler dtbCheckPriceDetailRowChanging;
            
            public event dtbCheckPriceDetailRowChangeEventHandler dtbCheckPriceDetailRowChanged;
            
            public event dtbCheckPriceDetailRowChangeEventHandler dtbCheckPriceDetailRowDeleting;
            
            public event dtbCheckPriceDetailRowChangeEventHandler dtbCheckPriceDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbCheckPriceDetailRow(dtbCheckPriceDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceDetailRow AdddtbCheckPriceDetailRow(string stat_group_id_chr, string stat_group_name_vchr, string stat_group_print_title, string work_group_id_chr, string work_group_name_vchr, string work_group_print_title, double cost_num, int total_apply_unit_count, double total_cost_count, string apply_unit_name_vchr, string apply_unit_id_chr, string price_num, double total_price_count) {
                dtbCheckPriceDetailRow rowdtbCheckPriceDetailRow = ((dtbCheckPriceDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        stat_group_id_chr,
                        stat_group_name_vchr,
                        stat_group_print_title,
                        work_group_id_chr,
                        work_group_name_vchr,
                        work_group_print_title,
                        cost_num,
                        total_apply_unit_count,
                        total_cost_count,
                        apply_unit_name_vchr,
                        apply_unit_id_chr,
                        price_num,
                        total_price_count};
                rowdtbCheckPriceDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbCheckPriceDetailRow);
                return rowdtbCheckPriceDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbCheckPriceDetailDataTable cln = ((dtbCheckPriceDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbCheckPriceDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstat_group_id_chr = base.Columns["stat_group_id_chr"];
                this.columnstat_group_name_vchr = base.Columns["stat_group_name_vchr"];
                this.columnstat_group_print_title = base.Columns["stat_group_print_title"];
                this.columnwork_group_id_chr = base.Columns["work_group_id_chr"];
                this.columnwork_group_name_vchr = base.Columns["work_group_name_vchr"];
                this.columnwork_group_print_title = base.Columns["work_group_print_title"];
                this.columncost_num = base.Columns["cost_num"];
                this.columntotal_apply_unit_count = base.Columns["total_apply_unit_count"];
                this.columntotal_cost_count = base.Columns["total_cost_count"];
                this.columnapply_unit_name_vchr = base.Columns["apply_unit_name_vchr"];
                this.columnapply_unit_id_chr = base.Columns["apply_unit_id_chr"];
                this.columnprice_num = base.Columns["price_num"];
                this.columntotal_price_count = base.Columns["total_price_count"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstat_group_id_chr = new global::System.Data.DataColumn("stat_group_id_chr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstat_group_id_chr);
                this.columnstat_group_name_vchr = new global::System.Data.DataColumn("stat_group_name_vchr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstat_group_name_vchr);
                this.columnstat_group_print_title = new global::System.Data.DataColumn("stat_group_print_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstat_group_print_title);
                this.columnwork_group_id_chr = new global::System.Data.DataColumn("work_group_id_chr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_id_chr);
                this.columnwork_group_name_vchr = new global::System.Data.DataColumn("work_group_name_vchr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_name_vchr);
                this.columnwork_group_print_title = new global::System.Data.DataColumn("work_group_print_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_print_title);
                this.columncost_num = new global::System.Data.DataColumn("cost_num", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncost_num);
                this.columntotal_apply_unit_count = new global::System.Data.DataColumn("total_apply_unit_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_apply_unit_count);
                this.columntotal_cost_count = new global::System.Data.DataColumn("total_cost_count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_cost_count);
                this.columnapply_unit_name_vchr = new global::System.Data.DataColumn("apply_unit_name_vchr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapply_unit_name_vchr);
                this.columnapply_unit_id_chr = new global::System.Data.DataColumn("apply_unit_id_chr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapply_unit_id_chr);
                this.columnprice_num = new global::System.Data.DataColumn("price_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_num);
                this.columntotal_price_count = new global::System.Data.DataColumn("total_price_count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_price_count);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceDetailRow NewdtbCheckPriceDetailRow() {
                return ((dtbCheckPriceDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbCheckPriceDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbCheckPriceDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbCheckPriceDetailRowChanged != null)) {
                    this.dtbCheckPriceDetailRowChanged(this, new dtbCheckPriceDetailRowChangeEvent(((dtbCheckPriceDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbCheckPriceDetailRowChanging != null)) {
                    this.dtbCheckPriceDetailRowChanging(this, new dtbCheckPriceDetailRowChangeEvent(((dtbCheckPriceDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbCheckPriceDetailRowDeleted != null)) {
                    this.dtbCheckPriceDetailRowDeleted(this, new dtbCheckPriceDetailRowChangeEvent(((dtbCheckPriceDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbCheckPriceDetailRowDeleting != null)) {
                    this.dtbCheckPriceDetailRowDeleting(this, new dtbCheckPriceDetailRowChangeEvent(((dtbCheckPriceDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbCheckPriceDetailRow(dtbCheckPriceDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStatReport ds = new dsStatReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbCheckPriceDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbCheckPriceTotalDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnwork_group_id_chr;
            
            private global::System.Data.DataColumn columnwork_group_name_vchr;
            
            private global::System.Data.DataColumn columnwork_group_print_title;
            
            private global::System.Data.DataColumn columntotal_price_count;
            
            private global::System.Data.DataColumn columntotal_work_apply_count;
            
            private global::System.Data.DataColumn columntotal_cost_count;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceTotalDataTable() {
                this.TableName = "dtbCheckPriceTotal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbCheckPriceTotalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbCheckPriceTotalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_id_chrColumn {
                get {
                    return this.columnwork_group_id_chr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_name_vchrColumn {
                get {
                    return this.columnwork_group_name_vchr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_group_print_titleColumn {
                get {
                    return this.columnwork_group_print_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_price_countColumn {
                get {
                    return this.columntotal_price_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_work_apply_countColumn {
                get {
                    return this.columntotal_work_apply_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_cost_countColumn {
                get {
                    return this.columntotal_cost_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceTotalRow this[int index] {
                get {
                    return ((dtbCheckPriceTotalRow)(this.Rows[index]));
                }
            }
            
            public event dtbCheckPriceTotalRowChangeEventHandler dtbCheckPriceTotalRowChanging;
            
            public event dtbCheckPriceTotalRowChangeEventHandler dtbCheckPriceTotalRowChanged;
            
            public event dtbCheckPriceTotalRowChangeEventHandler dtbCheckPriceTotalRowDeleting;
            
            public event dtbCheckPriceTotalRowChangeEventHandler dtbCheckPriceTotalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbCheckPriceTotalRow(dtbCheckPriceTotalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceTotalRow AdddtbCheckPriceTotalRow(string work_group_id_chr, string work_group_name_vchr, string work_group_print_title, double total_price_count, double total_work_apply_count, double total_cost_count) {
                dtbCheckPriceTotalRow rowdtbCheckPriceTotalRow = ((dtbCheckPriceTotalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        work_group_id_chr,
                        work_group_name_vchr,
                        work_group_print_title,
                        total_price_count,
                        total_work_apply_count,
                        total_cost_count};
                rowdtbCheckPriceTotalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbCheckPriceTotalRow);
                return rowdtbCheckPriceTotalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbCheckPriceTotalDataTable cln = ((dtbCheckPriceTotalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbCheckPriceTotalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnwork_group_id_chr = base.Columns["work_group_id_chr"];
                this.columnwork_group_name_vchr = base.Columns["work_group_name_vchr"];
                this.columnwork_group_print_title = base.Columns["work_group_print_title"];
                this.columntotal_price_count = base.Columns["total_price_count"];
                this.columntotal_work_apply_count = base.Columns["total_work_apply_count"];
                this.columntotal_cost_count = base.Columns["total_cost_count"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnwork_group_id_chr = new global::System.Data.DataColumn("work_group_id_chr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_id_chr);
                this.columnwork_group_name_vchr = new global::System.Data.DataColumn("work_group_name_vchr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_name_vchr);
                this.columnwork_group_print_title = new global::System.Data.DataColumn("work_group_print_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_group_print_title);
                this.columntotal_price_count = new global::System.Data.DataColumn("total_price_count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_price_count);
                this.columntotal_work_apply_count = new global::System.Data.DataColumn("total_work_apply_count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_work_apply_count);
                this.columntotal_cost_count = new global::System.Data.DataColumn("total_cost_count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_cost_count);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceTotalRow NewdtbCheckPriceTotalRow() {
                return ((dtbCheckPriceTotalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbCheckPriceTotalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbCheckPriceTotalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbCheckPriceTotalRowChanged != null)) {
                    this.dtbCheckPriceTotalRowChanged(this, new dtbCheckPriceTotalRowChangeEvent(((dtbCheckPriceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbCheckPriceTotalRowChanging != null)) {
                    this.dtbCheckPriceTotalRowChanging(this, new dtbCheckPriceTotalRowChangeEvent(((dtbCheckPriceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbCheckPriceTotalRowDeleted != null)) {
                    this.dtbCheckPriceTotalRowDeleted(this, new dtbCheckPriceTotalRowChangeEvent(((dtbCheckPriceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbCheckPriceTotalRowDeleting != null)) {
                    this.dtbCheckPriceTotalRowDeleting(this, new dtbCheckPriceTotalRowChangeEvent(((dtbCheckPriceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbCheckPriceTotalRow(dtbCheckPriceTotalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStatReport ds = new dsStatReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbCheckPriceTotalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbScienceStatDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRESULT_VCHR;
            
            private global::System.Data.DataColumn columnCHECK_DATE_DAT;
            
            private global::System.Data.DataColumn columnPATIENT_NAME_VCHR;
            
            private global::System.Data.DataColumn columnAGE_CHR;
            
            private global::System.Data.DataColumn columnSAMPLE_ID_CHR;
            
            private global::System.Data.DataColumn columnSEX_CHR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbScienceStatDataTable() {
                this.TableName = "dtbScienceStat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbScienceStatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbScienceStatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESULT_VCHRColumn {
                get {
                    return this.columnRESULT_VCHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHECK_DATE_DATColumn {
                get {
                    return this.columnCHECK_DATE_DAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PATIENT_NAME_VCHRColumn {
                get {
                    return this.columnPATIENT_NAME_VCHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGE_CHRColumn {
                get {
                    return this.columnAGE_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SAMPLE_ID_CHRColumn {
                get {
                    return this.columnSAMPLE_ID_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEX_CHRColumn {
                get {
                    return this.columnSEX_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbScienceStatRow this[int index] {
                get {
                    return ((dtbScienceStatRow)(this.Rows[index]));
                }
            }
            
            public event dtbScienceStatRowChangeEventHandler dtbScienceStatRowChanging;
            
            public event dtbScienceStatRowChangeEventHandler dtbScienceStatRowChanged;
            
            public event dtbScienceStatRowChangeEventHandler dtbScienceStatRowDeleting;
            
            public event dtbScienceStatRowChangeEventHandler dtbScienceStatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbScienceStatRow(dtbScienceStatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbScienceStatRow AdddtbScienceStatRow(string RESULT_VCHR, System.DateTime CHECK_DATE_DAT, string PATIENT_NAME_VCHR, string AGE_CHR, string SAMPLE_ID_CHR, string SEX_CHR) {
                dtbScienceStatRow rowdtbScienceStatRow = ((dtbScienceStatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RESULT_VCHR,
                        CHECK_DATE_DAT,
                        PATIENT_NAME_VCHR,
                        AGE_CHR,
                        SAMPLE_ID_CHR,
                        SEX_CHR};
                rowdtbScienceStatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbScienceStatRow);
                return rowdtbScienceStatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbScienceStatDataTable cln = ((dtbScienceStatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbScienceStatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRESULT_VCHR = base.Columns["RESULT_VCHR"];
                this.columnCHECK_DATE_DAT = base.Columns["CHECK_DATE_DAT"];
                this.columnPATIENT_NAME_VCHR = base.Columns["PATIENT_NAME_VCHR"];
                this.columnAGE_CHR = base.Columns["AGE_CHR"];
                this.columnSAMPLE_ID_CHR = base.Columns["SAMPLE_ID_CHR"];
                this.columnSEX_CHR = base.Columns["SEX_CHR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRESULT_VCHR = new global::System.Data.DataColumn("RESULT_VCHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESULT_VCHR);
                this.columnCHECK_DATE_DAT = new global::System.Data.DataColumn("CHECK_DATE_DAT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHECK_DATE_DAT);
                this.columnPATIENT_NAME_VCHR = new global::System.Data.DataColumn("PATIENT_NAME_VCHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENT_NAME_VCHR);
                this.columnAGE_CHR = new global::System.Data.DataColumn("AGE_CHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGE_CHR);
                this.columnSAMPLE_ID_CHR = new global::System.Data.DataColumn("SAMPLE_ID_CHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLE_ID_CHR);
                this.columnSEX_CHR = new global::System.Data.DataColumn("SEX_CHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX_CHR);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbScienceStatRow NewdtbScienceStatRow() {
                return ((dtbScienceStatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbScienceStatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbScienceStatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbScienceStatRowChanged != null)) {
                    this.dtbScienceStatRowChanged(this, new dtbScienceStatRowChangeEvent(((dtbScienceStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbScienceStatRowChanging != null)) {
                    this.dtbScienceStatRowChanging(this, new dtbScienceStatRowChangeEvent(((dtbScienceStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbScienceStatRowDeleted != null)) {
                    this.dtbScienceStatRowDeleted(this, new dtbScienceStatRowChangeEvent(((dtbScienceStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbScienceStatRowDeleting != null)) {
                    this.dtbScienceStatRowDeleting(this, new dtbScienceStatRowChangeEvent(((dtbScienceStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbScienceStatRow(dtbScienceStatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStatReport ds = new dsStatReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbScienceStatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbHeadDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSAMPLE_ID_CHR;
            
            private global::System.Data.DataColumn columnPATIENT_NAME_VCHR;
            
            private global::System.Data.DataColumn columnSEX_CHR;
            
            private global::System.Data.DataColumn columnAGE_CHR;
            
            private global::System.Data.DataColumn columnDEPTNAME_VCHR;
            
            private global::System.Data.DataColumn columnLASTNAME_VCHR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbHeadDataTable() {
                this.TableName = "dtbHead";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbHeadDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbHeadDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SAMPLE_ID_CHRColumn {
                get {
                    return this.columnSAMPLE_ID_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PATIENT_NAME_VCHRColumn {
                get {
                    return this.columnPATIENT_NAME_VCHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEX_CHRColumn {
                get {
                    return this.columnSEX_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGE_CHRColumn {
                get {
                    return this.columnAGE_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPTNAME_VCHRColumn {
                get {
                    return this.columnDEPTNAME_VCHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LASTNAME_VCHRColumn {
                get {
                    return this.columnLASTNAME_VCHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbHeadRow this[int index] {
                get {
                    return ((dtbHeadRow)(this.Rows[index]));
                }
            }
            
            public event dtbHeadRowChangeEventHandler dtbHeadRowChanging;
            
            public event dtbHeadRowChangeEventHandler dtbHeadRowChanged;
            
            public event dtbHeadRowChangeEventHandler dtbHeadRowDeleting;
            
            public event dtbHeadRowChangeEventHandler dtbHeadRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbHeadRow(dtbHeadRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbHeadRow AdddtbHeadRow(string SAMPLE_ID_CHR, string PATIENT_NAME_VCHR, string SEX_CHR, string AGE_CHR, string DEPTNAME_VCHR, string LASTNAME_VCHR) {
                dtbHeadRow rowdtbHeadRow = ((dtbHeadRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SAMPLE_ID_CHR,
                        PATIENT_NAME_VCHR,
                        SEX_CHR,
                        AGE_CHR,
                        DEPTNAME_VCHR,
                        LASTNAME_VCHR};
                rowdtbHeadRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbHeadRow);
                return rowdtbHeadRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbHeadDataTable cln = ((dtbHeadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbHeadDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSAMPLE_ID_CHR = base.Columns["SAMPLE_ID_CHR"];
                this.columnPATIENT_NAME_VCHR = base.Columns["PATIENT_NAME_VCHR"];
                this.columnSEX_CHR = base.Columns["SEX_CHR"];
                this.columnAGE_CHR = base.Columns["AGE_CHR"];
                this.columnDEPTNAME_VCHR = base.Columns["DEPTNAME_VCHR"];
                this.columnLASTNAME_VCHR = base.Columns["LASTNAME_VCHR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSAMPLE_ID_CHR = new global::System.Data.DataColumn("SAMPLE_ID_CHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLE_ID_CHR);
                this.columnPATIENT_NAME_VCHR = new global::System.Data.DataColumn("PATIENT_NAME_VCHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPATIENT_NAME_VCHR);
                this.columnSEX_CHR = new global::System.Data.DataColumn("SEX_CHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX_CHR);
                this.columnAGE_CHR = new global::System.Data.DataColumn("AGE_CHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGE_CHR);
                this.columnDEPTNAME_VCHR = new global::System.Data.DataColumn("DEPTNAME_VCHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTNAME_VCHR);
                this.columnLASTNAME_VCHR = new global::System.Data.DataColumn("LASTNAME_VCHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTNAME_VCHR);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbHeadRow NewdtbHeadRow() {
                return ((dtbHeadRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbHeadRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbHeadRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbHeadRowChanged != null)) {
                    this.dtbHeadRowChanged(this, new dtbHeadRowChangeEvent(((dtbHeadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbHeadRowChanging != null)) {
                    this.dtbHeadRowChanging(this, new dtbHeadRowChangeEvent(((dtbHeadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbHeadRowDeleted != null)) {
                    this.dtbHeadRowDeleted(this, new dtbHeadRowChangeEvent(((dtbHeadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbHeadRowDeleting != null)) {
                    this.dtbHeadRowDeleting(this, new dtbHeadRowChangeEvent(((dtbHeadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbHeadRow(dtbHeadRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStatReport ds = new dsStatReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbHeadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtbDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCHECK_ITEM_NAME_VCHR;
            
            private global::System.Data.DataColumn columnSAMPLE_ID_CHR;
            
            private global::System.Data.DataColumn columnRESULT_VCHR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbDetailDataTable() {
                this.TableName = "dtbDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtbDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHECK_ITEM_NAME_VCHRColumn {
                get {
                    return this.columnCHECK_ITEM_NAME_VCHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SAMPLE_ID_CHRColumn {
                get {
                    return this.columnSAMPLE_ID_CHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESULT_VCHRColumn {
                get {
                    return this.columnRESULT_VCHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbDetailRow this[int index] {
                get {
                    return ((dtbDetailRow)(this.Rows[index]));
                }
            }
            
            public event dtbDetailRowChangeEventHandler dtbDetailRowChanging;
            
            public event dtbDetailRowChangeEventHandler dtbDetailRowChanged;
            
            public event dtbDetailRowChangeEventHandler dtbDetailRowDeleting;
            
            public event dtbDetailRowChangeEventHandler dtbDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtbDetailRow(dtbDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbDetailRow AdddtbDetailRow(string CHECK_ITEM_NAME_VCHR, string SAMPLE_ID_CHR, string RESULT_VCHR) {
                dtbDetailRow rowdtbDetailRow = ((dtbDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CHECK_ITEM_NAME_VCHR,
                        SAMPLE_ID_CHR,
                        RESULT_VCHR};
                rowdtbDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtbDetailRow);
                return rowdtbDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtbDetailDataTable cln = ((dtbDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtbDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCHECK_ITEM_NAME_VCHR = base.Columns["CHECK_ITEM_NAME_VCHR"];
                this.columnSAMPLE_ID_CHR = base.Columns["SAMPLE_ID_CHR"];
                this.columnRESULT_VCHR = base.Columns["RESULT_VCHR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCHECK_ITEM_NAME_VCHR = new global::System.Data.DataColumn("CHECK_ITEM_NAME_VCHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHECK_ITEM_NAME_VCHR);
                this.columnSAMPLE_ID_CHR = new global::System.Data.DataColumn("SAMPLE_ID_CHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLE_ID_CHR);
                this.columnRESULT_VCHR = new global::System.Data.DataColumn("RESULT_VCHR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESULT_VCHR);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbDetailRow NewdtbDetailRow() {
                return ((dtbDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtbDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtbDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtbDetailRowChanged != null)) {
                    this.dtbDetailRowChanged(this, new dtbDetailRowChangeEvent(((dtbDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtbDetailRowChanging != null)) {
                    this.dtbDetailRowChanging(this, new dtbDetailRowChangeEvent(((dtbDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtbDetailRowDeleted != null)) {
                    this.dtbDetailRowDeleted(this, new dtbDetailRowChangeEvent(((dtbDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtbDetailRowDeleting != null)) {
                    this.dtbDetailRowDeleting(this, new dtbDetailRowChangeEvent(((dtbDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtbDetailRow(dtbDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStatReport ds = new dsStatReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtbDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbStatDetailReportRow : global::System.Data.DataRow {
            
            private dtbStatDetailReportDataTable tabledtbStatDetailReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbStatDetailReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbStatDetailReport = ((dtbStatDetailReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int total_stat_group_count {
                get {
                    try {
                        return ((int)(this[this.tabledtbStatDetailReport.total_stat_group_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatDetailReport”中列“total_stat_group_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatDetailReport.total_stat_group_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_work_count {
                get {
                    try {
                        return ((double)(this[this.tabledtbStatDetailReport.total_work_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatDetailReport”中列“total_work_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatDetailReport.total_work_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stat_group_id_chr {
                get {
                    try {
                        return ((string)(this[this.tabledtbStatDetailReport.stat_group_id_chrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatDetailReport”中列“stat_group_id_chr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatDetailReport.stat_group_id_chrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stat_group_name_vchr {
                get {
                    try {
                        return ((string)(this[this.tabledtbStatDetailReport.stat_group_name_vchrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatDetailReport”中列“stat_group_name_vchr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatDetailReport.stat_group_name_vchrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stat_group_print_title {
                get {
                    try {
                        return ((string)(this[this.tabledtbStatDetailReport.stat_group_print_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatDetailReport”中列“stat_group_print_title”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatDetailReport.stat_group_print_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_id_chr {
                get {
                    try {
                        return ((string)(this[this.tabledtbStatDetailReport.work_group_id_chrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatDetailReport”中列“work_group_id_chr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatDetailReport.work_group_id_chrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_name_vchr {
                get {
                    try {
                        return ((string)(this[this.tabledtbStatDetailReport.work_group_name_vchrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatDetailReport”中列“work_group_name_vchr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatDetailReport.work_group_name_vchrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_print_title {
                get {
                    try {
                        return ((string)(this[this.tabledtbStatDetailReport.work_group_print_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatDetailReport”中列“work_group_print_title”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatDetailReport.work_group_print_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_stat_group_countNull() {
                return this.IsNull(this.tabledtbStatDetailReport.total_stat_group_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_stat_group_countNull() {
                this[this.tabledtbStatDetailReport.total_stat_group_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_work_countNull() {
                return this.IsNull(this.tabledtbStatDetailReport.total_work_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_work_countNull() {
                this[this.tabledtbStatDetailReport.total_work_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstat_group_id_chrNull() {
                return this.IsNull(this.tabledtbStatDetailReport.stat_group_id_chrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstat_group_id_chrNull() {
                this[this.tabledtbStatDetailReport.stat_group_id_chrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstat_group_name_vchrNull() {
                return this.IsNull(this.tabledtbStatDetailReport.stat_group_name_vchrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstat_group_name_vchrNull() {
                this[this.tabledtbStatDetailReport.stat_group_name_vchrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstat_group_print_titleNull() {
                return this.IsNull(this.tabledtbStatDetailReport.stat_group_print_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstat_group_print_titleNull() {
                this[this.tabledtbStatDetailReport.stat_group_print_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_id_chrNull() {
                return this.IsNull(this.tabledtbStatDetailReport.work_group_id_chrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_id_chrNull() {
                this[this.tabledtbStatDetailReport.work_group_id_chrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_name_vchrNull() {
                return this.IsNull(this.tabledtbStatDetailReport.work_group_name_vchrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_name_vchrNull() {
                this[this.tabledtbStatDetailReport.work_group_name_vchrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_print_titleNull() {
                return this.IsNull(this.tabledtbStatDetailReport.work_group_print_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_print_titleNull() {
                this[this.tabledtbStatDetailReport.work_group_print_titleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbStatTotalReportRow : global::System.Data.DataRow {
            
            private dtbStatTotalReportDataTable tabledtbStatTotalReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbStatTotalReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbStatTotalReport = ((dtbStatTotalReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_id_chr {
                get {
                    try {
                        return ((string)(this[this.tabledtbStatTotalReport.work_group_id_chrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatTotalReport”中列“work_group_id_chr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatTotalReport.work_group_id_chrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_name_vchr {
                get {
                    try {
                        return ((string)(this[this.tabledtbStatTotalReport.work_group_name_vchrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatTotalReport”中列“work_group_name_vchr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatTotalReport.work_group_name_vchrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_print_title {
                get {
                    try {
                        return ((string)(this[this.tabledtbStatTotalReport.work_group_print_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatTotalReport”中列“work_group_print_title”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatTotalReport.work_group_print_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_work_count {
                get {
                    try {
                        return ((double)(this[this.tabledtbStatTotalReport.total_work_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatTotalReport”中列“total_work_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatTotalReport.total_work_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_raw_work_count {
                get {
                    try {
                        return ((double)(this[this.tabledtbStatTotalReport.total_raw_work_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbStatTotalReport”中列“total_raw_work_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbStatTotalReport.total_raw_work_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_id_chrNull() {
                return this.IsNull(this.tabledtbStatTotalReport.work_group_id_chrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_id_chrNull() {
                this[this.tabledtbStatTotalReport.work_group_id_chrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_name_vchrNull() {
                return this.IsNull(this.tabledtbStatTotalReport.work_group_name_vchrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_name_vchrNull() {
                this[this.tabledtbStatTotalReport.work_group_name_vchrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_print_titleNull() {
                return this.IsNull(this.tabledtbStatTotalReport.work_group_print_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_print_titleNull() {
                this[this.tabledtbStatTotalReport.work_group_print_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_work_countNull() {
                return this.IsNull(this.tabledtbStatTotalReport.total_work_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_work_countNull() {
                this[this.tabledtbStatTotalReport.total_work_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_raw_work_countNull() {
                return this.IsNull(this.tabledtbStatTotalReport.total_raw_work_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_raw_work_countNull() {
                this[this.tabledtbStatTotalReport.total_raw_work_countColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbCheckPriceDetailRow : global::System.Data.DataRow {
            
            private dtbCheckPriceDetailDataTable tabledtbCheckPriceDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbCheckPriceDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbCheckPriceDetail = ((dtbCheckPriceDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stat_group_id_chr {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceDetail.stat_group_id_chrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“stat_group_id_chr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.stat_group_id_chrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stat_group_name_vchr {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceDetail.stat_group_name_vchrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“stat_group_name_vchr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.stat_group_name_vchrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stat_group_print_title {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceDetail.stat_group_print_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“stat_group_print_title”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.stat_group_print_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_id_chr {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceDetail.work_group_id_chrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“work_group_id_chr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.work_group_id_chrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_name_vchr {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceDetail.work_group_name_vchrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“work_group_name_vchr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.work_group_name_vchrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_print_title {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceDetail.work_group_print_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“work_group_print_title”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.work_group_print_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cost_num {
                get {
                    try {
                        return ((double)(this[this.tabledtbCheckPriceDetail.cost_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“cost_num”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.cost_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int total_apply_unit_count {
                get {
                    try {
                        return ((int)(this[this.tabledtbCheckPriceDetail.total_apply_unit_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“total_apply_unit_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.total_apply_unit_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_cost_count {
                get {
                    try {
                        return ((double)(this[this.tabledtbCheckPriceDetail.total_cost_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“total_cost_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.total_cost_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apply_unit_name_vchr {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceDetail.apply_unit_name_vchrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“apply_unit_name_vchr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.apply_unit_name_vchrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apply_unit_id_chr {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceDetail.apply_unit_id_chrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“apply_unit_id_chr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.apply_unit_id_chrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string price_num {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceDetail.price_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“price_num”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.price_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_price_count {
                get {
                    try {
                        return ((double)(this[this.tabledtbCheckPriceDetail.total_price_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceDetail”中列“total_price_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceDetail.total_price_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstat_group_id_chrNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.stat_group_id_chrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstat_group_id_chrNull() {
                this[this.tabledtbCheckPriceDetail.stat_group_id_chrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstat_group_name_vchrNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.stat_group_name_vchrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstat_group_name_vchrNull() {
                this[this.tabledtbCheckPriceDetail.stat_group_name_vchrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstat_group_print_titleNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.stat_group_print_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstat_group_print_titleNull() {
                this[this.tabledtbCheckPriceDetail.stat_group_print_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_id_chrNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.work_group_id_chrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_id_chrNull() {
                this[this.tabledtbCheckPriceDetail.work_group_id_chrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_name_vchrNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.work_group_name_vchrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_name_vchrNull() {
                this[this.tabledtbCheckPriceDetail.work_group_name_vchrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_print_titleNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.work_group_print_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_print_titleNull() {
                this[this.tabledtbCheckPriceDetail.work_group_print_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscost_numNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.cost_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcost_numNull() {
                this[this.tabledtbCheckPriceDetail.cost_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_apply_unit_countNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.total_apply_unit_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_apply_unit_countNull() {
                this[this.tabledtbCheckPriceDetail.total_apply_unit_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_cost_countNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.total_cost_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_cost_countNull() {
                this[this.tabledtbCheckPriceDetail.total_cost_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapply_unit_name_vchrNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.apply_unit_name_vchrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapply_unit_name_vchrNull() {
                this[this.tabledtbCheckPriceDetail.apply_unit_name_vchrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapply_unit_id_chrNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.apply_unit_id_chrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapply_unit_id_chrNull() {
                this[this.tabledtbCheckPriceDetail.apply_unit_id_chrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice_numNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.price_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice_numNull() {
                this[this.tabledtbCheckPriceDetail.price_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_price_countNull() {
                return this.IsNull(this.tabledtbCheckPriceDetail.total_price_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_price_countNull() {
                this[this.tabledtbCheckPriceDetail.total_price_countColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbCheckPriceTotalRow : global::System.Data.DataRow {
            
            private dtbCheckPriceTotalDataTable tabledtbCheckPriceTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbCheckPriceTotalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbCheckPriceTotal = ((dtbCheckPriceTotalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_id_chr {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceTotal.work_group_id_chrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceTotal”中列“work_group_id_chr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceTotal.work_group_id_chrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_name_vchr {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceTotal.work_group_name_vchrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceTotal”中列“work_group_name_vchr”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceTotal.work_group_name_vchrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_group_print_title {
                get {
                    try {
                        return ((string)(this[this.tabledtbCheckPriceTotal.work_group_print_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceTotal”中列“work_group_print_title”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceTotal.work_group_print_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_price_count {
                get {
                    try {
                        return ((double)(this[this.tabledtbCheckPriceTotal.total_price_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceTotal”中列“total_price_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceTotal.total_price_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_work_apply_count {
                get {
                    try {
                        return ((double)(this[this.tabledtbCheckPriceTotal.total_work_apply_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceTotal”中列“total_work_apply_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceTotal.total_work_apply_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_cost_count {
                get {
                    try {
                        return ((double)(this[this.tabledtbCheckPriceTotal.total_cost_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbCheckPriceTotal”中列“total_cost_count”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbCheckPriceTotal.total_cost_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_id_chrNull() {
                return this.IsNull(this.tabledtbCheckPriceTotal.work_group_id_chrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_id_chrNull() {
                this[this.tabledtbCheckPriceTotal.work_group_id_chrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_name_vchrNull() {
                return this.IsNull(this.tabledtbCheckPriceTotal.work_group_name_vchrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_name_vchrNull() {
                this[this.tabledtbCheckPriceTotal.work_group_name_vchrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_group_print_titleNull() {
                return this.IsNull(this.tabledtbCheckPriceTotal.work_group_print_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_group_print_titleNull() {
                this[this.tabledtbCheckPriceTotal.work_group_print_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_price_countNull() {
                return this.IsNull(this.tabledtbCheckPriceTotal.total_price_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_price_countNull() {
                this[this.tabledtbCheckPriceTotal.total_price_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_work_apply_countNull() {
                return this.IsNull(this.tabledtbCheckPriceTotal.total_work_apply_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_work_apply_countNull() {
                this[this.tabledtbCheckPriceTotal.total_work_apply_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_cost_countNull() {
                return this.IsNull(this.tabledtbCheckPriceTotal.total_cost_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_cost_countNull() {
                this[this.tabledtbCheckPriceTotal.total_cost_countColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbScienceStatRow : global::System.Data.DataRow {
            
            private dtbScienceStatDataTable tabledtbScienceStat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbScienceStatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbScienceStat = ((dtbScienceStatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESULT_VCHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbScienceStat.RESULT_VCHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbScienceStat”中列“RESULT_VCHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbScienceStat.RESULT_VCHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CHECK_DATE_DAT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtbScienceStat.CHECK_DATE_DATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbScienceStat”中列“CHECK_DATE_DAT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbScienceStat.CHECK_DATE_DATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PATIENT_NAME_VCHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbScienceStat.PATIENT_NAME_VCHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbScienceStat”中列“PATIENT_NAME_VCHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbScienceStat.PATIENT_NAME_VCHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AGE_CHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbScienceStat.AGE_CHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbScienceStat”中列“AGE_CHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbScienceStat.AGE_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SAMPLE_ID_CHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbScienceStat.SAMPLE_ID_CHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbScienceStat”中列“SAMPLE_ID_CHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbScienceStat.SAMPLE_ID_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX_CHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbScienceStat.SEX_CHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbScienceStat”中列“SEX_CHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbScienceStat.SEX_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESULT_VCHRNull() {
                return this.IsNull(this.tabledtbScienceStat.RESULT_VCHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESULT_VCHRNull() {
                this[this.tabledtbScienceStat.RESULT_VCHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHECK_DATE_DATNull() {
                return this.IsNull(this.tabledtbScienceStat.CHECK_DATE_DATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHECK_DATE_DATNull() {
                this[this.tabledtbScienceStat.CHECK_DATE_DATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPATIENT_NAME_VCHRNull() {
                return this.IsNull(this.tabledtbScienceStat.PATIENT_NAME_VCHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPATIENT_NAME_VCHRNull() {
                this[this.tabledtbScienceStat.PATIENT_NAME_VCHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGE_CHRNull() {
                return this.IsNull(this.tabledtbScienceStat.AGE_CHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGE_CHRNull() {
                this[this.tabledtbScienceStat.AGE_CHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSAMPLE_ID_CHRNull() {
                return this.IsNull(this.tabledtbScienceStat.SAMPLE_ID_CHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSAMPLE_ID_CHRNull() {
                this[this.tabledtbScienceStat.SAMPLE_ID_CHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEX_CHRNull() {
                return this.IsNull(this.tabledtbScienceStat.SEX_CHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEX_CHRNull() {
                this[this.tabledtbScienceStat.SEX_CHRColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbHeadRow : global::System.Data.DataRow {
            
            private dtbHeadDataTable tabledtbHead;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbHeadRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbHead = ((dtbHeadDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SAMPLE_ID_CHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbHead.SAMPLE_ID_CHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbHead”中列“SAMPLE_ID_CHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbHead.SAMPLE_ID_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PATIENT_NAME_VCHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbHead.PATIENT_NAME_VCHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbHead”中列“PATIENT_NAME_VCHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbHead.PATIENT_NAME_VCHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX_CHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbHead.SEX_CHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbHead”中列“SEX_CHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbHead.SEX_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AGE_CHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbHead.AGE_CHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbHead”中列“AGE_CHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbHead.AGE_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPTNAME_VCHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbHead.DEPTNAME_VCHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbHead”中列“DEPTNAME_VCHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbHead.DEPTNAME_VCHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LASTNAME_VCHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbHead.LASTNAME_VCHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbHead”中列“LASTNAME_VCHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbHead.LASTNAME_VCHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSAMPLE_ID_CHRNull() {
                return this.IsNull(this.tabledtbHead.SAMPLE_ID_CHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSAMPLE_ID_CHRNull() {
                this[this.tabledtbHead.SAMPLE_ID_CHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPATIENT_NAME_VCHRNull() {
                return this.IsNull(this.tabledtbHead.PATIENT_NAME_VCHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPATIENT_NAME_VCHRNull() {
                this[this.tabledtbHead.PATIENT_NAME_VCHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEX_CHRNull() {
                return this.IsNull(this.tabledtbHead.SEX_CHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEX_CHRNull() {
                this[this.tabledtbHead.SEX_CHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGE_CHRNull() {
                return this.IsNull(this.tabledtbHead.AGE_CHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGE_CHRNull() {
                this[this.tabledtbHead.AGE_CHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPTNAME_VCHRNull() {
                return this.IsNull(this.tabledtbHead.DEPTNAME_VCHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPTNAME_VCHRNull() {
                this[this.tabledtbHead.DEPTNAME_VCHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLASTNAME_VCHRNull() {
                return this.IsNull(this.tabledtbHead.LASTNAME_VCHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLASTNAME_VCHRNull() {
                this[this.tabledtbHead.LASTNAME_VCHRColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtbDetailRow : global::System.Data.DataRow {
            
            private dtbDetailDataTable tabledtbDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtbDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtbDetail = ((dtbDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHECK_ITEM_NAME_VCHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbDetail.CHECK_ITEM_NAME_VCHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbDetail”中列“CHECK_ITEM_NAME_VCHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbDetail.CHECK_ITEM_NAME_VCHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SAMPLE_ID_CHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbDetail.SAMPLE_ID_CHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbDetail”中列“SAMPLE_ID_CHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbDetail.SAMPLE_ID_CHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESULT_VCHR {
                get {
                    try {
                        return ((string)(this[this.tabledtbDetail.RESULT_VCHRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtbDetail”中列“RESULT_VCHR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtbDetail.RESULT_VCHRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHECK_ITEM_NAME_VCHRNull() {
                return this.IsNull(this.tabledtbDetail.CHECK_ITEM_NAME_VCHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHECK_ITEM_NAME_VCHRNull() {
                this[this.tabledtbDetail.CHECK_ITEM_NAME_VCHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSAMPLE_ID_CHRNull() {
                return this.IsNull(this.tabledtbDetail.SAMPLE_ID_CHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSAMPLE_ID_CHRNull() {
                this[this.tabledtbDetail.SAMPLE_ID_CHRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESULT_VCHRNull() {
                return this.IsNull(this.tabledtbDetail.RESULT_VCHRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESULT_VCHRNull() {
                this[this.tabledtbDetail.RESULT_VCHRColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbStatDetailReportRowChangeEvent : global::System.EventArgs {
            
            private dtbStatDetailReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatDetailReportRowChangeEvent(dtbStatDetailReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatDetailReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbStatTotalReportRowChangeEvent : global::System.EventArgs {
            
            private dtbStatTotalReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatTotalReportRowChangeEvent(dtbStatTotalReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbStatTotalReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbCheckPriceDetailRowChangeEvent : global::System.EventArgs {
            
            private dtbCheckPriceDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceDetailRowChangeEvent(dtbCheckPriceDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbCheckPriceTotalRowChangeEvent : global::System.EventArgs {
            
            private dtbCheckPriceTotalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceTotalRowChangeEvent(dtbCheckPriceTotalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbCheckPriceTotalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbScienceStatRowChangeEvent : global::System.EventArgs {
            
            private dtbScienceStatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbScienceStatRowChangeEvent(dtbScienceStatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbScienceStatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbHeadRowChangeEvent : global::System.EventArgs {
            
            private dtbHeadRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbHeadRowChangeEvent(dtbHeadRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbHeadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtbDetailRowChangeEvent : global::System.EventArgs {
            
            private dtbDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbDetailRowChangeEvent(dtbDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtbDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591