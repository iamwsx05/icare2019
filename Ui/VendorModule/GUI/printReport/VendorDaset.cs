//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace com.digitalwave.iCare.gui.VendorManage.printReport {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class VendorDaset : DataSet {
        
        private verdorTableDataTable tableverdorTable;
        
        public VendorDaset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected VendorDaset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["verdorTable"] != null)) {
                    this.Tables.Add(new verdorTableDataTable(ds.Tables["verdorTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public verdorTableDataTable verdorTable {
            get {
                return this.tableverdorTable;
            }
        }
        
        public override DataSet Clone() {
            VendorDaset cln = ((VendorDaset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["verdorTable"] != null)) {
                this.Tables.Add(new verdorTableDataTable(ds.Tables["verdorTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableverdorTable = ((verdorTableDataTable)(this.Tables["verdorTable"]));
            if ((this.tableverdorTable != null)) {
                this.tableverdorTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "VendorDaset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VendorDaset.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableverdorTable = new verdorTableDataTable();
            this.Tables.Add(this.tableverdorTable);
        }
        
        private bool ShouldSerializeverdorTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void verdorTableRowChangeEventHandler(object sender, verdorTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class verdorTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnUSERCODE_CHR;
            
            private DataColumn columnVENDORNAME_VCHR;
            
            private DataColumn columnVENDORTYPE_Vchr;
            
            private DataColumn columnPRODUCTTYPE_Vchr;
            
            private DataColumn columnADDRESS_VCHR;
            
            private DataColumn columnPHONE_CHR;
            
            private DataColumn columnCONTACTOR_CHR;
            
            private DataColumn columnCONTACTORPHONE_CHR;
            
            private DataColumn columnEMAIL_VCHR;
            
            private DataColumn columnFAX_CHR;
            
            internal verdorTableDataTable() : 
                    base("verdorTable") {
                this.InitClass();
            }
            
            internal verdorTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn USERCODE_CHRColumn {
                get {
                    return this.columnUSERCODE_CHR;
                }
            }
            
            internal DataColumn VENDORNAME_VCHRColumn {
                get {
                    return this.columnVENDORNAME_VCHR;
                }
            }
            
            internal DataColumn VENDORTYPE_VchrColumn {
                get {
                    return this.columnVENDORTYPE_Vchr;
                }
            }
            
            internal DataColumn PRODUCTTYPE_VchrColumn {
                get {
                    return this.columnPRODUCTTYPE_Vchr;
                }
            }
            
            internal DataColumn ADDRESS_VCHRColumn {
                get {
                    return this.columnADDRESS_VCHR;
                }
            }
            
            internal DataColumn PHONE_CHRColumn {
                get {
                    return this.columnPHONE_CHR;
                }
            }
            
            internal DataColumn CONTACTOR_CHRColumn {
                get {
                    return this.columnCONTACTOR_CHR;
                }
            }
            
            internal DataColumn CONTACTORPHONE_CHRColumn {
                get {
                    return this.columnCONTACTORPHONE_CHR;
                }
            }
            
            internal DataColumn EMAIL_VCHRColumn {
                get {
                    return this.columnEMAIL_VCHR;
                }
            }
            
            internal DataColumn FAX_CHRColumn {
                get {
                    return this.columnFAX_CHR;
                }
            }
            
            public verdorTableRow this[int index] {
                get {
                    return ((verdorTableRow)(this.Rows[index]));
                }
            }
            
            public event verdorTableRowChangeEventHandler verdorTableRowChanged;
            
            public event verdorTableRowChangeEventHandler verdorTableRowChanging;
            
            public event verdorTableRowChangeEventHandler verdorTableRowDeleted;
            
            public event verdorTableRowChangeEventHandler verdorTableRowDeleting;
            
            public void AddverdorTableRow(verdorTableRow row) {
                this.Rows.Add(row);
            }
            
            public verdorTableRow AddverdorTableRow(string USERCODE_CHR, string VENDORNAME_VCHR, string VENDORTYPE_Vchr, string PRODUCTTYPE_Vchr, string ADDRESS_VCHR, string PHONE_CHR, string CONTACTOR_CHR, string CONTACTORPHONE_CHR, string EMAIL_VCHR, string FAX_CHR) {
                verdorTableRow rowverdorTableRow = ((verdorTableRow)(this.NewRow()));
                rowverdorTableRow.ItemArray = new object[] {
                        USERCODE_CHR,
                        VENDORNAME_VCHR,
                        VENDORTYPE_Vchr,
                        PRODUCTTYPE_Vchr,
                        ADDRESS_VCHR,
                        PHONE_CHR,
                        CONTACTOR_CHR,
                        CONTACTORPHONE_CHR,
                        EMAIL_VCHR,
                        FAX_CHR};
                this.Rows.Add(rowverdorTableRow);
                return rowverdorTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                verdorTableDataTable cln = ((verdorTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new verdorTableDataTable();
            }
            
            internal void InitVars() {
                this.columnUSERCODE_CHR = this.Columns["USERCODE_CHR"];
                this.columnVENDORNAME_VCHR = this.Columns["VENDORNAME_VCHR"];
                this.columnVENDORTYPE_Vchr = this.Columns["VENDORTYPE_Vchr"];
                this.columnPRODUCTTYPE_Vchr = this.Columns["PRODUCTTYPE_Vchr"];
                this.columnADDRESS_VCHR = this.Columns["ADDRESS_VCHR"];
                this.columnPHONE_CHR = this.Columns["PHONE_CHR"];
                this.columnCONTACTOR_CHR = this.Columns["CONTACTOR_CHR"];
                this.columnCONTACTORPHONE_CHR = this.Columns["CONTACTORPHONE_CHR"];
                this.columnEMAIL_VCHR = this.Columns["EMAIL_VCHR"];
                this.columnFAX_CHR = this.Columns["FAX_CHR"];
            }
            
            private void InitClass() {
                this.columnUSERCODE_CHR = new DataColumn("USERCODE_CHR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUSERCODE_CHR);
                this.columnVENDORNAME_VCHR = new DataColumn("VENDORNAME_VCHR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVENDORNAME_VCHR);
                this.columnVENDORTYPE_Vchr = new DataColumn("VENDORTYPE_Vchr", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVENDORTYPE_Vchr);
                this.columnPRODUCTTYPE_Vchr = new DataColumn("PRODUCTTYPE_Vchr", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPRODUCTTYPE_Vchr);
                this.columnADDRESS_VCHR = new DataColumn("ADDRESS_VCHR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDRESS_VCHR);
                this.columnPHONE_CHR = new DataColumn("PHONE_CHR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPHONE_CHR);
                this.columnCONTACTOR_CHR = new DataColumn("CONTACTOR_CHR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONTACTOR_CHR);
                this.columnCONTACTORPHONE_CHR = new DataColumn("CONTACTORPHONE_CHR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCONTACTORPHONE_CHR);
                this.columnEMAIL_VCHR = new DataColumn("EMAIL_VCHR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEMAIL_VCHR);
                this.columnFAX_CHR = new DataColumn("FAX_CHR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFAX_CHR);
            }
            
            public verdorTableRow NewverdorTableRow() {
                return ((verdorTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new verdorTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(verdorTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.verdorTableRowChanged != null)) {
                    this.verdorTableRowChanged(this, new verdorTableRowChangeEvent(((verdorTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.verdorTableRowChanging != null)) {
                    this.verdorTableRowChanging(this, new verdorTableRowChangeEvent(((verdorTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.verdorTableRowDeleted != null)) {
                    this.verdorTableRowDeleted(this, new verdorTableRowChangeEvent(((verdorTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.verdorTableRowDeleting != null)) {
                    this.verdorTableRowDeleting(this, new verdorTableRowChangeEvent(((verdorTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveverdorTableRow(verdorTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class verdorTableRow : DataRow {
            
            private verdorTableDataTable tableverdorTable;
            
            internal verdorTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableverdorTable = ((verdorTableDataTable)(this.Table));
            }
            
            public string USERCODE_CHR {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.USERCODE_CHRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.USERCODE_CHRColumn] = value;
                }
            }
            
            public string VENDORNAME_VCHR {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.VENDORNAME_VCHRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.VENDORNAME_VCHRColumn] = value;
                }
            }
            
            public string VENDORTYPE_Vchr {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.VENDORTYPE_VchrColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.VENDORTYPE_VchrColumn] = value;
                }
            }
            
            public string PRODUCTTYPE_Vchr {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.PRODUCTTYPE_VchrColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.PRODUCTTYPE_VchrColumn] = value;
                }
            }
            
            public string ADDRESS_VCHR {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.ADDRESS_VCHRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.ADDRESS_VCHRColumn] = value;
                }
            }
            
            public string PHONE_CHR {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.PHONE_CHRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.PHONE_CHRColumn] = value;
                }
            }
            
            public string CONTACTOR_CHR {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.CONTACTOR_CHRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.CONTACTOR_CHRColumn] = value;
                }
            }
            
            public string CONTACTORPHONE_CHR {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.CONTACTORPHONE_CHRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.CONTACTORPHONE_CHRColumn] = value;
                }
            }
            
            public string EMAIL_VCHR {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.EMAIL_VCHRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.EMAIL_VCHRColumn] = value;
                }
            }
            
            public string FAX_CHR {
                get {
                    try {
                        return ((string)(this[this.tableverdorTable.FAX_CHRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("无法获取值，因为它是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableverdorTable.FAX_CHRColumn] = value;
                }
            }
            
            public bool IsUSERCODE_CHRNull() {
                return this.IsNull(this.tableverdorTable.USERCODE_CHRColumn);
            }
            
            public void SetUSERCODE_CHRNull() {
                this[this.tableverdorTable.USERCODE_CHRColumn] = System.Convert.DBNull;
            }
            
            public bool IsVENDORNAME_VCHRNull() {
                return this.IsNull(this.tableverdorTable.VENDORNAME_VCHRColumn);
            }
            
            public void SetVENDORNAME_VCHRNull() {
                this[this.tableverdorTable.VENDORNAME_VCHRColumn] = System.Convert.DBNull;
            }
            
            public bool IsVENDORTYPE_VchrNull() {
                return this.IsNull(this.tableverdorTable.VENDORTYPE_VchrColumn);
            }
            
            public void SetVENDORTYPE_VchrNull() {
                this[this.tableverdorTable.VENDORTYPE_VchrColumn] = System.Convert.DBNull;
            }
            
            public bool IsPRODUCTTYPE_VchrNull() {
                return this.IsNull(this.tableverdorTable.PRODUCTTYPE_VchrColumn);
            }
            
            public void SetPRODUCTTYPE_VchrNull() {
                this[this.tableverdorTable.PRODUCTTYPE_VchrColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDRESS_VCHRNull() {
                return this.IsNull(this.tableverdorTable.ADDRESS_VCHRColumn);
            }
            
            public void SetADDRESS_VCHRNull() {
                this[this.tableverdorTable.ADDRESS_VCHRColumn] = System.Convert.DBNull;
            }
            
            public bool IsPHONE_CHRNull() {
                return this.IsNull(this.tableverdorTable.PHONE_CHRColumn);
            }
            
            public void SetPHONE_CHRNull() {
                this[this.tableverdorTable.PHONE_CHRColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONTACTOR_CHRNull() {
                return this.IsNull(this.tableverdorTable.CONTACTOR_CHRColumn);
            }
            
            public void SetCONTACTOR_CHRNull() {
                this[this.tableverdorTable.CONTACTOR_CHRColumn] = System.Convert.DBNull;
            }
            
            public bool IsCONTACTORPHONE_CHRNull() {
                return this.IsNull(this.tableverdorTable.CONTACTORPHONE_CHRColumn);
            }
            
            public void SetCONTACTORPHONE_CHRNull() {
                this[this.tableverdorTable.CONTACTORPHONE_CHRColumn] = System.Convert.DBNull;
            }
            
            public bool IsEMAIL_VCHRNull() {
                return this.IsNull(this.tableverdorTable.EMAIL_VCHRColumn);
            }
            
            public void SetEMAIL_VCHRNull() {
                this[this.tableverdorTable.EMAIL_VCHRColumn] = System.Convert.DBNull;
            }
            
            public bool IsFAX_CHRNull() {
                return this.IsNull(this.tableverdorTable.FAX_CHRColumn);
            }
            
            public void SetFAX_CHRNull() {
                this[this.tableverdorTable.FAX_CHRColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class verdorTableRowChangeEvent : EventArgs {
            
            private verdorTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public verdorTableRowChangeEvent(verdorTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public verdorTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
